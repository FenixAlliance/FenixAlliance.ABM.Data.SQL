CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE "BusinessSegment" (
    "ID" text NOT NULL,
    "MinEmployees" double precision NOT NULL,
    "MaxEmployees" double precision NOT NULL,
    CONSTRAINT "PK_BusinessSegment" PRIMARY KEY ("ID")
);

CREATE TABLE "BusinessSize" (
    "ID" text NOT NULL,
    "EmployeeLowRangeValue" integer NOT NULL,
    "EmployeeHighRangeValue" integer NOT NULL,
    CONSTRAINT "PK_BusinessSize" PRIMARY KEY ("ID")
);

CREATE TABLE "BusinessType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    CONSTRAINT "PK_BusinessType" PRIMARY KEY ("ID")
);

CREATE TABLE "ContactsGroup" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    CONSTRAINT "PK_ContactsGroup" PRIMARY KEY ("ID")
);

CREATE TABLE "Country" (
    "ID" text NOT NULL,
    "Enabled" boolean NOT NULL,
    "ISOAlpha3" text NULL,
    "ISOAlpha2" text NULL,
    "CountryFlagUrl" text NULL,
    "Name" text NULL,
    "ISO2" text NULL,
    "ISO3" text NULL,
    "PhoneCode" text NULL,
    "CurrencyCode" text NULL,
    "FlagUrl" text NULL,
    "Emoji" text NULL,
    "EmojiUnicode" text NULL,
    "Capital" text NULL,
    "Region" text NULL,
    "LatLng" text NULL,
    "Subregion" text NULL,
    "Population" bigint NOT NULL,
    "Demonym" text NULL,
    "Area" double precision NULL,
    "Gini" double precision NULL,
    "NativeName" text NULL,
    "NumericCode" text NULL,
    "CIOC" text NULL,
    CONSTRAINT "PK_Country" PRIMARY KEY ("ID")
);

CREATE TABLE "CountryLanguage" (
    "Iso639_1" text NOT NULL,
    "Iso639_2" text NULL,
    "Name" text NULL,
    "LanguageNativeName" text NULL,
    CONSTRAINT "PK_CountryLanguage" PRIMARY KEY ("Iso639_1")
);

CREATE TABLE "Entity" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Internal" boolean NOT NULL,
    CONSTRAINT "PK_Entity" PRIMARY KEY ("ID")
);

CREATE TABLE "ExpenseType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Enabled" boolean NOT NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("ID")
);

CREATE TABLE "Fee" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "AddedPercent" numeric NOT NULL,
    "AddedAmount" numeric NOT NULL,
    "TaxPercent" numeric NOT NULL,
    CONSTRAINT "PK_Fee" PRIMARY KEY ("ID")
);

CREATE TABLE "ItemGoogleCategory" (
    "ID" text NOT NULL,
    "Path" text NULL,
    "Icon" text NULL,
    "Name" text NULL,
    "Disabled" boolean NOT NULL,
    "Featured" boolean NOT NULL,
    "DisplayOnMenu" boolean NOT NULL,
    "MenuImage" text NULL,
    "BannerCode" text NULL,
    "BannerImage" text NULL,
    "PrimaryImage" text NULL,
    "StartingAtAmountInUSD" double precision NOT NULL,
    "ParentItemGoogleCategoryID" text NULL,
    CONSTRAINT "PK_ItemGoogleCategory" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemGoogleCategory_ItemGoogleCategory_ParentItemGoogleCateg~" FOREIGN KEY ("ParentItemGoogleCategoryID") REFERENCES "ItemGoogleCategory" ("ID")
);

CREATE TABLE "OpenIddictEntityFrameworkCoreScope" (
    "Id" text NOT NULL,
    "ConcurrencyToken" text NULL,
    "Description" text NULL,
    "Descriptions" text NULL,
    "DisplayName" text NULL,
    "DisplayNames" text NULL,
    "Name" text NULL,
    "Properties" text NULL,
    "Resources" text NULL,
    CONSTRAINT "PK_OpenIddictEntityFrameworkCoreScope" PRIMARY KEY ("Id")
);

CREATE TABLE "RegionalBlock" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Acronym" text NULL,
    CONSTRAINT "PK_RegionalBlock" PRIMARY KEY ("ID")
);

CREATE TABLE "Timezone" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "UtcOffset" text NULL,
    CONSTRAINT "PK_Timezone" PRIMARY KEY ("ID")
);

CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id")
);

CREATE TABLE "Bank" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Image" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CountryID" text NULL,
    CONSTRAINT "PK_Bank" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Bank_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryAltSpelling" (
    "CountryAltSpellingID" integer GENERATED BY DEFAULT AS IDENTITY,
    "CountryID" text NULL,
    "CountryAlternativeSpelling" text NULL,
    CONSTRAINT "PK_CountryAltSpelling" PRIMARY KEY ("CountryAltSpellingID"),
    CONSTRAINT "FK_CountryAltSpelling_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryBorder" (
    "ID" integer GENERATED BY DEFAULT AS IDENTITY,
    "CountryID" text NULL,
    "BorderCountryID" text NULL,
    CONSTRAINT "PK_CountryBorder" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CountryBorder_Country_BorderCountryID" FOREIGN KEY ("BorderCountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_CountryBorder_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryCallingCode" (
    "CountryCallingCodeID" integer GENERATED BY DEFAULT AS IDENTITY,
    "CallingCode" text NULL,
    "CountryID" text NULL,
    CONSTRAINT "PK_CountryCallingCode" PRIMARY KEY ("CountryCallingCodeID"),
    CONSTRAINT "FK_CountryCallingCode_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryNameTranslations" (
    "ID" integer GENERATED BY DEFAULT AS IDENTITY,
    "CountryID" text NULL,
    "De" text NULL,
    "Es" text NULL,
    "Fr" text NULL,
    "Ja" text NULL,
    "It" text NULL,
    "Br" text NULL,
    "Pt" text NULL,
    "Nl" text NULL,
    "Hr" text NULL,
    "Fa" text NULL,
    CONSTRAINT "PK_CountryNameTranslations" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CountryNameTranslations_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryState" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Code" text NULL,
    "CountryID" text NULL,
    CONSTRAINT "PK_CountryState" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CountryState_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryTopLevelDomain" (
    "CountryTopLevelDomainID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Domain" text NULL,
    "CountryID" text NULL,
    CONSTRAINT "PK_CountryTopLevelDomain" PRIMARY KEY ("CountryTopLevelDomainID"),
    CONSTRAINT "FK_CountryTopLevelDomain_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "Currency" (
    "ID" text NOT NULL,
    "Enabled" boolean NOT NULL,
    "Name" text NULL,
    "Symbol" text NULL,
    "ISOCode" text NULL,
    "IsBaseCurrency" boolean NOT NULL,
    "ExchangeValue" double precision NOT NULL,
    "CountryID" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Currency_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "CountryLanguageRecord" (
    "ID" text NOT NULL,
    "CountryID" text NULL,
    "CountryLanguageID" text NULL,
    CONSTRAINT "PK_CountryLanguageRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CountryLanguageRecord_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_CountryLanguageRecord_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1")
);

CREATE TABLE "Column" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Internal" boolean NOT NULL,
    "PrimaryKey" boolean NOT NULL,
    "ForeignKey" boolean NOT NULL,
    "ColumnType" integer NOT NULL,
    "EntityID" text NULL,
    CONSTRAINT "PK_Column" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Column_Entity_EntityID" FOREIGN KEY ("EntityID") REFERENCES "Entity" ("ID")
);

CREATE TABLE "Row" (
    "ID" text NOT NULL,
    "Internal" boolean NOT NULL,
    "EntityID" text NULL,
    CONSTRAINT "PK_Row" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Row_Entity_EntityID" FOREIGN KEY ("EntityID") REFERENCES "Entity" ("ID")
);

CREATE TABLE "View" (
    "ID" text NOT NULL,
    "EntityID" text NULL,
    CONSTRAINT "PK_View" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_View_Entity_EntityID" FOREIGN KEY ("EntityID") REFERENCES "Entity" ("ID")
);

CREATE TABLE "CountryRegionalBlockRecord" (
    "ID" text NOT NULL,
    "CountryID" text NULL,
    "RegionalBlockID" text NULL,
    CONSTRAINT "PK_CountryRegionalBlockRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CountryRegionalBlockRecord_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_CountryRegionalBlockRecord_RegionalBlock_RegionalBlockID" FOREIGN KEY ("RegionalBlockID") REFERENCES "RegionalBlock" ("ID")
);

CREATE TABLE "RegionalBlockAlternativeAcronym" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "RegionalBlockID" text NULL,
    CONSTRAINT "PK_RegionalBlockAlternativeAcronym" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_RegionalBlockAlternativeAcronym_RegionalBlock_RegionalBlock~" FOREIGN KEY ("RegionalBlockID") REFERENCES "RegionalBlock" ("ID")
);

CREATE TABLE "RegionalBlockAlternativeName" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "RegionalBlockID" text NULL,
    CONSTRAINT "PK_RegionalBlockAlternativeName" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_RegionalBlockAlternativeName_RegionalBlock_RegionalBlockID" FOREIGN KEY ("RegionalBlockID") REFERENCES "RegionalBlock" ("ID")
);

CREATE TABLE "CountryTimeZoneRecord" (
    "ID" text NOT NULL,
    "CountryID" text NULL,
    "TimezoneID" text NULL,
    CONSTRAINT "PK_CountryTimeZoneRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CountryTimeZoneRecord_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_CountryTimeZoneRecord_Timezone_TimezoneID" FOREIGN KEY ("TimezoneID") REFERENCES "Timezone" ("ID")
);

CREATE TABLE "City" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "ImageUrl" text NULL,
    "StateID" text NULL,
    "CountryID" text NULL,
    "Latitude" text NULL,
    "Longitude" text NULL,
    CONSTRAINT "PK_City" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_City_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_City_CountryState_StateID" FOREIGN KEY ("StateID") REFERENCES "CountryState" ("ID")
);

CREATE TABLE "ForeignKey" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "EntityID" text NULL,
    "ColumnID" text NULL,
    "ForeignEntityID" text NULL,
    "ForeignColumnID" text NULL,
    CONSTRAINT "PK_ForeignKey" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ForeignKey_Column_ColumnID" FOREIGN KEY ("ColumnID") REFERENCES "Column" ("ID"),
    CONSTRAINT "FK_ForeignKey_Column_ForeignColumnID" FOREIGN KEY ("ForeignColumnID") REFERENCES "Column" ("ID"),
    CONSTRAINT "FK_ForeignKey_Entity_EntityID" FOREIGN KEY ("EntityID") REFERENCES "Entity" ("ID"),
    CONSTRAINT "FK_ForeignKey_Entity_ForeignEntityID" FOREIGN KEY ("ForeignEntityID") REFERENCES "Entity" ("ID")
);

CREATE TABLE "Cell" (
    "ID" text NOT NULL,
    "ColumnID" text NULL,
    "RowID" text NULL,
    "Value" text NULL,
    CONSTRAINT "PK_Cell" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Cell_Column_ColumnID" FOREIGN KEY ("ColumnID") REFERENCES "Column" ("ID"),
    CONSTRAINT "FK_Cell_Row_RowID" FOREIGN KEY ("RowID") REFERENCES "Row" ("ID")
);

CREATE TABLE "AccessKeyPair" (
    "IP" text NOT NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Disabled" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CSR" text NULL,
    "PublicKey" text NULL,
    "PrivateKey" text NULL,
    "AesKey" bytea NULL,
    "AesIV" bytea NULL,
    CONSTRAINT "PK_AccessKeyPair" PRIMARY KEY ("IP")
);

CREATE TABLE "Account" (
    "ID" text NOT NULL,
    "Group" boolean NOT NULL,
    "Frozen" boolean NOT NULL,
    "Closed" boolean NOT NULL,
    "ReadOnly" boolean NOT NULL,
    "Verified" boolean NOT NULL,
    "Disable" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "VerificationTimestamp" timestamp with time zone NOT NULL,
    "Name" text NULL,
    "Code" text NULL,
    "Path" text NULL,
    "Prefix" text NULL,
    "TaxRate" numeric NOT NULL,
    "AccountBalanceCriteria" integer NOT NULL,
    "AccountRootType" integer NOT NULL,
    "Balance" numeric NOT NULL,
    "DebitsBalance" numeric NOT NULL,
    "CreditsBalance" numeric NOT NULL,
    "LastBalance" timestamp with time zone NOT NULL,
    "Discriminator" text NOT NULL,
    "CurrencyID" text NULL,
    "AccountGroupID" text NULL,
    "AccountTypeID" text NULL,
    "BillingProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AccountHolderID" text NULL,
    "LedgerID" text NULL,
    "ParentAccountID" text NULL,
    "ContactID" text NULL,
    "IBAN" text NULL,
    "SWIFT" text NULL,
    "BranchCode" text NULL,
    "BankAccountNumber" text NULL,
    "BankID" text NULL,
    "BankProfileID" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Account_Account_ParentAccountID" FOREIGN KEY ("ParentAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_Account_Bank_BankID" FOREIGN KEY ("BankID") REFERENCES "Bank" ("ID"),
    CONSTRAINT "FK_Account_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "AccountGroup" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "ParentAccountGroupID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_AccountGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AccountGroup_AccountGroup_ParentAccountGroupID" FOREIGN KEY ("ParentAccountGroupID") REFERENCES "AccountGroup" ("ID")
);

CREATE TABLE "AccountHolderLogin" (
    "ID" text NOT NULL,
    "Suspicious" boolean NOT NULL,
    "Aknowledged" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "IPLookupID" text NULL,
    "IP" text NULL,
    "DeviceOS" text NULL,
    "DeviceBrand" text NULL,
    "DeviceModel" text NULL,
    "DeviceFamily" text NULL,
    "UserAgentPatch" text NULL,
    "UserAgentFamily" text NULL,
    "UserAgentMinor" text NULL,
    "UserAgentMajor" text NULL,
    "AccountHolderID" text NULL,
    CONSTRAINT "PK_AccountHolderLogin" PRIMARY KEY ("ID")
);

CREATE TABLE "AccountHolderSettings" (
    "ID" text NOT NULL,
    "AccountHolderID" text NULL,
    "DarkTheme" boolean NOT NULL,
    "Cookies" boolean NOT NULL,
    "Analytics" boolean NOT NULL,
    "ForexRates" text NULL,
    "ExchangeRatesUpdatedTimestamp" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_AccountHolderSettings" PRIMARY KEY ("ID")
);

CREATE TABLE "AccountingEntry" (
    "ID" text NOT NULL,
    "Type" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "AccountingEntryType" integer NOT NULL,
    "Description" text NOT NULL,
    "Debit" numeric NOT NULL,
    "Credit" numeric NOT NULL,
    "ForexRate" numeric NOT NULL,
    "CurrencyID" text NOT NULL,
    "DebitAccountID" text NOT NULL,
    "CreditAccountID" text NOT NULL,
    "JournalEntryID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "PaymentID" text NULL,
    "WalletAccountID" text NULL,
    "RefundRequestID" text NULL,
    "PaymentDisputeID" text NULL,
    "RequestDate" timestamp with time zone NULL,
    "PaymentChargeback_PaymentID" text NULL,
    "BankProfileID" text NULL,
    "PaymentChargeback_PaymentDisputeID" text NULL,
    "PaymentChargeback_WalletAccountID" text NULL,
    CONSTRAINT "PK_AccountingEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AccountingEntry_Account_CreditAccountID" FOREIGN KEY ("CreditAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_AccountingEntry_Account_DebitAccountID" FOREIGN KEY ("DebitAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_AccountingEntry_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "AccountingPeriodClosingVoucher" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "PostingDate" timestamp with time zone NOT NULL,
    "Remarks" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "FiscalYearID" text NULL,
    "AccountID" text NULL,
    CONSTRAINT "PK_AccountingPeriodClosingVoucher" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AccountingPeriodClosingVoucher_Account_AccountID" FOREIGN KEY ("AccountID") REFERENCES "Account" ("ID")
);

CREATE TABLE "AccountRelation" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "AccountID" text NULL,
    "Type" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_AccountRelation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AccountRelation_Account_AccountID" FOREIGN KEY ("AccountID") REFERENCES "Account" ("ID")
);

CREATE TABLE "AccountType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_AccountType" PRIMARY KEY ("ID")
);

CREATE TABLE "ActivityFeed" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "Discriminator" text NOT NULL,
    "ContactID" text NULL,
    "DealUnitID" text NULL,
    "GigApplicationID" text NULL,
    "JobOfferApplicationID" text NULL,
    "MarketingCampaignID" text NULL,
    "MarketingListID" text NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_ActivityFeed" PRIMARY KEY ("ID")
);

CREATE TABLE "ActivityRecord" (
    "ID" text NOT NULL,
    "Type" text NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Completed" boolean NOT NULL,
    "DueDate" timestamp with time zone NOT NULL,
    "EnableEmailActivities" boolean NOT NULL,
    "EnableTaskActivities" boolean NOT NULL,
    "EnableFaxActivities" boolean NOT NULL,
    "EnableAlertActivities" boolean NOT NULL,
    "EnableAppointmentActivities" boolean NOT NULL,
    "EnableAnnotationActivities" boolean NOT NULL,
    "EnableLetterActivities" boolean NOT NULL,
    "EnablePhoneCallActivities" boolean NOT NULL,
    "BusinessID" text NULL,
    "ParentActivityID" text NULL,
    "ActivityTypeID" text NULL,
    "ActivityFeedID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "InChargeBusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ActivityRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ActivityRecord_ActivityFeed_ActivityFeedID" FOREIGN KEY ("ActivityFeedID") REFERENCES "ActivityFeed" ("ID"),
    CONSTRAINT "FK_ActivityRecord_ActivityRecord_ParentActivityID" FOREIGN KEY ("ParentActivityID") REFERENCES "ActivityRecord" ("ID")
);

CREATE TABLE "ActivityType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ActivityType" PRIMARY KEY ("ID")
);

CREATE TABLE "Agreement" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "AgreementTypeID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_Agreement" PRIMARY KEY ("ID")
);

CREATE TABLE "AgreementRevision" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "LanguageCode" text NULL,
    "LanguageIso639_1" text NULL,
    "AgreementID" text NULL,
    "ActiveRevision" boolean NOT NULL,
    "BusinessID" text NULL,
    "StartDate" timestamp with time zone NOT NULL,
    "AgreementRevisionBody" text NULL,
    CONSTRAINT "PK_AgreementRevision" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AgreementRevision_Agreement_AgreementID" FOREIGN KEY ("AgreementID") REFERENCES "Agreement" ("ID"),
    CONSTRAINT "FK_AgreementRevision_CountryLanguage_LanguageIso639_1" FOREIGN KEY ("LanguageIso639_1") REFERENCES "CountryLanguage" ("Iso639_1")
);

CREATE TABLE "AgreementType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_AgreementType" PRIMARY KEY ("ID")
);

CREATE TABLE "AppliedFee" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "FeeID" text NULL,
    "BaseAmount" numeric NOT NULL,
    "TotalCost" numeric NOT NULL,
    "TotalTaxes" numeric NOT NULL,
    "Discriminator" text NOT NULL,
    "WalletWithdrawID" text NULL,
    "PaymentChargebackID" text NULL,
    "PaymentRefundID" text NULL,
    "PaymentID" text NULL,
    "PaymentGatewayID" text NULL,
    CONSTRAINT "PK_AppliedFee" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AppliedFee_AccountingEntry_PaymentChargebackID" FOREIGN KEY ("PaymentChargebackID") REFERENCES "AccountingEntry" ("ID"),
    CONSTRAINT "FK_AppliedFee_AccountingEntry_PaymentRefundID" FOREIGN KEY ("PaymentRefundID") REFERENCES "AccountingEntry" ("ID"),
    CONSTRAINT "FK_AppliedFee_Fee_FeeID" FOREIGN KEY ("FeeID") REFERENCES "Fee" ("ID")
);

CREATE TABLE "AppliedTaxPolicyRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "TaxPolicyID" text NULL,
    "InvoiceID" text NULL,
    "ItemID" text NULL,
    "TaxAmountInUSD" double precision NOT NULL,
    "TaxBaseAmountInUSD" double precision NOT NULL,
    "Discriminator" text NOT NULL,
    "BillingItemRecordID" text NULL,
    "PaymentID" text NULL,
    "AppliedFeeID" text NULL,
    CONSTRAINT "PK_AppliedTaxPolicyRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AppliedTaxPolicyRecord_AppliedFee_AppliedFeeID" FOREIGN KEY ("AppliedFeeID") REFERENCES "AppliedFee" ("ID")
);

CREATE TABLE "AppraisalSession" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AppraisalWorkflowID" text NULL,
    "AppraisalStageID" text NULL,
    "Discriminator" text NOT NULL,
    "EmployeeProfileID" text NULL,
    CONSTRAINT "PK_AppraisalSession" PRIMARY KEY ("ID")
);

CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey")
);

CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id")
);

CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "Handler" text NULL,
    "NameIdentifier" text NULL,
    "PublicIdentifier" text NULL,
    "PublicName" text NOT NULL,
    "Name" text NOT NULL,
    "LastName" text NOT NULL,
    "IdentityProvider" text NULL,
    "JobTitle" text NULL,
    "ProfileCoverURL" text NULL,
    "AvatarURL" text NULL,
    "About" character varying(256) NULL,
    "Status" character varying(140) NULL,
    "WebURL" text NULL,
    "FacebookURL" text NULL,
    "YouTubeURL" text NULL,
    "LinkedInURL" text NULL,
    "TwitterHandler" character varying(15) NULL,
    "InstagramUsername" text NULL,
    "GithubUsername" text NULL,
    "TaxID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Birthday" timestamp with time zone NOT NULL,
    "Gender" integer NOT NULL,
    "Availability" integer NOT NULL,
    "LastLoginIP" character varying(39) NULL,
    "SelectedBusinessID" text NULL,
    "SelectedBusinessAs" text NULL,
    "CountryLanguageID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "CurrencyID" text NULL,
    "TimezoneID" text NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_AspNetUsers_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_AspNetUsers_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1"),
    CONSTRAINT "FK_AspNetUsers_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_AspNetUsers_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_AspNetUsers_Timezone_TimezoneID" FOREIGN KEY ("TimezoneID") REFERENCES "Timezone" ("ID")
);

CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id")
);

CREATE TABLE "IPLookup" (
    "ID" text NOT NULL,
    "IP" text NULL,
    "ISP" text NULL,
    "Type" text NULL,
    "Name" text NULL,
    "UserAgent" text NULL,
    "BusinessName" text NULL,
    "BusinessWebsite" text NULL,
    "City" text NULL,
    "Region" text NULL,
    "Continent" text NULL,
    "Longitud" text NULL,
    "Latitud" text NULL,
    "Tor" boolean NOT NULL,
    "ASN" bigint NOT NULL,
    "VPN" boolean NOT NULL,
    "Bot" boolean NOT NULL,
    "Proxy" boolean NOT NULL,
    "Mobile" boolean NOT NULL,
    "Banned" boolean NOT NULL,
    "RecentAbuse" boolean NOT NULL,
    "KnownAttacker" boolean NOT NULL,
    "DeviceOS" text NULL,
    "DeviceBrand" text NULL,
    "DeviceModel" text NULL,
    "DeviceFamily" text NULL,
    "UserAgentPatch" text NULL,
    "UserAgentFamily" text NULL,
    "UserAgentMinor" text NULL,
    "UserAgentMajor" text NULL,
    "Timezone" text NULL,
    "LastReset" timestamp with time zone NOT NULL,
    "LastAccess" timestamp with time zone NOT NULL,
    "TotalAccessCount" bigint NOT NULL,
    "RecentAccessCount" bigint NOT NULL,
    "Host" text NULL,
    "FraudScore" bigint NOT NULL,
    "Message" text NULL,
    "Success" boolean NOT NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "AcknowledgedIP" boolean NOT NULL,
    "AcknowledgedDevice" boolean NOT NULL,
    "AccountHolderID" text NULL,
    "CountryID" text NULL,
    CONSTRAINT "PK_IPLookup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_IPLookup_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_IPLookup_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "Asset" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "IsExistingAsset" boolean NOT NULL,
    "CalculateDepreciation" boolean NOT NULL,
    "AllowMontlyDepreciation" boolean NOT NULL,
    "OpeningDepreciation" double precision NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "AssetType" integer NOT NULL,
    "AssetOwner" integer NOT NULL,
    "PurchaseDate" timestamp with time zone NOT NULL,
    "ItemID" text NULL,
    "AssetCategoryID" text NULL,
    "PurchaseInvoiceID" text NULL,
    "PurchaseReceiptID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "OrganizationDepartmentID" text NULL,
    "ContactID" text NULL,
    "AssetLocationID" text NULL,
    "FinancialBookID" text NULL,
    CONSTRAINT "PK_Asset" PRIMARY KEY ("ID")
);

CREATE TABLE "AssetCategory" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_AssetCategory" PRIMARY KEY ("ID")
);

CREATE TABLE "AssetDepreciationRecord" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "FinancialBookID" text NULL,
    CONSTRAINT "PK_AssetDepreciationRecord" PRIMARY KEY ("ID")
);

CREATE TABLE "AssetTransfer" (
    "ID" text NOT NULL,
    "IsRootTransfer" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "SerialList" text NULL,
    "Quantity" text NULL,
    "Serial" text NULL,
    "BusinessID" text NULL,
    "AssetID" text NULL,
    "PreviousShareTransferID" text NULL,
    "PreviousAssetTransferID" text NULL,
    "SourceLocationID" text NULL,
    "DestinationLocationID" text NULL,
    "SourceContactID" text NULL,
    "DestinationContactID" text NULL,
    "SourceDepartmentID" text NULL,
    "DestinationDepartmentID" text NULL,
    CONSTRAINT "PK_AssetTransfer" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_AssetTransfer_Asset_AssetID" FOREIGN KEY ("AssetID") REFERENCES "Asset" ("ID"),
    CONSTRAINT "FK_AssetTransfer_AssetTransfer_PreviousShareTransferID" FOREIGN KEY ("PreviousShareTransferID") REFERENCES "AssetTransfer" ("ID")
);

CREATE TABLE "AssetValueAmend" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "FinancialBookID" text NULL,
    CONSTRAINT "PK_AssetValueAmend" PRIMARY KEY ("ID")
);

CREATE TABLE "BankGuarantee" (
    "ID" text NOT NULL,
    "Margin" double precision NOT NULL,
    "Charges" double precision NOT NULL,
    "BeneficiaryName" text NULL,
    "GuaranteeNumber" text NULL,
    "GuaranteeConditions" text NULL,
    "FixedDepositNumber" double precision NOT NULL,
    "StartDate" timestamp with time zone NOT NULL,
    "EndDate" timestamp with time zone NOT NULL,
    "ValidityInDays" integer NOT NULL,
    "BankGuaranteeType" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ContactID" text NULL,
    "ProjectID" text NULL,
    "OrderID" text NULL,
    "BankProfileID" text NULL,
    "BankAccountID" text NULL,
    "CurrencyID" text NULL,
    CONSTRAINT "PK_BankGuarantee" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BankGuarantee_Account_BankAccountID" FOREIGN KEY ("BankAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_BankGuarantee_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "BillingCoupon" (
    "ID" text NOT NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "ExpirationDateTime" timestamp with time zone NOT NULL,
    "Published" boolean NOT NULL,
    "Code" text NULL,
    "Description" text NULL,
    "RestrictedEmails" text NULL,
    "AllowedEmails" text NULL,
    "AllowedItems" text NULL,
    "AllowedCountries" text NULL,
    "RestrictedCountries" text NULL,
    "UsageLimit" integer NOT NULL,
    "UsageLimitPerUser" integer NOT NULL,
    "UsageLimitPerItem" integer NOT NULL,
    "ForceSingle" boolean NOT NULL,
    "GrantsFreeShipping" boolean NOT NULL,
    "MinimumSpend" numeric NOT NULL,
    "MaximumSpend" numeric NOT NULL,
    "DiscountPercent" numeric NOT NULL,
    "DiscountAmount" numeric NOT NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_BillingCoupon" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BillingCoupon_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "BillingItemRecord" (
    "ID" text NOT NULL,
    "Description" text NULL,
    "Quantity" double precision NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Free" boolean NOT NULL,
    "FreeReason" text NULL,
    "FreeReasonCode" text NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "ItemID" text NULL,
    "ItemPriceID" text NULL,
    "PriceListItemID" text NULL,
    "UnitID" text NULL,
    "UnitGroupID" text NULL,
    "TaxCalculationMethod" integer NOT NULL,
    "CostCalculationMethod" integer NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "TotalBaseAmountInUSD" double precision NOT NULL,
    "TotalProfitInUSD" double precision NOT NULL,
    "TotalDetailAmountInUSD" double precision NOT NULL,
    "TotalTaxBaseInUSD" double precision NOT NULL,
    "TotalDiscountsInUSD" double precision NOT NULL,
    "TotalTaxesInUSD" double precision NOT NULL,
    "TotalWithholdingTaxesInUSD" double precision NOT NULL,
    "TotalShippingCostInUSD" double precision NOT NULL,
    "TotalShippingTaxesInUSD" double precision NOT NULL,
    "TotalWarrantyCostInUSD" double precision NOT NULL,
    "TotalReturnCostInUSD" double precision NOT NULL,
    "TotalRefundCostInUSD" double precision NOT NULL,
    "TotalSurchargesInUSD" double precision NOT NULL,
    "TotalAmountInUSD" double precision NOT NULL,
    "TotalGlobalDiscountsInUSD" double precision NOT NULL,
    "TotalGlobalSurchargesInUSD" double precision NOT NULL,
    "CustomGlobalSurchargesAmount" double precision NOT NULL,
    "CustomGlobalDiscountsAmount" double precision NOT NULL,
    "CustomBaseAmount" double precision NOT NULL,
    "CustomDetailAmount" double precision NOT NULL,
    "CustomDiscountsAmount" double precision NOT NULL,
    "CustomTaxBase" double precision NOT NULL,
    "CustomSurchargesAmount" double precision NOT NULL,
    "CustomProfitAmount" double precision NOT NULL,
    "CustomShippingCostAmount" double precision NOT NULL,
    "CustomShippingTaxAmount" double precision NOT NULL,
    "CustomTaxAmount" double precision NOT NULL,
    "CustomWithholdingTaxAmount" double precision NOT NULL,
    "CustomTotalAmount" double precision NOT NULL,
    "ReturnPolicyID" text NULL,
    "RefundPolicyID" text NULL,
    "WarrantyPolicyID" text NULL,
    "ItemShipmentPolicyID" text NULL,
    "LocationID" text NULL,
    "QuoteItemRecordID" text NULL,
    "BusinessID" text NULL,
    "CurrencyID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ParentBillingItemRecordID" text NULL,
    "Type" text NOT NULL,
    "Excluded" boolean NULL,
    "BillingCouponID" text NULL,
    "BillingCouponCartRecord_BillingCouponID" text NULL,
    "CartID" text NULL,
    "BillingCouponOrderRecord_BillingCouponID" text NULL,
    "OrderID" text NULL,
    "InvoiceID" text NULL,
    "AccountingEntryID" text NULL,
    "OrderItemRecord_OrderID" text NULL,
    "ParentOrderID" text NULL,
    "DealUnitID" text NULL,
    "QuoteID" text NULL,
    CONSTRAINT "PK_BillingItemRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BillingItemRecord_AccountingEntry_AccountingEntryID" FOREIGN KEY ("AccountingEntryID") REFERENCES "AccountingEntry" ("ID"),
    CONSTRAINT "FK_BillingItemRecord_BillingCoupon_BillingCouponCartRecord_Bil~" FOREIGN KEY ("BillingCouponCartRecord_BillingCouponID") REFERENCES "BillingCoupon" ("ID"),
    CONSTRAINT "FK_BillingItemRecord_BillingCoupon_BillingCouponID" FOREIGN KEY ("BillingCouponID") REFERENCES "BillingCoupon" ("ID"),
    CONSTRAINT "FK_BillingItemRecord_BillingCoupon_BillingCouponOrderRecord_Bi~" FOREIGN KEY ("BillingCouponOrderRecord_BillingCouponID") REFERENCES "BillingCoupon" ("ID"),
    CONSTRAINT "FK_BillingItemRecord_BillingItemRecord_ParentBillingItemRecord~" FOREIGN KEY ("ParentBillingItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_BillingItemRecord_BillingItemRecord_QuoteItemRecordID" FOREIGN KEY ("QuoteItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_BillingItemRecord_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "Blockchain" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Name" text NULL,
    "LogoUrl" text NULL,
    "Description" text NULL,
    "Difficulty" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Blockchain" PRIMARY KEY ("ID")
);

CREATE TABLE "BlockchainBlock" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Index" integer NOT NULL,
    "Data" text NULL,
    "Hash" text NOT NULL,
    "Nonce" bigint NOT NULL,
    "PreviousHash" text NULL,
    "BlockchainID" text NOT NULL,
    "PreviousBlockchainBlockID" text NOT NULL,
    "WalletAccountID" text NOT NULL,
    "NonFungibleTokenID" text NULL,
    CONSTRAINT "PK_BlockchainBlock" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BlockchainBlock_Blockchain_BlockchainID" FOREIGN KEY ("BlockchainID") REFERENCES "Blockchain" ("ID"),
    CONSTRAINT "FK_BlockchainBlock_BlockchainBlock_PreviousBlockchainBlockID" FOREIGN KEY ("PreviousBlockchainBlockID") REFERENCES "BlockchainBlock" ("ID")
);

CREATE TABLE "BlockRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BlockerSocialProfileID" text NULL,
    "BlockedSocialProfileID" text NULL,
    CONSTRAINT "PK_BlockRecord" PRIMARY KEY ("ID")
);

CREATE TABLE "BrandRecord" (
    "ID" text NOT NULL,
    "ItemID" text NULL,
    "BrandID" text NULL,
    CONSTRAINT "PK_BrandRecord" PRIMARY KEY ("ID")
);

CREATE TABLE "Budget" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    "FiscalYearID" text NULL,
    "Discriminator" text NOT NULL,
    "CostCentreID" text NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_Budget" PRIMARY KEY ("ID")
);

CREATE TABLE "Business" (
    "ID" text NOT NULL,
    "PublicIdentifier" text NULL,
    "Root" boolean NOT NULL,
    "Public" boolean NOT NULL,
    "Personal" boolean NOT NULL,
    "Verified" boolean NOT NULL,
    "Deleted" boolean NOT NULL,
    "CreationTimestamp" timestamp with time zone NOT NULL,
    "DeletionTimestamp" timestamp with time zone NOT NULL,
    "BusinessLegalName" text NOT NULL,
    "BusinessName" text NOT NULL,
    "Handler" text NOT NULL,
    "EnableAutomaticRenovation" boolean NOT NULL,
    "AutomaticRenovationToken" text NULL,
    "BusinessAvatarURL" text NULL,
    "BusinessProfileCoverURL" text NULL,
    "AccountingBalance" double precision NOT NULL,
    "AccountingDebits" double precision NOT NULL,
    "AccountingCredits" double precision NOT NULL,
    "TaxID" text NULL,
    "DUNS" text NULL,
    "Slogan" text NULL,
    "About" text NULL,
    "CorporateBoilerplate" text NULL,
    "LinkedInPageURL" text NULL,
    "GithubOrganizationName" text NULL,
    "TwitterUsername" text NULL,
    "FacebookPageURL" text NULL,
    "YouTubeURL" text NULL,
    "InstagramUsername" text NULL,
    "WhatsAppNumber" text NULL,
    "SupportPhoneNumber" text NULL,
    "WebURL" text NULL,
    "BusinessEmail" text NOT NULL,
    "PortalLogoURL" text NULL,
    "PortalReverseLogoURL" text NULL,
    "IncorporationDate" timestamp with time zone NULL,
    "ParentBusinessID" text NULL,
    "BusinessTypeID" text NULL,
    "BusinessSizeID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "CurrencyID" text NULL,
    "TimezoneID" text NULL,
    "CountryLanguageID" text NULL,
    "BusinessSegmentID" text NULL,
    "BusinessIndustryID" text NULL,
    CONSTRAINT "PK_Business" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Business_Business_ParentBusinessID" FOREIGN KEY ("ParentBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Business_BusinessSegment_BusinessSegmentID" FOREIGN KEY ("BusinessSegmentID") REFERENCES "BusinessSegment" ("ID"),
    CONSTRAINT "FK_Business_BusinessSize_BusinessSizeID" FOREIGN KEY ("BusinessSizeID") REFERENCES "BusinessSize" ("ID"),
    CONSTRAINT "FK_Business_BusinessType_BusinessTypeID" FOREIGN KEY ("BusinessTypeID") REFERENCES "BusinessType" ("ID"),
    CONSTRAINT "FK_Business_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Business_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Business_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1"),
    CONSTRAINT "FK_Business_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Business_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Business_Timezone_TimezoneID" FOREIGN KEY ("TimezoneID") REFERENCES "Timezone" ("ID")
);

CREATE TABLE "BusinessDomain" (
    "ID" text NOT NULL,
    "Domain" text NULL,
    "TXTRecord" text NULL,
    "Verified" boolean NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_BusinessDomain" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessDomain_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "BusinessProfileRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "IsBusinessOwner" boolean NOT NULL,
    "IsAdmin" boolean NOT NULL,
    "IsRoot" boolean NOT NULL,
    "IsDisabled" boolean NOT NULL,
    "BusinessID" text NOT NULL,
    "AccountHolderID" text NOT NULL,
    CONSTRAINT "PK_BusinessProfileRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessProfileRecord_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_BusinessProfileRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "BusinessRelationship" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ParentBusinessID" text NULL,
    "OwnershipPercentage" double precision NOT NULL,
    "ChildBusinessID" text NULL,
    CONSTRAINT "PK_BusinessRelationship" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessRelationship_Business_ChildBusinessID" FOREIGN KEY ("ChildBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessRelationship_Business_ParentBusinessID" FOREIGN KEY ("ParentBusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "BusinessTenantSettings" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "ForexRates" text NULL,
    "ExchangeRatesUpdatedTimestamp" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_BusinessTenantSettings" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessTenantSettings_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ContactRelationType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BackName" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ContactRelationType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ContactRelationType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ContactSource" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ContactSource" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ContactSource_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "CostCentresGroup" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Disabled" boolean NOT NULL,
    "BusinessID" text NULL,
    "ParentCostCentresGroupID" text NULL,
    CONSTRAINT "PK_CostCentresGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CostCentresGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CostCentresGroup_CostCentresGroup_ParentCostCentresGroupID" FOREIGN KEY ("ParentCostCentresGroupID") REFERENCES "CostCentresGroup" ("ID")
);

CREATE TABLE "CustomProperty" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "FormFieldDataType" integer NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_CustomProperty" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CustomProperty_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "DeliveryNote" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_DeliveryNote" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_DeliveryNote_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "FinancialBook" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_FinancialBook" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FinancialBook_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "Holiday" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "DurationInDays" integer NOT NULL,
    "BusinessID" text NULL,
    "StartDate" timestamp with time zone NOT NULL,
    "EndDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Holiday" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Holiday_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "HolidaySchedule" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_HolidaySchedule" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_HolidaySchedule_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemAttribute" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemAttribute" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemAttribute_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemBrand" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "Description" text NULL,
    "WebsiteURL" text NULL,
    "LogoURL" text NULL,
    "Featured" boolean NOT NULL,
    "Trending" boolean NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemBrand" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemBrand_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemBundle" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Code" text NULL,
    "Description" text NULL,
    "Disabled" boolean NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemBundle" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemBundle_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemFamily" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Code" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemFamily" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemFamily_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemGroup" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Code" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemRestock" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemRestock" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemRestock_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ItemTag" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemTag" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemTag_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "JobField" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "ImageURL" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_JobField" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_JobField_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "LeaveType" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_LeaveType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LeaveType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "LicenseValidation" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Valid" boolean NOT NULL,
    "Domain" text NULL,
    "IP" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_LicenseValidation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LicenseValidation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "LocalizationResource" (
    "ID" text NOT NULL,
    "Comments" text NULL,
    "BusinessID" text NULL,
    "CountryLanguageID" text NULL,
    "CountryLanguageRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "Base" text NULL,
    "Value" text NULL,
    "LocalizationStringID" text NULL,
    CONSTRAINT "PK_LocalizationResource" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LocalizationResource_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LocalizationResource_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1"),
    CONSTRAINT "FK_LocalizationResource_CountryLanguageRecord_CountryLanguageR~" FOREIGN KEY ("CountryLanguageRecordID") REFERENCES "CountryLanguageRecord" ("ID"),
    CONSTRAINT "FK_LocalizationResource_LocalizationResource_LocalizationStrin~" FOREIGN KEY ("LocalizationStringID") REFERENCES "LocalizationResource" ("ID")
);

CREATE TABLE "PaymentGateway" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_PaymentGateway" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentGateway_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "SEOKeyWord" (
    "ID" text NOT NULL,
    "Keyword" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_SEOKeyWord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SEOKeyWord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ShippingClass" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Slug" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingClass" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingClass_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ShippingMethod" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Cost" double precision NOT NULL,
    "Taxable" boolean NOT NULL,
    "TaxIncluded" boolean NOT NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "ShippingClassCalculationType" integer NOT NULL,
    CONSTRAINT "PK_ShippingMethod" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingMethod_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingMethod_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "ShippingRegion" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "PostalCodes" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingRegion" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingRegion_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "ShippingZone" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Default" boolean NOT NULL,
    "Everywhere" boolean NOT NULL,
    "PostalCodes" text NULL,
    "CountryCodes" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingZone" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingZone_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "SupportTicketType" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_SupportTicketType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SupportTicketType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "WebsiteTheme" (
    "ID" text NOT NULL,
    "Enable" boolean NOT NULL,
    "Name" text NULL,
    "AuthorName" text NULL,
    "AuthorUrl" text NULL,
    "Version" text NULL,
    "Description" text NULL,
    "Tags" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_WebsiteTheme" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebsiteTheme_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID")
);

CREATE TABLE "BusinessApplication" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Namespace" text NULL,
    "DisplayName" text NULL,
    "AvatarURL" text NULL,
    "WebsiteUrl" text NULL,
    "IsMultiTenant" boolean NOT NULL,
    "IsVerified" boolean NOT NULL,
    "IsDisabled" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "VerificationTimestamp" timestamp with time zone NOT NULL,
    "SpaUIEngine" integer NOT NULL,
    "SpaStaticFilesRootPath" text NULL,
    "SpaRelativeSourcePath" text NULL,
    "SpaRelativeAppPath" text NULL,
    "SpaServerUrl" text NULL,
    "SpaPublishScript" text NULL,
    "SpaPrePublishScript" text NULL,
    "SpaPostPublishScript" text NULL,
    "SpaInstallScript" text NULL,
    "SpaPreInstallScript" text NULL,
    "SpaPostInstallScript" text NULL,
    "SpaStartScript" text NULL,
    "SpaPreStartScript" text NULL,
    "SpaPostStartScript" text NULL,
    "SpaPackageManager" text NULL,
    "SpaNpmInstallScript" text NULL,
    "SpaNpmStartScript" text NULL,
    "SpaNpmPublishScript" text NULL,
    "SpaRelativeOutputPath" text NULL,
    "UseProxyToSpaDevelopmentServer" boolean NOT NULL,
    "SpaDevelopmentServerUri" text NULL,
    "IsSinglePageApplication" boolean NOT NULL,
    "IsNativeOrDesktopApp" boolean NOT NULL,
    "SystemLocked" boolean NOT NULL,
    "RequireHttps" boolean NOT NULL,
    "RequireAppSecret" boolean NOT NULL,
    "EnableClientOauthLogin" boolean NOT NULL,
    "EnableWebOAuthLogin" boolean NOT NULL,
    "EnableDeviceOAuthLogin" boolean NOT NULL,
    "AllowAccessToSuiteSettings" boolean NOT NULL,
    "RequireWebOAuthReauthentication" boolean NOT NULL,
    "RequireTwoFactorReauthorization" boolean NOT NULL,
    "EnableEmbeddedBrowserOAuthLogin" boolean NOT NULL,
    "UseStrictModeForRedirectURIs" boolean NOT NULL,
    "CountryRestricted" boolean NOT NULL,
    "RestrictedCountries" text NULL,
    "DataDeletionRequestURL" text NULL,
    "DeauthorizeCallbackURL" text NULL,
    "DataProtectionOfficerEmail" text NULL,
    "DataProtectionOfficerName" text NULL,
    "DataProtectionOfficerAddress1" text NULL,
    "DataProtectionOfficerAddress2" text NULL,
    "DataProtectionOfficerAddress3" text NULL,
    "DataProtectionOfficerCity" text NULL,
    "DataProtectionOfficerState" text NULL,
    "DataProtectionOfficerPostalCode" text NULL,
    "DataProtectionOfficerCountry" text NULL,
    "ContactEmail" text NULL,
    "PrivacyPolicyURL" text NULL,
    "TermsAndConditionsURL" text NULL,
    "AllowedDomains" text NULL,
    "ServerIPAllowlist" text NULL,
    "UpdateSettingsIPAllowlist" text NULL,
    "UpdateSettingsNotificationEmails" text NULL,
    "AllowCrossDomainShareRedirects" text NULL,
    "ValidOAuthRedirectURIs" text NULL,
    "EnableGitRepoManagement" boolean NOT NULL,
    "MarkedForPublish" boolean NOT NULL,
    "PublishResultMessages" text NULL,
    "InstallResultMessages" text NULL,
    "StartResultMessages" text NULL,
    "GitResultMessages" text NULL,
    "GitRepoUrl" text NULL,
    "GitBranch" text NULL,
    "GitRepo" text NULL,
    "GitUser" text NULL,
    "IsGitPrivateRepo" boolean NOT NULL,
    "GitToken" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_BusinessApplication" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessApplication_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessApplication_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessIndustry" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "ParentBusinessIndustryID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_BusinessIndustry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessIndustry_BusinessIndustry_ParentBusinessIndustryID" FOREIGN KEY ("ParentBusinessIndustryID") REFERENCES "BusinessIndustry" ("ID"),
    CONSTRAINT "FK_BusinessIndustry_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessPermission" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "IsSystemPermission" boolean NOT NULL,
    "Description" text NULL,
    "Category" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_BusinessPermission" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessPermission_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessPermission_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessPosition" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Type" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_BusinessPosition" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessPosition_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessPosition_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessProcess" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ParentBusinessProcessID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_BusinessProcess" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessProcess_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessProcess_BusinessProcess_ParentBusinessProcessID" FOREIGN KEY ("ParentBusinessProcessID") REFERENCES "BusinessProcess" ("ID"),
    CONSTRAINT "FK_BusinessProcess_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessProfileInvitation" (
    "ID" text NOT NULL,
    "Email" text NULL,
    "Redeemed" boolean NOT NULL,
    "RedeemedTimestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NOT NULL,
    "BusinessProfileRecordID" text NOT NULL,
    CONSTRAINT "PK_BusinessProfileInvitation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessProfileInvitation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessProfileInvitation_BusinessProfileRecord_BusinessPro~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessSecurityRole" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "IsSystemSecurityRole" boolean NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_BusinessSecurityRole" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessSecurityRole_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessSecurityRole_BusinessProfileRecord_BusinessProfileR~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "CognitiveAgent" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Avatar" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CognitiveAgent" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CognitiveAgent_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CognitiveAgent_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "DiscountList" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "DiscountListType" integer NOT NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_DiscountList" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_DiscountList_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_DiscountList_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_DiscountList_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "EmailGroup" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "MyProperty" integer NOT NULL,
    CONSTRAINT "PK_EmailGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmailGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmailGroup_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "EmployeeBenefit" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "EffectiveDate" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_EmployeeBenefit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmployeeBenefit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmployeeBenefit_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "EmployeeType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_EmployeeType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmployeeType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmployeeType_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "FiscalAuthority" (
    "ID" text NOT NULL,
    "Name" text NOT NULL,
    "LogoURL" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CountryID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_FiscalAuthority" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalAuthority_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalAuthority_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalAuthority_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "ForeignExchangeSet" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "UpdateTimestamp" timestamp with time zone NOT NULL,
    "Year" integer NOT NULL,
    "Month" integer NOT NULL,
    "Day" integer NOT NULL,
    "Values" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ForeignExchangeSet" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ForeignExchangeSet_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ForeignExchangeSet_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "Integration" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Type" text NOT NULL,
    "APIKeyAuthPosition" integer NOT NULL,
    "IntegationAuthType" integer NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "LastRenewal" timestamp with time zone NOT NULL,
    "Expiration" timestamp with time zone NOT NULL,
    "ExpiresIn" bigint NOT NULL,
    "Scopes" text NULL,
    "TokenType" text NULL,
    "Nonce" text NULL,
    "Username" text NULL,
    "Password" text NULL,
    "AccessCode" text NULL,
    "AuthorizationCode" text NULL,
    "BaseURL" text NULL,
    "RequestURL" text NULL,
    "AccessToken" text NULL,
    "RefreshToken" text NULL,
    "Realm" text NULL,
    "HeaderKey" text NULL,
    "APIKey" text NULL,
    "ApiSecret" text NULL,
    "NonceCount" text NULL,
    "ClientNonce" text NULL,
    "QualityOfProtection" text NULL,
    "Opaque" text NULL,
    "DigestAuthAlgorithm" integer NOT NULL,
    "ConsumerKey" text NULL,
    "ConsumerSecret" text NULL,
    "TokenSecret" text NULL,
    "Version" text NULL,
    "OAuth1SignatureMethod" integer NOT NULL,
    "HawkAuthID" text NULL,
    "HawkAuthKey" text NULL,
    "User" text NULL,
    "Ext" text NULL,
    "App" text NULL,
    "Dlg" text NULL,
    "IncludePayloadHash" boolean NOT NULL,
    "HawkAuthAlgorithm" integer NOT NULL,
    "Domain" text NULL,
    "Workstation" text NULL,
    "AccessKey" text NULL,
    "SecretKey" text NULL,
    "AWSRegion" text NULL,
    "ServiceName" text NULL,
    "SessionToken" text NULL,
    "ClientToken" text NULL,
    "ClientSecret" text NULL,
    "HeadersToSign" text NULL,
    "BusinessID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "EventType" integer NULL,
    "EntityType" integer NULL,
    "RequestEncoding" integer NULL,
    CONSTRAINT "PK_Integration" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Integration_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Integration_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Integration_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ItemCategory" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "ImageURL" text NULL,
    "IsFeatured" boolean NOT NULL,
    "EnableForCourses" boolean NOT NULL,
    "EnableForProducts" boolean NOT NULL,
    "EnableForLicenses" boolean NOT NULL,
    "EnableForServices" boolean NOT NULL,
    "EnableForSubscriptions" boolean NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ParentItemCategoryID" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_ItemCategory" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemCategory_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemCategory_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ItemCategory_ItemCategory_ParentItemCategoryID" FOREIGN KEY ("ParentItemCategoryID") REFERENCES "ItemCategory" ("ID")
);

CREATE TABLE "JobTitle" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "GrossPay" double precision NOT NULL,
    "NetSalary" double precision NOT NULL,
    "CurrencyID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_JobTitle" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_JobTitle_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_JobTitle_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_JobTitle_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_JobTitle_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_JobTitle_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_JobTitle_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "JournalType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_JournalType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_JournalType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_JournalType_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "LedgerType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "LedgerClass" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_LedgerType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LedgerType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LedgerType_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "MaintenanceVisit" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_MaintenanceVisit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MaintenanceVisit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MaintenanceVisit_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "MarketingArea" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_MarketingArea" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MarketingArea_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MarketingArea_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "MarketingList" (
    "ID" text NOT NULL,
    "Locked" boolean NOT NULL,
    "Name" text NULL,
    "Purpose" text NULL,
    "Description" text NULL,
    "Source" text NULL,
    "Cost" double precision NOT NULL,
    "ModifiedOn" timestamp with time zone NOT NULL,
    "LastUsedOn" timestamp with time zone NOT NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "MarketingListType" integer NOT NULL,
    "MarketingListTarget" integer NOT NULL,
    CONSTRAINT "PK_MarketingList" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MarketingList_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MarketingList_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_MarketingList_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "Newsletter" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Title" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Newsletter" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Newsletter_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Newsletter_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "PartnerProgram" (
    "ID" text NOT NULL,
    "Title" boolean NOT NULL,
    "Criteria" boolean NOT NULL,
    "Description" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "PartnerProgramEndDate" timestamp with time zone NOT NULL,
    "PartnerProgramStartDate" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_PartnerProgram" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PartnerProgram_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PartnerProgram_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "PaymentMode" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_PaymentMode" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentMode_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PaymentMode_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "Priority" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Notes" text NULL,
    "Color" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Priority" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Priority_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Priority_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ProductionPlan" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ProductionPlan" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProductionPlan_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProductionPlan_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ProficiencyRatingModel" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "MinRatingValue" integer NOT NULL,
    "MaxRatingValue" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ProficiencyRatingModel" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProficiencyRatingModel_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProficiencyRatingModel_BusinessProfileRecord_BusinessProfil~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ProjectJournal" (
    "ID" text NOT NULL,
    "Submitted" boolean NOT NULL,
    "Description" text NULL,
    "JournalType" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ProjectJournal" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectJournal_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProjectJournal_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ProjectResource" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ProjectResource" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectResource_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProjectResource_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ProjectResourceRole" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "TargetUtilization" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ProjectResourceRole" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectResourceRole_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProjectResourceRole_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "SalesLiteratureType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SalesLiteratureType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SalesLiteratureType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SalesLiteratureType_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ServiceCaseType" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ServiceCaseType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServiceCaseType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceCaseType_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ShareClass" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ForexRates" text NULL,
    "Value" boolean NOT NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ShareClass" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShareClass_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShareClass_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ShareClass_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "ShareIssuance" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "UnitPrice" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "CurrencyID" text NULL,
    CONSTRAINT "PK_ShareIssuance" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShareIssuance_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShareIssuance_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ShareIssuance_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "ShareTransferReason" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ShareTransferReason" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShareTransferReason_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShareTransferReason_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ShippingCourier" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "LogoURL" text NULL,
    "CountryID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ShippingCourier" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingCourier_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingCourier_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ShippingCourier_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "Skill" (
    "ID" text NOT NULL,
    "Url" text NULL,
    "Type" text NOT NULL,
    "Name" text NULL,
    "IconUrl" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "SkillType" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Skill" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Skill_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Skill_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "SocialBadge" (
    "ID" text NOT NULL,
    "Image" text NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SocialBadge" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialBadge_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SocialBadge_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "SocialPostBucket" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SocialPostBucket" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialPostBucket_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SocialPostBucket_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "SupplierGroup" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SupplierGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SupplierGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SupplierGroup_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "SustainabilityProfile" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SustainabilityProfile" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SustainabilityProfile_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SustainabilityProfile_BusinessProfileRecord_BusinessProfile~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "Territory" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ParentTerritoryID" text NULL,
    "AccountHolderId" text NULL,
    CONSTRAINT "PK_Territory" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Territory_AspNetUsers_AccountHolderId" FOREIGN KEY ("AccountHolderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Territory_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Territory_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Territory_Territory_ParentTerritoryID" FOREIGN KEY ("ParentTerritoryID") REFERENCES "Territory" ("ID")
);

CREATE TABLE "TrainingProgram" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_TrainingProgram" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TrainingProgram_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TrainingProgram_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "TransactionCategory" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_TransactionCategory" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TransactionCategory_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TransactionCategory_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "UnitGroup" (
    "ID" text NOT NULL,
    "SystemLocked" boolean NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_UnitGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_UnitGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_UnitGroup_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "WorkOrderType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_WorkOrderType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WorkOrderType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_WorkOrderType_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "CostCentre" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Disabled" boolean NOT NULL,
    "Description" text NULL,
    "CostCentreType" integer NOT NULL,
    "BusinessID" text NULL,
    "CostCentresGroupID" text NULL,
    "ParentCostCentreID" text NULL,
    CONSTRAINT "PK_CostCentre" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CostCentre_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CostCentre_CostCentre_ParentCostCentreID" FOREIGN KEY ("ParentCostCentreID") REFERENCES "CostCentre" ("ID"),
    CONSTRAINT "FK_CostCentre_CostCentresGroup_CostCentresGroupID" FOREIGN KEY ("CostCentresGroupID") REFERENCES "CostCentresGroup" ("ID")
);

CREATE TABLE "HolidayScheduleRecord" (
    "ID" text NOT NULL,
    "HolidayID" text NULL,
    "HolidayScheduleID" text NULL,
    CONSTRAINT "PK_HolidayScheduleRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_HolidayScheduleRecord_Holiday_HolidayID" FOREIGN KEY ("HolidayID") REFERENCES "Holiday" ("ID"),
    CONSTRAINT "FK_HolidayScheduleRecord_HolidaySchedule_HolidayScheduleID" FOREIGN KEY ("HolidayScheduleID") REFERENCES "HolidaySchedule" ("ID")
);

CREATE TABLE "ItemAttributeOption" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "ItemAttributeID" text NULL,
    CONSTRAINT "PK_ItemAttributeOption" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemAttributeOption_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemAttributeOption_ItemAttribute_ItemAttributeID" FOREIGN KEY ("ItemAttributeID") REFERENCES "ItemAttribute" ("ID")
);

CREATE TABLE "SEOKeyWordRecord" (
    "ID" text NOT NULL,
    "SEOKeyWordID" text NULL,
    CONSTRAINT "PK_SEOKeyWordRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SEOKeyWordRecord_SEOKeyWord_SEOKeyWordID" FOREIGN KEY ("SEOKeyWordID") REFERENCES "SEOKeyWord" ("ID")
);

CREATE TABLE "ShippingMethodClassRecord" (
    "ID" text NOT NULL,
    "ShippingMethodID" text NULL,
    "Cost" double precision NOT NULL,
    "CurrencyID" text NULL,
    "ShippingClassID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingMethodClassRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingMethodClassRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingMethodClassRecord_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_ShippingMethodClassRecord_ShippingClass_ShippingClassID" FOREIGN KEY ("ShippingClassID") REFERENCES "ShippingClass" ("ID"),
    CONSTRAINT "FK_ShippingMethodClassRecord_ShippingMethod_ShippingMethodID" FOREIGN KEY ("ShippingMethodID") REFERENCES "ShippingMethod" ("ID")
);

CREATE TABLE "ShippingRegionCountryRecord" (
    "ID" text NOT NULL,
    "ShippingRegionID" text NULL,
    "CountryID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingRegionCountryRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingRegionCountryRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingRegionCountryRecord_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_ShippingRegionCountryRecord_ShippingRegion_ShippingRegionID" FOREIGN KEY ("ShippingRegionID") REFERENCES "ShippingRegion" ("ID")
);

CREATE TABLE "ShippingMethodZoneRecord" (
    "ID" text NOT NULL,
    "Enabled" boolean NOT NULL,
    "ShippingMethodID" text NULL,
    "ShippingZoneID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingMethodZoneRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingMethodZoneRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingMethodZoneRecord_ShippingMethod_ShippingMethodID" FOREIGN KEY ("ShippingMethodID") REFERENCES "ShippingMethod" ("ID"),
    CONSTRAINT "FK_ShippingMethodZoneRecord_ShippingZone_ShippingZoneID" FOREIGN KEY ("ShippingZoneID") REFERENCES "ShippingZone" ("ID")
);

CREATE TABLE "ShippingRegionZoneRecord" (
    "ID" text NOT NULL,
    "ShippingRegionID" text NULL,
    "ShippingZoneID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingRegionZoneRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingRegionZoneRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingRegionZoneRecord_ShippingRegion_ShippingRegionID" FOREIGN KEY ("ShippingRegionID") REFERENCES "ShippingRegion" ("ID"),
    CONSTRAINT "FK_ShippingRegionZoneRecord_ShippingZone_ShippingZoneID" FOREIGN KEY ("ShippingZoneID") REFERENCES "ShippingZone" ("ID")
);

CREATE TABLE "WebResource" (
    "ID" text NOT NULL,
    "WebsiteThemeID" text NULL,
    "BusinessID" text NULL,
    "Discriminator" text NOT NULL,
    "WebsiteScript_Order" integer NULL,
    "Script" text NULL,
    "ScriptDisposition" integer NULL,
    "Order" integer NULL,
    "Style" text NULL,
    "StyleSheetDisposition" integer NULL,
    CONSTRAINT "PK_WebResource" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebResource_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_WebResource_WebsiteTheme_WebsiteThemeID" FOREIGN KEY ("WebsiteThemeID") REFERENCES "WebsiteTheme" ("ID")
);

CREATE TABLE "BusinessApplicationQueryRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessApplicationID" text NULL,
    CONSTRAINT "PK_BusinessApplicationQueryRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessApplicationQueryRecord_BusinessApplication_Business~" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID")
);

CREATE TABLE "BusinessApplicationReplyURL" (
    "ID" text NOT NULL,
    "ReplyURL" text NULL,
    "BusinessApplicationID" text NULL,
    CONSTRAINT "PK_BusinessApplicationReplyURL" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessApplicationReplyURL_BusinessApplication_BusinessApp~" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID")
);

CREATE TABLE "BusinessApplicationSecret" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Revoked" boolean NOT NULL,
    "PublicKey" text NULL,
    "PrivateKey" text NULL,
    "SigningPublicKey" text NULL,
    "SigningPrivateKey" text NULL,
    "AccessKeyPairID" text NULL,
    "JwtSigningAccessKeyPairID" text NULL,
    "BusinessApplicationSecretPeriod" integer NOT NULL,
    "BusinessApplicationID" text NULL,
    CONSTRAINT "PK_BusinessApplicationSecret" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessApplicationSecret_AccessKeyPair_AccessKeyPairID" FOREIGN KEY ("AccessKeyPairID") REFERENCES "AccessKeyPair" ("IP"),
    CONSTRAINT "FK_BusinessApplicationSecret_AccessKeyPair_JwtSigningAccessKey~" FOREIGN KEY ("JwtSigningAccessKeyPairID") REFERENCES "AccessKeyPair" ("IP"),
    CONSTRAINT "FK_BusinessApplicationSecret_BusinessApplication_BusinessAppli~" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID")
);

CREATE TABLE "OpenIddictEntityFrameworkCoreApplication" (
    "Id" text NOT NULL,
    "Discriminator" text NOT NULL,
    "Logo" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessApplicationID" text NULL,
    "ClientId" text NULL,
    "ClientSecret" text NULL,
    "ConcurrencyToken" text NULL,
    "ConsentType" text NULL,
    "DisplayName" text NULL,
    "DisplayNames" text NULL,
    "Permissions" text NULL,
    "PostLogoutRedirectUris" text NULL,
    "Properties" text NULL,
    "RedirectUris" text NULL,
    "Requirements" text NULL,
    "Type" text NULL,
    CONSTRAINT "PK_OpenIddictEntityFrameworkCoreApplication" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_OpenIddictEntityFrameworkCoreApplication_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_OpenIddictEntityFrameworkCoreApplication_BusinessApplicatio~" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID"),
    CONSTRAINT "FK_OpenIddictEntityFrameworkCoreApplication_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "WebPortal" (
    "ID" text NOT NULL,
    "Root" boolean NOT NULL,
    "Disabled" boolean NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessDomainID" text NULL,
    "WebsiteThemeID" text NULL,
    "BusinessPortalApplicationID" text NULL,
    "PublicKey" text NULL,
    "PrivateKey" text NULL,
    "Domain" text NULL,
    "Settings" text NULL,
    CONSTRAINT "PK_WebPortal" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebPortal_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_WebPortal_BusinessApplication_BusinessPortalApplicationID" FOREIGN KEY ("BusinessPortalApplicationID") REFERENCES "BusinessApplication" ("ID"),
    CONSTRAINT "FK_WebPortal_BusinessDomain_BusinessDomainID" FOREIGN KEY ("BusinessDomainID") REFERENCES "BusinessDomain" ("ID"),
    CONSTRAINT "FK_WebPortal_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_WebPortal_WebsiteTheme_WebsiteThemeID" FOREIGN KEY ("WebsiteThemeID") REFERENCES "WebsiteTheme" ("ID")
);

CREATE TABLE "BusinessIndustryRecord" (
    "ID" text NOT NULL,
    "BusinessIndustryID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_BusinessIndustryRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessIndustryRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessIndustryRecord_BusinessIndustry_BusinessIndustryID" FOREIGN KEY ("BusinessIndustryID") REFERENCES "BusinessIndustry" ("ID")
);

CREATE TABLE "BusinessApplicationRequestedPermission" (
    "ID" text NOT NULL,
    "IsOptional" boolean NOT NULL,
    "BusinessPermissionID" text NULL,
    "BusinessApplicationID" text NULL,
    CONSTRAINT "PK_BusinessApplicationRequestedPermission" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessApplicationRequestedPermission_BusinessApplication_~" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID"),
    CONSTRAINT "FK_BusinessApplicationRequestedPermission_BusinessPermission_B~" FOREIGN KEY ("BusinessPermissionID") REFERENCES "BusinessPermission" ("ID")
);

CREATE TABLE "BusinessProcessStage" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "StageOrder" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessProcessID" text NULL,
    "ParentBusinessProcessStageID" text NULL,
    "Discriminator" text NOT NULL,
    "DealUnitFlowID" text NULL,
    "AppraisalWorkflowID" text NULL,
    CONSTRAINT "PK_BusinessProcessStage" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessProcessStage_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessProcessStage_BusinessProcess_AppraisalWorkflowID" FOREIGN KEY ("AppraisalWorkflowID") REFERENCES "BusinessProcess" ("ID"),
    CONSTRAINT "FK_BusinessProcessStage_BusinessProcess_BusinessProcessID" FOREIGN KEY ("BusinessProcessID") REFERENCES "BusinessProcess" ("ID"),
    CONSTRAINT "FK_BusinessProcessStage_BusinessProcess_DealUnitFlowID" FOREIGN KEY ("DealUnitFlowID") REFERENCES "BusinessProcess" ("ID"),
    CONSTRAINT "FK_BusinessProcessStage_BusinessProcessStage_ParentBusinessPro~" FOREIGN KEY ("ParentBusinessProcessStageID") REFERENCES "BusinessProcessStage" ("ID"),
    CONSTRAINT "FK_BusinessProcessStage_BusinessProfileRecord_BusinessProfileR~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessPermissionGrant" (
    "ID" text NOT NULL,
    "BusinessPermissionID" text NULL,
    "GrantorBusinessProfileRecordID" text NULL,
    "BusinessID" text NULL,
    "Discriminator" text NOT NULL,
    "BusinessApplicationID" text NULL,
    "BusinessApplicationGrantScope" integer NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessSecurityRoleID" text NULL,
    CONSTRAINT "PK_BusinessPermissionGrant" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessPermissionGrant_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessPermissionGrant_BusinessApplication_BusinessApplica~" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID"),
    CONSTRAINT "FK_BusinessPermissionGrant_BusinessPermission_BusinessPermissi~" FOREIGN KEY ("BusinessPermissionID") REFERENCES "BusinessPermission" ("ID"),
    CONSTRAINT "FK_BusinessPermissionGrant_BusinessProfileRecord_BusinessProfi~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_BusinessPermissionGrant_BusinessProfileRecord_GrantorBusine~" FOREIGN KEY ("GrantorBusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_BusinessPermissionGrant_BusinessSecurityRole_BusinessSecuri~" FOREIGN KEY ("BusinessSecurityRoleID") REFERENCES "BusinessSecurityRole" ("ID")
);

CREATE TABLE "SecurityRoleGrant" (
    "ID" text NOT NULL,
    "GrantorBusinessProfileRecordID" text NULL,
    "BusinessID" text NULL,
    "BusinessSecurityRoleID" text NULL,
    "Discriminator" text NOT NULL,
    "BusinessApplicationID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SecurityRoleGrant" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SecurityRoleGrant_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SecurityRoleGrant_BusinessApplication_BusinessApplicationID" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID"),
    CONSTRAINT "FK_SecurityRoleGrant_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SecurityRoleGrant_BusinessProfileRecord_GrantorBusinessProf~" FOREIGN KEY ("GrantorBusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SecurityRoleGrant_BusinessSecurityRole_BusinessSecurityRole~" FOREIGN KEY ("BusinessSecurityRoleID") REFERENCES "BusinessSecurityRole" ("ID")
);

CREATE TABLE "Discount" (
    "ID" text NOT NULL,
    "Description" text NULL,
    "BeginQuantity" double precision NOT NULL,
    "EndQuantity" double precision NOT NULL,
    "Percent" double precision NOT NULL,
    "Value" double precision NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "DiscountListID" text NULL,
    CONSTRAINT "PK_Discount" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Discount_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Discount_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Discount_DiscountList_DiscountListID" FOREIGN KEY ("DiscountListID") REFERENCES "DiscountList" ("ID")
);

CREATE TABLE "FiscalIdentificationType" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "FiscalAuthorityID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_FiscalIdentificationType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalIdentificationType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalIdentificationType_BusinessProfileRecord_BusinessProf~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalIdentificationType_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID")
);

CREATE TABLE "FiscalRegime" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "FiscalAuthorityID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_FiscalRegime" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalRegime_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalRegime_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalRegime_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID")
);

CREATE TABLE "FiscalResponsibility" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "FiscalAuthorityID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_FiscalResponsibility" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalResponsibility_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalResponsibility_BusinessProfileRecord_BusinessProfileR~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalResponsibility_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID")
);

CREATE TABLE "FiscalYear" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Disabled" boolean NOT NULL,
    "Default" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Start" timestamp with time zone NOT NULL,
    "End" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "FiscalAuthorityID" text NULL,
    CONSTRAINT "PK_FiscalYear" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalYear_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalYear_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalYear_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID")
);

CREATE TABLE "InvoiceEnumerationRange" (
    "ID" text NOT NULL,
    "Prefix" text NULL,
    "Suffix" text NULL,
    "Identifier" text NULL,
    "CurrentNumeration" bigint NOT NULL,
    "NumerationFrom" bigint NOT NULL,
    "NumerationTo" bigint NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ValidFrom" timestamp with time zone NOT NULL,
    "ValidTo" timestamp with time zone NOT NULL,
    "FiscalAuthorityID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "DocumentType" integer NOT NULL,
    CONSTRAINT "PK_InvoiceEnumerationRange" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_InvoiceEnumerationRange_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_InvoiceEnumerationRange_BusinessProfileRecord_BusinessProfi~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_InvoiceEnumerationRange_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID")
);

CREATE TABLE "WebhookRequestCondition" (
    "ID" text NOT NULL,
    "WebhookRequestID" text NULL,
    "PropertyName" text NULL,
    "ExpectedValue" text NULL,
    CONSTRAINT "PK_WebhookRequestCondition" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebhookRequestCondition_Integration_WebhookRequestID" FOREIGN KEY ("WebhookRequestID") REFERENCES "Integration" ("ID")
);

CREATE TABLE "WebhookRequestDataEntry" (
    "ID" text NOT NULL,
    "WebhookRequestID" text NULL,
    "Key" text NULL,
    "PropertyName" text NULL,
    CONSTRAINT "PK_WebhookRequestDataEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebhookRequestDataEntry_Integration_WebhookRequestID" FOREIGN KEY ("WebhookRequestID") REFERENCES "Integration" ("ID")
);

CREATE TABLE "WebhookRequestHeader" (
    "ID" text NOT NULL,
    "WebhookRequestID" text NULL,
    "HeaderKey" text NULL,
    "HeaderValue" text NULL,
    CONSTRAINT "PK_WebhookRequestHeader" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebhookRequestHeader_Integration_WebhookRequestID" FOREIGN KEY ("WebhookRequestID") REFERENCES "Integration" ("ID")
);

CREATE TABLE "ItemType" (
    "ID" text NOT NULL,
    "PluralTitle" text NULL,
    "SingularTitle" text NULL,
    "Description" text NULL,
    "ImageURL" text NULL,
    "GoogleCategoryTaxonomy" text NULL,
    "BusinessID" text NULL,
    "ItemCategoryID" text NULL,
    "ItemGoogleCategoryID" text NULL,
    CONSTRAINT "PK_ItemType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemType_ItemCategory_ItemCategoryID" FOREIGN KEY ("ItemCategoryID") REFERENCES "ItemCategory" ("ID"),
    CONSTRAINT "FK_ItemType_ItemGoogleCategory_ItemGoogleCategoryID" FOREIGN KEY ("ItemGoogleCategoryID") REFERENCES "ItemGoogleCategory" ("ID")
);

CREATE TABLE "Ledger" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "DateTime" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "LedgerTypeID" text NULL,
    CONSTRAINT "PK_Ledger" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Ledger_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Ledger_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Ledger_LedgerType_LedgerTypeID" FOREIGN KEY ("LedgerTypeID") REFERENCES "LedgerType" ("ID")
);

CREATE TABLE "MarketingCampaign" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Offer" text NULL,
    "Active" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ProposedStart" timestamp with time zone NOT NULL,
    "ProposedEnd" timestamp with time zone NOT NULL,
    "ActualStart" timestamp with time zone NOT NULL,
    "ActualEnd" timestamp with time zone NOT NULL,
    "Code" text NULL,
    "AllocatedBudget" double precision NOT NULL,
    "ActivityCost" double precision NOT NULL,
    "MiscCost" double precision NOT NULL,
    "ExpectedResponsePercent" double precision NOT NULL,
    "MarketingAreaID" text NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "MarketingListID" text NULL,
    CONSTRAINT "PK_MarketingCampaign" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MarketingCampaign_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MarketingCampaign_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_MarketingCampaign_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_MarketingCampaign_MarketingArea_MarketingAreaID" FOREIGN KEY ("MarketingAreaID") REFERENCES "MarketingArea" ("ID"),
    CONSTRAINT "FK_MarketingCampaign_MarketingList_MarketingListID" FOREIGN KEY ("MarketingListID") REFERENCES "MarketingList" ("ID")
);

CREATE TABLE "PaymentTerm" (
    "ID" text NOT NULL,
    "IsTemplate" boolean NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Percentage" double precision NOT NULL,
    "CreditDays" double precision NOT NULL,
    "CreditWeeks" double precision NOT NULL,
    "CreditMonths" double precision NOT NULL,
    "CreditYears" double precision NOT NULL,
    "PaymentModeID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_PaymentTerm" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentTerm_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PaymentTerm_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PaymentTerm_PaymentMode_PaymentModeID" FOREIGN KEY ("PaymentModeID") REFERENCES "PaymentMode" ("ID")
);

CREATE TABLE "ProficiencyRatingValue" (
    "ID" text NOT NULL,
    "Value" text NULL,
    "ProficiencyRatingModelID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ProficiencyRatingValue" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProficiencyRatingValue_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProficiencyRatingValue_BusinessProfileRecord_BusinessProfil~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ProficiencyRatingValue_ProficiencyRatingModel_ProficiencyRa~" FOREIGN KEY ("ProficiencyRatingModelID") REFERENCES "ProficiencyRatingModel" ("ID")
);

CREATE TABLE "SalesLiterature" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Content" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ModifiedDate" timestamp with time zone NOT NULL,
    "ExpirationDate" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SalesLiteratureTypeID" text NULL,
    CONSTRAINT "PK_SalesLiterature" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SalesLiterature_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SalesLiterature_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SalesLiterature_SalesLiteratureType_SalesLiteratureTypeID" FOREIGN KEY ("SalesLiteratureTypeID") REFERENCES "SalesLiteratureType" ("ID")
);

CREATE TABLE "Policy" (
    "ID" text NOT NULL,
    "Type" text NULL,
    "Code" text NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "IsFree" boolean NOT NULL,
    "Reduce" boolean NOT NULL,
    "IsEnabled" boolean NOT NULL,
    "IsDefault" boolean NOT NULL,
    "AllowInternational" boolean NOT NULL,
    "Hours" integer NOT NULL,
    "Days" integer NOT NULL,
    "Weeks" integer NOT NULL,
    "Months" integer NOT NULL,
    "Years" integer NOT NULL,
    "Value" double precision NOT NULL,
    "Percentage" double precision NOT NULL,
    "CurrencyID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CustomState" text NULL,
    "CustomCity" text NULL,
    "CityID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "Zero" boolean NULL,
    "Reduced" boolean NULL,
    "Withholding" boolean NULL,
    "FiscalAuthorityID" text NULL,
    "IsExpressShipmentPolicy" boolean NULL,
    "ShippingCourierID" text NULL,
    "IsExtendedWarranty" boolean NULL,
    "ReturnPolicy_ShippingCourierID" text NULL,
    CONSTRAINT "PK_Policy" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Policy_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Policy_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Policy_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Policy_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Policy_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Policy_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Policy_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID"),
    CONSTRAINT "FK_Policy_ShippingCourier_ReturnPolicy_ShippingCourierID" FOREIGN KEY ("ReturnPolicy_ShippingCourierID") REFERENCES "ShippingCourier" ("ID"),
    CONSTRAINT "FK_Policy_ShippingCourier_ShippingCourierID" FOREIGN KEY ("ShippingCourierID") REFERENCES "ShippingCourier" ("ID")
);

CREATE TABLE "SocialMediaPost" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Content" text NULL,
    "FeaturedImageUrl" text NULL,
    "BusinessID" text NULL,
    "SocialPostBucketID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SocialMediaPost" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialMediaPost_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SocialMediaPost_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SocialMediaPost_SocialPostBucket_SocialPostBucketID" FOREIGN KEY ("SocialPostBucketID") REFERENCES "SocialPostBucket" ("ID")
);

CREATE TABLE "TrainingProgramResultSet" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "TrainingProgramID" text NULL,
    CONSTRAINT "PK_TrainingProgramResultSet" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TrainingProgramResultSet_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TrainingProgramResultSet_BusinessProfileRecord_BusinessProf~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TrainingProgramResultSet_TrainingProgram_TrainingProgramID" FOREIGN KEY ("TrainingProgramID") REFERENCES "TrainingProgram" ("ID")
);

CREATE TABLE "Unit" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "UnitGroupID" text NULL,
    "BaseUnitAmount" double precision NOT NULL,
    "BaseUnitID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Unit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Unit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Unit_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Unit_Unit_BaseUnitID" FOREIGN KEY ("BaseUnitID") REFERENCES "Unit" ("ID"),
    CONSTRAINT "FK_Unit_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID")
);

CREATE TABLE "ExpenseClaim" (
    "ID" text NOT NULL,
    "ExpenseTypeID" text NULL,
    "Discriminator" text NOT NULL,
    "CostCentreID" text NULL,
    CONSTRAINT "PK_ExpenseClaim" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ExpenseClaim_CostCentre_CostCentreID" FOREIGN KEY ("CostCentreID") REFERENCES "CostCentre" ("ID"),
    CONSTRAINT "FK_ExpenseClaim_ExpenseType_ExpenseTypeID" FOREIGN KEY ("ExpenseTypeID") REFERENCES "ExpenseType" ("ID")
);

CREATE TABLE "OpenIddictEntityFrameworkCoreAuthorization" (
    "Id" text NOT NULL,
    "ApplicationId" text NULL,
    "ConcurrencyToken" text NULL,
    "CreationDate" timestamp with time zone NULL,
    "Properties" text NULL,
    "Scopes" text NULL,
    "Status" text NULL,
    "Subject" text NULL,
    "Type" text NULL,
    CONSTRAINT "PK_OpenIddictEntityFrameworkCoreAuthorization" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_OpenIddictEntityFrameworkCoreAuthorization_OpenIddictEntity~" FOREIGN KEY ("ApplicationId") REFERENCES "OpenIddictEntityFrameworkCoreApplication" ("Id")
);

CREATE TABLE "MenuContext" (
    "ID" text NOT NULL,
    "Enable" boolean NOT NULL,
    "StudioMenu" boolean NOT NULL,
    "Name" text NULL,
    "Category" text NULL,
    "Component" text NULL,
    "CustomCss" text NULL,
    "CustomJs" text NULL,
    "CustomHtml" text NULL,
    "LoggedInOnly" text NULL,
    "BackgroundImage" text NULL,
    "BusinessID" text NULL,
    "WebPortalID" text NULL,
    "AccountHolderID" text NULL,
    "Type" integer NOT NULL,
    CONSTRAINT "PK_MenuContext" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MenuContext_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_MenuContext_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MenuContext_WebPortal_WebPortalID" FOREIGN KEY ("WebPortalID") REFERENCES "WebPortal" ("ID")
);

CREATE TABLE "Taxonomy" (
    "ID" text NOT NULL,
    "Slug" text NULL,
    "Type" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "SeoTitle" text NULL,
    "MetaDescription" text NULL,
    "CornerstoneContent" boolean NOT NULL,
    "AllowSerachEngines" boolean NOT NULL,
    "SeoKeyPhrases" text NULL,
    "CanonicalUrl" text NULL,
    "ImageURL" text NULL,
    "Image" text NULL,
    "WebPortalID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Taxonomy" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Taxonomy_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Taxonomy_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Taxonomy_WebPortal_WebPortalID" FOREIGN KEY ("WebPortalID") REFERENCES "WebPortal" ("ID")
);

CREATE TABLE "WebPortalBusinessDomainRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "WebPortalID" text NULL,
    "BusinessDomainID" text NULL,
    CONSTRAINT "PK_WebPortalBusinessDomainRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebPortalBusinessDomainRecord_BusinessDomain_BusinessDomain~" FOREIGN KEY ("BusinessDomainID") REFERENCES "BusinessDomain" ("ID"),
    CONSTRAINT "FK_WebPortalBusinessDomainRecord_WebPortal_WebPortalID" FOREIGN KEY ("WebPortalID") REFERENCES "WebPortal" ("ID")
);

CREATE TABLE "Workflow" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "WebPortalID" text NULL,
    CONSTRAINT "PK_Workflow" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Workflow_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Workflow_WebPortal_WebPortalID" FOREIGN KEY ("WebPortalID") REFERENCES "WebPortal" ("ID")
);

CREATE TABLE "BusinessProcessStageRelation" (
    "ID" text NOT NULL,
    "ChildBusinessProcessStageID" text NULL,
    "ParentBusinessProcessStageID" text NULL,
    CONSTRAINT "PK_BusinessProcessStageRelation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessProcessStageRelation_BusinessProcessStage_ChildBusi~" FOREIGN KEY ("ChildBusinessProcessStageID") REFERENCES "BusinessProcessStage" ("ID"),
    CONSTRAINT "FK_BusinessProcessStageRelation_BusinessProcessStage_ParentBus~" FOREIGN KEY ("ParentBusinessProcessStageID") REFERENCES "BusinessProcessStage" ("ID")
);

CREATE TABLE "FiscalPeriod" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "FromDate" timestamp with time zone NOT NULL,
    "ToDate" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "FiscalYearID" text NULL,
    CONSTRAINT "PK_FiscalPeriod" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalPeriod_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalPeriod_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalPeriod_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID")
);

CREATE TABLE "FiscalYearDistribution" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "FiscalYearID" text NULL,
    "January" double precision NOT NULL,
    "February" double precision NOT NULL,
    "March" double precision NOT NULL,
    "April" double precision NOT NULL,
    "May" double precision NOT NULL,
    "June" double precision NOT NULL,
    "July" double precision NOT NULL,
    "August" double precision NOT NULL,
    "September" double precision NOT NULL,
    "October" double precision NOT NULL,
    "November" double precision NOT NULL,
    "December" double precision NOT NULL,
    "Discriminator" text NOT NULL,
    "BudgetID" text NULL,
    CONSTRAINT "PK_FiscalYearDistribution" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalYearDistribution_Budget_BudgetID" FOREIGN KEY ("BudgetID") REFERENCES "Budget" ("ID"),
    CONSTRAINT "FK_FiscalYearDistribution_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalYearDistribution_BusinessProfileRecord_BusinessProfil~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalYearDistribution_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID")
);

CREATE TABLE "TaxClass" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Type" integer NOT NULL,
    "BusinessID" text NULL,
    "FiscalAuthorityID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "FiscalYearID" text NULL,
    CONSTRAINT "PK_TaxClass" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TaxClass_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TaxClass_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TaxClass_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID"),
    CONSTRAINT "FK_TaxClass_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID")
);

CREATE TABLE "Journal" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "DateTime" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ParentJournalID" text NULL,
    "JournalTypeID" text NULL,
    "LedgerID" text NULL,
    CONSTRAINT "PK_Journal" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Journal_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Journal_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Journal_Journal_ParentJournalID" FOREIGN KEY ("ParentJournalID") REFERENCES "Journal" ("ID"),
    CONSTRAINT "FK_Journal_JournalType_JournalTypeID" FOREIGN KEY ("JournalTypeID") REFERENCES "JournalType" ("ID"),
    CONSTRAINT "FK_Journal_Ledger_LedgerID" FOREIGN KEY ("LedgerID") REFERENCES "Ledger" ("ID")
);

CREATE TABLE "ProjectResourceSkillRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ProjectResourceID" text NULL,
    "ProjectResourceSkillID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ProficiencyRatingValueID" text NULL,
    "ProjectResourceRoleID" text NULL,
    CONSTRAINT "PK_ProjectResourceSkillRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectResourceSkillRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProjectResourceSkillRecord_BusinessProfileRecord_BusinessPr~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ProjectResourceSkillRecord_ProficiencyRatingValue_Proficien~" FOREIGN KEY ("ProficiencyRatingValueID") REFERENCES "ProficiencyRatingValue" ("ID"),
    CONSTRAINT "FK_ProjectResourceSkillRecord_ProjectResource_ProjectResourceID" FOREIGN KEY ("ProjectResourceID") REFERENCES "ProjectResource" ("ID"),
    CONSTRAINT "FK_ProjectResourceSkillRecord_ProjectResourceRole_ProjectResou~" FOREIGN KEY ("ProjectResourceRoleID") REFERENCES "ProjectResourceRole" ("ID"),
    CONSTRAINT "FK_ProjectResourceSkillRecord_Skill_ProjectResourceSkillID" FOREIGN KEY ("ProjectResourceSkillID") REFERENCES "Skill" ("ID")
);

CREATE TABLE "CourrierItemShippingPolicyRecord" (
    "ID" text NOT NULL,
    "ShippingCourrierID" text NULL,
    "ShippingCourierID" text NULL,
    "ItemShippingPolicyID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_CourrierItemShippingPolicyRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourrierItemShippingPolicyRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourrierItemShippingPolicyRecord_Policy_ItemShippingPolicyID" FOREIGN KEY ("ItemShippingPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_CourrierItemShippingPolicyRecord_ShippingCourier_ShippingCo~" FOREIGN KEY ("ShippingCourierID") REFERENCES "ShippingCourier" ("ID")
);

CREATE TABLE "PriceList" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Context" integer NOT NULL,
    "Description" text NULL,
    "StartDate" timestamp with time zone NOT NULL,
    "EndDate" timestamp with time zone NOT NULL,
    "PartnerVisible" boolean NOT NULL,
    "UnitOfMeasureDependant" boolean NOT NULL,
    "UnitID" text NULL,
    "CurrencyID" text NULL,
    "UnitGroupID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_PriceList" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PriceList_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PriceList_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PriceList_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_PriceList_Unit_UnitID" FOREIGN KEY ("UnitID") REFERENCES "Unit" ("ID"),
    CONSTRAINT "FK_PriceList_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID")
);

CREATE TABLE "OpenIddictEntityFrameworkCoreToken" (
    "Id" text NOT NULL,
    "ApplicationId" text NULL,
    "AuthorizationId" text NULL,
    "ConcurrencyToken" text NULL,
    "CreationDate" timestamp with time zone NULL,
    "ExpirationDate" timestamp with time zone NULL,
    "Payload" text NULL,
    "Properties" text NULL,
    "RedemptionDate" timestamp with time zone NULL,
    "ReferenceId" text NULL,
    "Status" text NULL,
    "Subject" text NULL,
    "Type" text NULL,
    CONSTRAINT "PK_OpenIddictEntityFrameworkCoreToken" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_OpenIddictEntityFrameworkCoreToken_OpenIddictEntityFramewo~1" FOREIGN KEY ("AuthorizationId") REFERENCES "OpenIddictEntityFrameworkCoreAuthorization" ("Id"),
    CONSTRAINT "FK_OpenIddictEntityFrameworkCoreToken_OpenIddictEntityFramewor~" FOREIGN KEY ("ApplicationId") REFERENCES "OpenIddictEntityFrameworkCoreApplication" ("Id")
);

CREATE TABLE "MenuContextItem" (
    "ID" text NOT NULL,
    "UID" integer NOT NULL,
    "Order" integer NOT NULL,
    "Column" integer NOT NULL,
    "Name" text NULL,
    "Text" text NULL,
    "Url" text NULL,
    "Icon" text NULL,
    "Image" text NULL,
    "Target" text NULL,
    "Category" text NULL,
    "Component" text NULL,
    "Background" text NULL,
    "HTMLContent" text NULL,
    "Tooltip" text NULL,
    "IsColumn" boolean NOT NULL,
    "IsSeparator" boolean NOT NULL,
    "LoggedInOnly" boolean NOT NULL,
    "FullHeightSubmenu" boolean NOT NULL,
    "ParentMenuContextItemID" text NULL,
    "MenuContextID" text NULL,
    "MenuContextItemType" integer NOT NULL,
    "MenuItemTabTarget" integer NOT NULL,
    CONSTRAINT "PK_MenuContextItem" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MenuContextItem_MenuContext_MenuContextID" FOREIGN KEY ("MenuContextID") REFERENCES "MenuContext" ("ID"),
    CONSTRAINT "FK_MenuContextItem_MenuContextItem_ParentMenuContextItemID" FOREIGN KEY ("ParentMenuContextItemID") REFERENCES "MenuContextItem" ("ID")
);

CREATE TABLE "WorkflowStage" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "ParentWorkflowStageID" text NULL,
    "WorkflowID" text NULL,
    CONSTRAINT "PK_WorkflowStage" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WorkflowStage_Workflow_WorkflowID" FOREIGN KEY ("WorkflowID") REFERENCES "Workflow" ("ID"),
    CONSTRAINT "FK_WorkflowStage_WorkflowStage_ParentWorkflowStageID" FOREIGN KEY ("ParentWorkflowStageID") REFERENCES "WorkflowStage" ("ID")
);

CREATE TABLE "TaxRate" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Rate" double precision NOT NULL,
    "Value" double precision NOT NULL,
    "UM" text NULL,
    "UnitID" text NULL,
    "UnitGroupID" text NULL,
    "Priority" integer NOT NULL,
    "Compound" boolean NOT NULL,
    "Shipping" boolean NOT NULL,
    "Withholding" boolean NOT NULL,
    "SingleTransactionThreshold" double precision NOT NULL,
    "CumulativeTransactionThreshold" double precision NOT NULL,
    "FiscalAuthorityID" text NULL,
    "FiscalYearID" text NULL,
    "BusinessID" text NULL,
    "CountryID" text NULL,
    "TaxClassID" text NULL,
    "CurrencyID" text NULL,
    "TaxPolicyID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_TaxRate" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TaxRate_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TaxRate_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TaxRate_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_TaxRate_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_TaxRate_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID"),
    CONSTRAINT "FK_TaxRate_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID"),
    CONSTRAINT "FK_TaxRate_Policy_TaxPolicyID" FOREIGN KEY ("TaxPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_TaxRate_TaxClass_TaxClassID" FOREIGN KEY ("TaxClassID") REFERENCES "TaxClass" ("ID"),
    CONSTRAINT "FK_TaxRate_Unit_UnitID" FOREIGN KEY ("UnitID") REFERENCES "Unit" ("ID"),
    CONSTRAINT "FK_TaxRate_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID")
);

CREATE TABLE "JournalEntry" (
    "ID" text NOT NULL,
    "Group" boolean NOT NULL,
    "Opening" boolean NOT NULL,
    "Description" text NULL,
    "EntryType" integer NOT NULL,
    "TransactionType" integer NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Date" timestamp with time zone NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "Credit" double precision NOT NULL,
    "Debit" double precision NOT NULL,
    "DebitAccountID" text NULL,
    "CreditAccountID" text NULL,
    "CurrencyID" text NULL,
    "JournalID" text NULL,
    "FinancialBookID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ParentJournalEntryID" text NULL,
    CONSTRAINT "PK_JournalEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_JournalEntry_Account_CreditAccountID" FOREIGN KEY ("CreditAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_JournalEntry_Account_DebitAccountID" FOREIGN KEY ("DebitAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_JournalEntry_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_JournalEntry_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_JournalEntry_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_JournalEntry_FinancialBook_FinancialBookID" FOREIGN KEY ("FinancialBookID") REFERENCES "FinancialBook" ("ID"),
    CONSTRAINT "FK_JournalEntry_Journal_JournalID" FOREIGN KEY ("JournalID") REFERENCES "Journal" ("ID"),
    CONSTRAINT "FK_JournalEntry_JournalEntry_ParentJournalEntryID" FOREIGN KEY ("ParentJournalEntryID") REFERENCES "JournalEntry" ("ID")
);

CREATE TABLE "PartnerProgramTier" (
    "ID" text NOT NULL,
    "Title" boolean NOT NULL,
    "Criteria" boolean NOT NULL,
    "Description" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "PartnerProgramID" text NULL,
    "PriceListID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_PartnerProgramTier" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PartnerProgramTier_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PartnerProgramTier_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PartnerProgramTier_PartnerProgram_PartnerProgramID" FOREIGN KEY ("PartnerProgramID") REFERENCES "PartnerProgram" ("ID"),
    CONSTRAINT "FK_PartnerProgramTier_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID")
);

CREATE TABLE "PriceListTerritory" (
    "ID" text NOT NULL,
    "TerritoryID" text NULL,
    "PriceListID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_PriceListTerritory" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PriceListTerritory_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PriceListTerritory_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PriceListTerritory_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_PriceListTerritory_Territory_TerritoryID" FOREIGN KEY ("TerritoryID") REFERENCES "Territory" ("ID")
);

CREATE TABLE "RolePriceMarkup" (
    "ID" text NOT NULL,
    "Description" text NULL,
    "Percent" double precision NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "PriceListID" text NULL,
    CONSTRAINT "PK_RolePriceMarkup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_RolePriceMarkup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_RolePriceMarkup_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_RolePriceMarkup_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID")
);

CREATE TABLE "WorkflowExecution" (
    "ID" text NOT NULL,
    "WorkflowID" text NULL,
    "WorkflowStageID" text NULL,
    CONSTRAINT "PK_WorkflowExecution" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WorkflowExecution_Workflow_WorkflowID" FOREIGN KEY ("WorkflowID") REFERENCES "Workflow" ("ID"),
    CONSTRAINT "FK_WorkflowExecution_WorkflowStage_WorkflowStageID" FOREIGN KEY ("WorkflowStageID") REFERENCES "WorkflowStage" ("ID")
);

CREATE TABLE "TaxRateClassRecord" (
    "ID" text NOT NULL,
    "TaxClassID" text NULL,
    "TaxRateID" text NULL,
    "Rate" double precision NOT NULL,
    "Priority" integer NOT NULL,
    "Compound" boolean NOT NULL,
    "Shipping" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_TaxRateClassRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TaxRateClassRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TaxRateClassRecord_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TaxRateClassRecord_TaxClass_TaxClassID" FOREIGN KEY ("TaxClassID") REFERENCES "TaxClass" ("ID"),
    CONSTRAINT "FK_TaxRateClassRecord_TaxRate_TaxRateID" FOREIGN KEY ("TaxRateID") REFERENCES "TaxRate" ("ID")
);

CREATE TABLE "WorkflowState" (
    "ID" text NOT NULL,
    "Output" text NULL,
    "OutputClass" text NULL,
    "OutputType" integer NOT NULL,
    "WorkflowID" text NULL,
    "WorkflowStageID" text NULL,
    "WorkflowExecutionID" text NULL,
    CONSTRAINT "PK_WorkflowState" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WorkflowState_Workflow_WorkflowID" FOREIGN KEY ("WorkflowID") REFERENCES "Workflow" ("ID"),
    CONSTRAINT "FK_WorkflowState_WorkflowExecution_WorkflowExecutionID" FOREIGN KEY ("WorkflowExecutionID") REFERENCES "WorkflowExecution" ("ID"),
    CONSTRAINT "FK_WorkflowState_WorkflowStage_WorkflowStageID" FOREIGN KEY ("WorkflowStageID") REFERENCES "WorkflowStage" ("ID")
);

CREATE TABLE "BusinessDepartment" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Disabled" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "OrganizationProfileID" text NULL,
    "ParentDepartmentID" text NULL,
    CONSTRAINT "PK_BusinessDepartment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessDepartment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessDepartment_BusinessDepartment_ParentDepartmentID" FOREIGN KEY ("ParentDepartmentID") REFERENCES "BusinessDepartment" ("ID"),
    CONSTRAINT "FK_BusinessDepartment_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessSecurityLog" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Message" text NULL,
    "Language" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SigningProfileID" text NULL,
    "SigningCertificateID" text NULL,
    "SignedDocumentID" text NULL,
    CONSTRAINT "PK_BusinessSecurityLog" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessSecurityLog_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessSecurityLog_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "BusinessTeam" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "AvatarURL" text NULL,
    "IsPublic" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessUnitID" text NULL,
    "OrganizationProfileID" text NULL,
    CONSTRAINT "PK_BusinessTeam" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessTeam_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessTeam_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "ServiceQueue" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessTeamID" text NULL,
    CONSTRAINT "PK_ServiceQueue" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServiceQueue_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceQueue_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ServiceQueue_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID")
);

CREATE TABLE "BusinessTeamRecord" (
    "ID" text NOT NULL,
    "Type" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessTeamID" text NULL,
    "Discriminator" text NOT NULL,
    "ProjectID" text NULL,
    "ContactID" text NULL,
    "EmployeeProfileID" text NULL,
    CONSTRAINT "PK_BusinessTeamRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessTeamRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessTeamRecord_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_BusinessTeamRecord_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID")
);

CREATE TABLE "BusinessUnit" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Disabled" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CountryID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "OrganizationProfileID" text NULL,
    "ParentBusinessUnitID" text NULL,
    CONSTRAINT "PK_BusinessUnit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessUnit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessUnit_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_BusinessUnit_BusinessUnit_ParentBusinessUnitID" FOREIGN KEY ("ParentBusinessUnitID") REFERENCES "BusinessUnit" ("ID"),
    CONSTRAINT "FK_BusinessUnit_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID")
);

CREATE TABLE "BusinessUnitRecord" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessUnitID" text NULL,
    CONSTRAINT "PK_BusinessUnitRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_BusinessUnitRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_BusinessUnitRecord_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_BusinessUnitRecord_BusinessUnit_BusinessUnitID" FOREIGN KEY ("BusinessUnitID") REFERENCES "BusinessUnit" ("ID")
);

CREATE TABLE "Cart" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CurrencyID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "LocationID" text NULL,
    "Type" text NOT NULL,
    "Freight" double precision NOT NULL,
    "Taxes" double precision NOT NULL,
    "Discounts" double precision NOT NULL,
    "Surcharges" double precision NOT NULL,
    "SubTotal" double precision NOT NULL,
    "Total" double precision NOT NULL,
    "IP" text NULL,
    "ForSpiders" boolean NOT NULL,
    "IPLookupID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    "GuestCart_BusinessID" text NULL,
    CONSTRAINT "PK_Cart" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Cart_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Cart_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Cart_Business_GuestCart_BusinessID" FOREIGN KEY ("GuestCart_BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Cart_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Cart_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Cart_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Cart_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Cart_IPLookup_IPLookupID" FOREIGN KEY ("IPLookupID") REFERENCES "IPLookup" ("ID")
);

CREATE TABLE "CartRecord" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CostCalculationMethod" integer NOT NULL,
    "CartID" text NULL,
    "CurrencyID" text NULL,
    "Quantity" double precision NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "TotalDetailAmountInUSD" double precision NOT NULL,
    "TotalDiscountsInUSD" double precision NOT NULL,
    "TotalProfitInUSD" double precision NOT NULL,
    "TotalTaxesInUSD" double precision NOT NULL,
    "TotalWithholdingTaxesInUSD" double precision NOT NULL,
    "TotalShippingCostInUSD" double precision NOT NULL,
    "TotalShippingTaxesInUSD" double precision NOT NULL,
    "TotalWarrantyCostInUSD" double precision NOT NULL,
    "TotalReturnCostInUSD" double precision NOT NULL,
    "TotalRefundCostInUSD" double precision NOT NULL,
    "TotalSurchargesInUSD" double precision NOT NULL,
    "TotalAmountInUSD" double precision NOT NULL,
    "CustomDetailAmount" double precision NOT NULL,
    "CustomDiscountsAmount" double precision NOT NULL,
    "CustomSurchargesAmount" double precision NOT NULL,
    "CustomProfitAmount" double precision NOT NULL,
    "CustomShippingCostAmount" double precision NOT NULL,
    "CustomShippingTaxAmount" double precision NOT NULL,
    "CustomTaxAmount" double precision NOT NULL,
    "CustomWithholdingTaxAmount" double precision NOT NULL,
    "CustomTotalAmount" double precision NOT NULL,
    "ItemID" text NULL,
    "ItemCartRecord_ItemID" text NULL,
    "ItemShippingPolicyID" text NULL,
    "ReturnPolicyID" text NULL,
    "RefundPolicyID" text NULL,
    "WarrantyPolicyID" text NULL,
    "ShippingAddressID" text NULL,
    "RecentlyViewedItemRecord_ItemID" text NULL,
    CONSTRAINT "PK_CartRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CartRecord_Cart_CartID" FOREIGN KEY ("CartID") REFERENCES "Cart" ("ID"),
    CONSTRAINT "FK_CartRecord_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_CartRecord_Policy_ItemShippingPolicyID" FOREIGN KEY ("ItemShippingPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_CartRecord_Policy_RefundPolicyID" FOREIGN KEY ("RefundPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_CartRecord_Policy_ReturnPolicyID" FOREIGN KEY ("ReturnPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_CartRecord_Policy_WarrantyPolicyID" FOREIGN KEY ("WarrantyPolicyID") REFERENCES "Policy" ("ID")
);

CREATE TABLE "CognitiveAgentConversation" (
    "ID" text NOT NULL,
    "Claimed" boolean NOT NULL,
    "Current" boolean NOT NULL,
    "AccessKey" text NULL,
    "ClaimCode" text NULL,
    "ChannelID" text NULL,
    "ActivityID" text NULL,
    "ActivityFrom" text NULL,
    "ConversationID" text NULL,
    "AccessCode" text NULL,
    "LastActivity" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "State" text NULL,
    "History" text NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "CognitiveAgentID" text NULL,
    "AccountHolderID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "ReceptorBusinessID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CognitiveAgentConversation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CognitiveAgentConversation_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_CognitiveAgentConversation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CognitiveAgentConversation_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CognitiveAgentConversation_BusinessProfileRecord_BusinessPr~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CognitiveAgentConversation_CognitiveAgent_CognitiveAgentID" FOREIGN KEY ("CognitiveAgentID") REFERENCES "CognitiveAgent" ("ID")
);

CREATE TABLE "Commission" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BaseAmount" numeric NOT NULL,
    "AddedPercent" numeric NOT NULL,
    "AddedAmount" numeric NOT NULL,
    "TaxComission" numeric NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SalaryID" text NULL,
    "EmmisorWalletAccountID" text NULL,
    "ReceptorWalletAccountID" text NULL,
    "EmmisorContactID" text NULL,
    "ReceptorContactID" text NULL,
    "Discriminator" text NOT NULL,
    "PaymentID" text NULL,
    CONSTRAINT "PK_Commission" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Commission_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Commission_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID")
);

CREATE TABLE "Contact" (
    "ID" text NOT NULL,
    "ReadOnly" boolean NOT NULL,
    "SystemRequired" boolean NOT NULL,
    "IdP_AccessCode" text NULL,
    "ActiveDirectoryID" text NULL,
    "IdentityProvider" text NULL,
    "DisplayInSocialSearch" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Birthday" timestamp with time zone NOT NULL,
    "Anniversary" timestamp with time zone NOT NULL,
    "LastContactDate" timestamp with time zone NOT NULL,
    "LastCampaignDate" timestamp with time zone NOT NULL,
    "Gender" integer NOT NULL,
    "ContactType" integer NOT NULL,
    "ContactStage" integer NOT NULL,
    "ContactGender" integer NOT NULL,
    "ContactStatus" integer NOT NULL,
    "ContactEthnicGroup" integer NOT NULL,
    "ContactMaritalStatus" integer NOT NULL,
    "PreferredContactMethod" integer NOT NULL,
    "ContactEducationLevel" integer NOT NULL,
    "OrganizationOwnership" integer NOT NULL,
    "ShippingTerms" integer NOT NULL,
    "Spouse" text NULL,
    "Parents" text NULL,
    "Brothers" text NULL,
    "Childrens" text NULL,
    "BrothersCount" integer NOT NULL,
    "ChildrensCount" integer NOT NULL,
    "DUNS" text NULL,
    "Domain" text NULL,
    "TwitterURL" text NULL,
    "InstagramURL" text NULL,
    "TwitchURL" text NULL,
    "RedditURL" text NULL,
    "GithubURL" text NULL,
    "YoutubeURL" text NULL,
    "LinkedInURL" text NULL,
    "FacebookURL" text NULL,
    "FacebookPageURL" text NULL,
    "StackOverflowURL" text NULL,
    "StackExchangeURL" text NULL,
    "TikTokUsername" text NULL,
    "GithubUsername" text NULL,
    "TwitterUsername" text NULL,
    "InstagramUsername" text NULL,
    "XboxLiveUsername" text NULL,
    "BattleNetUsername" text NULL,
    "Website" text NULL,
    "Notes" text NULL,
    "AllowFax" boolean NOT NULL,
    "AllowMail" boolean NOT NULL,
    "AllowEmail" boolean NOT NULL,
    "AllowBulkEmail" boolean NOT NULL,
    "AllowPhoneCalls" boolean NOT NULL,
    "AllowFollowEmail" boolean NOT NULL,
    "AllowMarketingMaterials" boolean NOT NULL,
    "PersonalNotes" text NULL,
    "Email" text NULL,
    "Name" text NULL,
    "LastName" text NULL,
    "AvatarURL" text NULL,
    "CoverURL" text NULL,
    "TaxID" text NULL,
    "TaxExempt" boolean NOT NULL,
    "SICCode" text NULL,
    "TickerSymbol" text NULL,
    "DirectEmployeesCount" integer NOT NULL,
    "IndirectEmployeesCount" integer NOT NULL,
    "About" text NULL,
    "JobTitle" text NULL,
    "Description" boolean NOT NULL,
    "Department" text NULL,
    "FaxNumber" text NULL,
    "OfficialID" text NULL,
    "MobilePhone" text NULL,
    "BusinessPhone" text NULL,
    "WhatsAppPhone" text NULL,
    "TelegramPhone" text NULL,
    "AnnualRevenue" text NULL,
    "OrganizationName" text NULL,
    "BusinessSizeID" text NULL,
    "BusinessSegmentID" text NULL,
    "BusinessIndustryID" text NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "CustomState" text NULL,
    "CustomCity" text NULL,
    "StreetLine1" text NULL,
    "StreetLine2" text NULL,
    "PostalCode" text NULL,
    "Longitude" text NULL,
    "Latitude" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "TimezoneID" text NULL,
    "TerritoryID" text NULL,
    "CountryLanguageID" text NULL,
    "ParentContactID" text NULL,
    "OrganizationID" text NULL,
    "OwnerContactID" text NULL,
    "PrimaryContactID" text NULL,
    "RelatedAccountHolderID" text NULL,
    "RelatedBusinessProfileRecordID" text NULL,
    "RelatedBusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BusinessID" text NULL,
    "AccountHolderID" text NULL,
    "PartnerProfileID" text NULL,
    "ContactSourceID" text NULL,
    "ItemShippingPolicyID" text NULL,
    "ShippingMethodID" text NULL,
    "CurrencyID" text NULL,
    "Overdue" boolean NOT NULL,
    "OverdueLimit" double precision NOT NULL,
    "OverdueAmount" double precision NOT NULL,
    "CreditLimit" double precision NOT NULL,
    "CreditScore" double precision NOT NULL,
    "AllowCreditHold" boolean NOT NULL,
    "PaymentTermID" text NULL,
    "FinancialBookID" text NULL,
    "BusinessTeamID" text NULL,
    CONSTRAINT "PK_Contact" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Contact_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Contact_AspNetUsers_RelatedAccountHolderID" FOREIGN KEY ("RelatedAccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Contact_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Contact_Business_RelatedBusinessID" FOREIGN KEY ("RelatedBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Contact_BusinessIndustry_BusinessIndustryID" FOREIGN KEY ("BusinessIndustryID") REFERENCES "BusinessIndustry" ("ID"),
    CONSTRAINT "FK_Contact_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Contact_BusinessProfileRecord_RelatedBusinessProfileRecordID" FOREIGN KEY ("RelatedBusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Contact_BusinessSegment_BusinessSegmentID" FOREIGN KEY ("BusinessSegmentID") REFERENCES "BusinessSegment" ("ID"),
    CONSTRAINT "FK_Contact_BusinessSize_BusinessSizeID" FOREIGN KEY ("BusinessSizeID") REFERENCES "BusinessSize" ("ID"),
    CONSTRAINT "FK_Contact_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID"),
    CONSTRAINT "FK_Contact_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Contact_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Contact_Contact_OwnerContactID" FOREIGN KEY ("OwnerContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Contact_Contact_ParentContactID" FOREIGN KEY ("ParentContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Contact_Contact_PrimaryContactID" FOREIGN KEY ("PrimaryContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Contact_ContactSource_ContactSourceID" FOREIGN KEY ("ContactSourceID") REFERENCES "ContactSource" ("ID"),
    CONSTRAINT "FK_Contact_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Contact_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1"),
    CONSTRAINT "FK_Contact_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Contact_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Contact_FinancialBook_FinancialBookID" FOREIGN KEY ("FinancialBookID") REFERENCES "FinancialBook" ("ID"),
    CONSTRAINT "FK_Contact_PaymentTerm_PaymentTermID" FOREIGN KEY ("PaymentTermID") REFERENCES "PaymentTerm" ("ID"),
    CONSTRAINT "FK_Contact_Policy_ItemShippingPolicyID" FOREIGN KEY ("ItemShippingPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_Contact_ShippingMethod_ShippingMethodID" FOREIGN KEY ("ShippingMethodID") REFERENCES "ShippingMethod" ("ID"),
    CONSTRAINT "FK_Contact_Territory_TerritoryID" FOREIGN KEY ("TerritoryID") REFERENCES "Territory" ("ID"),
    CONSTRAINT "FK_Contact_Timezone_TimezoneID" FOREIGN KEY ("TimezoneID") REFERENCES "Timezone" ("ID")
);

CREATE TABLE "ContactGroupRecord" (
    "ID" text NOT NULL,
    "ContactID" text NULL,
    "ContactsGroupID" text NULL,
    CONSTRAINT "PK_ContactGroupRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ContactGroupRecord_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_ContactGroupRecord_ContactsGroup_ContactsGroupID" FOREIGN KEY ("ContactsGroupID") REFERENCES "ContactsGroup" ("ID")
);

CREATE TABLE "ContactRelation" (
    "ID" text NOT NULL,
    "Date" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    "RelatedContactID" text NULL,
    "ContactRelationTypeID" text NULL,
    CONSTRAINT "PK_ContactRelation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ContactRelation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ContactRelation_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_ContactRelation_Contact_RelatedContactID" FOREIGN KEY ("RelatedContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_ContactRelation_ContactRelationType_ContactRelationTypeID" FOREIGN KEY ("ContactRelationTypeID") REFERENCES "ContactRelationType" ("ID")
);

CREATE TABLE "EmailGroupMembership" (
    "ID" text NOT NULL,
    "EmailGroupID" text NULL,
    "ContactID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_EmailGroupMembership" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmailGroupMembership_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmailGroupMembership_BusinessProfileRecord_BusinessProfileR~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_EmailGroupMembership_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_EmailGroupMembership_EmailGroup_EmailGroupID" FOREIGN KEY ("EmailGroupID") REFERENCES "EmailGroup" ("ID")
);

CREATE TABLE "FiscalYearRecord" (
    "ID" text NOT NULL,
    "Discriminator" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "FiscalPeriodID" text NULL,
    "FiscalYearID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_FiscalYearRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalYearRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalYearRecord_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalYearRecord_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_FiscalYearRecord_FiscalPeriod_FiscalPeriodID" FOREIGN KEY ("FiscalPeriodID") REFERENCES "FiscalPeriod" ("ID"),
    CONSTRAINT "FK_FiscalYearRecord_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID")
);

CREATE TABLE "GenericOption" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Name" text NULL,
    "Value" text NULL,
    "Frozen" boolean NOT NULL,
    "Autoload" boolean NOT NULL,
    "Transient" boolean NOT NULL,
    "Expiration" integer NOT NULL,
    "WebPortalID" text NULL,
    "Discriminator" text NOT NULL,
    "AccountHolderID" text NULL,
    "BusinessApplicationID" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_GenericOption" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_GenericOption_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_GenericOption_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_GenericOption_BusinessApplication_BusinessApplicationID" FOREIGN KEY ("BusinessApplicationID") REFERENCES "BusinessApplication" ("ID"),
    CONSTRAINT "FK_GenericOption_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_GenericOption_WebPortal_WebPortalID" FOREIGN KEY ("WebPortalID") REFERENCES "WebPortal" ("ID")
);

CREATE TABLE "MarketingCampaignResponse" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ContactID" text NULL,
    "MarketingCampaignID" text NULL,
    CONSTRAINT "PK_MarketingCampaignResponse" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MarketingCampaignResponse_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MarketingCampaignResponse_BusinessProfileRecord_BusinessPro~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_MarketingCampaignResponse_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_MarketingCampaignResponse_MarketingCampaign_MarketingCampai~" FOREIGN KEY ("MarketingCampaignID") REFERENCES "MarketingCampaign" ("ID")
);

CREATE TABLE "NewsletterSubscription" (
    "ID" text NOT NULL,
    "Email" text NOT NULL,
    "Verified" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ContactID" text NULL,
    "AccountHolderID" text NULL,
    "NewsletterID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_NewsletterSubscription" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_NewsletterSubscription_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_NewsletterSubscription_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_NewsletterSubscription_BusinessProfileRecord_BusinessProfil~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_NewsletterSubscription_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_NewsletterSubscription_Newsletter_NewsletterID" FOREIGN KEY ("NewsletterID") REFERENCES "Newsletter" ("ID")
);

CREATE TABLE "PaymentRequest" (
    "ID" text NOT NULL,
    "Message" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ContactID" text NULL,
    "BankAccountID" text NULL,
    "PaymentModeID" text NULL,
    "PaymentRequestType" integer NOT NULL,
    CONSTRAINT "PK_PaymentRequest" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentRequest_Account_BankAccountID" FOREIGN KEY ("BankAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_PaymentRequest_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PaymentRequest_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PaymentRequest_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_PaymentRequest_PaymentMode_PaymentModeID" FOREIGN KEY ("PaymentModeID") REFERENCES "PaymentMode" ("ID")
);

CREATE TABLE "QuoteRequest" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_QuoteRequest" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_QuoteRequest_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_QuoteRequest_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID")
);

CREATE TABLE "SocialProfile" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "FollowsCount" integer NOT NULL,
    "FollowersCount" integer NOT NULL,
    "UnreadedMessagesCount" integer NOT NULL,
    "UnreadedNotificationsCount" integer NOT NULL,
    "TwitterURL" text NULL,
    "FacebookURL" text NULL,
    "LinkedInURL" text NULL,
    "YoutubeURL" text NULL,
    "GithubURL" text NULL,
    "Domain" text NULL,
    "Notes" text NULL,
    "AccountHolderID" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_SocialProfile" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialProfile_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_SocialProfile_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SocialProfile_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID")
);

CREATE TABLE "WishList" (
    "ID" text NOT NULL,
    "Title" text NOT NULL,
    "Description" text NULL,
    "Public" boolean NOT NULL,
    "CartID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_WishList" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WishList_Cart_CartID" FOREIGN KEY ("CartID") REFERENCES "Cart" ("ID"),
    CONSTRAINT "FK_WishList_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID")
);

CREATE TABLE "FollowRecord" (
    "ID" text NOT NULL,
    "FollowRecordType" integer NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "EnableNotifications" boolean NOT NULL,
    "FollowerSocialProfileID" text NULL,
    "FollowedSocialProfileID" text NULL,
    CONSTRAINT "PK_FollowRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FollowRecord_SocialProfile_FollowedSocialProfileID" FOREIGN KEY ("FollowedSocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_FollowRecord_SocialProfile_FollowerSocialProfileID" FOREIGN KEY ("FollowerSocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "Notification" (
    "ID" text NOT NULL,
    "Readed" boolean NOT NULL,
    "Message" text NULL,
    "Icon" text NULL,
    "ImageUrl" text NULL,
    "RedirectUrl" text NULL,
    "Type" integer NOT NULL,
    "IssuedTimestamp" timestamp with time zone NOT NULL,
    "ReadedTimestamp" timestamp with time zone NOT NULL,
    "SocialProfileID" text NULL,
    CONSTRAINT "PK_Notification" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Notification_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "Project" (
    "ID" text NOT NULL,
    "IsTemplate" boolean NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ProjectStartDate" timestamp with time zone NOT NULL,
    "ProjectEndDate" timestamp with time zone NOT NULL,
    "ProjectBudgetInUSD" double precision NOT NULL,
    "ProjectOverallCompletionPercentage" integer NOT NULL,
    "BusinessTeamID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SocialProfileID" text NULL,
    CONSTRAINT "PK_Project" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Project_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Project_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Project_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID"),
    CONSTRAINT "FK_Project_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "SocialBadgeRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "SocialProfileID" text NULL,
    "SocialBadgeID" text NULL,
    CONSTRAINT "PK_SocialBadgeRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialBadgeRecord_SocialBadge_SocialBadgeID" FOREIGN KEY ("SocialBadgeID") REFERENCES "SocialBadge" ("ID"),
    CONSTRAINT "FK_SocialBadgeRecord_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "SocialFeed" (
    "ID" text NOT NULL,
    "SocialProfileID" text NULL,
    CONSTRAINT "PK_SocialFeed" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialFeed_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "KanbanBoard" (
    "ID" text NOT NULL,
    "ProjectID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_KanbanBoard" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_KanbanBoard_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_KanbanBoard_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_KanbanBoard_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID")
);

CREATE TABLE "ProjectBacklog" (
    "ID" text NOT NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_ProjectBacklog" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectBacklog_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID")
);

CREATE TABLE "TaskList" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Reminder" timestamp with time zone NOT NULL,
    "Reminded" boolean NOT NULL,
    "Template" boolean NOT NULL,
    "SocialProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_TaskList" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TaskList_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TaskList_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TaskList_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID"),
    CONSTRAINT "FK_TaskList_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "ProjectTaskBucket" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ProjectID" text NULL,
    "KanbanBoardID" text NULL,
    CONSTRAINT "PK_ProjectTaskBucket" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectTaskBucket_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ProjectTaskBucket_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ProjectTaskBucket_KanbanBoard_KanbanBoardID" FOREIGN KEY ("KanbanBoardID") REFERENCES "KanbanBoard" ("ID"),
    CONSTRAINT "FK_ProjectTaskBucket_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID")
);

CREATE TABLE "ContactProfile" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "About" text NULL,
    "Verified" boolean NOT NULL,
    "Submitted" boolean NOT NULL,
    "AvatarUrl" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "VerificationTimestamp" timestamp with time zone NOT NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BankID" text NULL,
    "TaxID" text NULL,
    "Phone" text NULL,
    "Email" text NULL,
    "Address" text NULL,
    "Address1" text NULL,
    "Address2" text NULL,
    "PostalCode" text NULL,
    "BusinessName" text NULL,
    "CommercialName" text NULL,
    "Ticker" text NULL,
    "DUNS" text NULL,
    "IsPublicCompany" boolean NULL,
    "IsFactaCustomer" boolean NULL,
    "TaxPayerType" integer NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "FiscalIdentificationTypeID" text NULL,
    "FiscalAuthorityID" text NULL,
    "FiscalRegimeID" text NULL,
    "GrossPay" double precision NULL,
    "NetSalary" double precision NULL,
    "PayrollCurrency" text NULL,
    "JobTitleID" text NULL,
    "EmployeeTypeID" text NULL,
    "Authorized" boolean NULL,
    "CareerLevel" integer NULL,
    "Hireable" boolean NULL,
    "ExperienceInYears" integer NULL,
    "CurrentSalary" numeric NULL,
    "MinSalaryExpectation" numeric NULL,
    "MaxSalaryExpectation" numeric NULL,
    "CurrencyID" text NULL,
    "MarketingCampaignID" text NULL,
    "LeadStatus" integer NULL,
    "LeadRating" integer NULL,
    "LeadContext" integer NULL,
    "PurchaseTimeframe" integer NULL,
    "PreferredContactMethod" integer NULL,
    "FiscalYearEnd" timestamp with time zone NULL,
    "FiscalYearStart" timestamp with time zone NULL,
    "EmployeeCount" integer NULL,
    "IsPublic" boolean NULL,
    "PartnerProfile_Authorized" boolean NULL,
    "PercentageOfBusinessForSales" integer NULL,
    "PercentageOfBusinessForServices" integer NULL,
    "ConsumerMarketBusinessFocusPercentage" integer NULL,
    "SMBsMarketBusinessFocusPercentage" integer NULL,
    "EnterpriseMarketBusinessFocusPercentage" integer NULL,
    "EducationMarketBusinessFocusPercentage" integer NULL,
    "OfficialInstitutionsMarketBusinessFocusPercentage" integer NULL,
    "HealthcareMarketBusinessFocusPercentage" integer NULL,
    "OnStoreDistributionChannel" integer NULL,
    "E_CommerceDistributionChannel" integer NULL,
    "TeleSalesDistributionChannel" integer NULL,
    "DirectSalesDistributionChannel" integer NULL,
    "OtherPartners" text NULL,
    "PartnerProgramEndDate" timestamp with time zone NULL,
    "PartnerProgramStartDate" timestamp with time zone NULL,
    "PartnerProfileStatus" integer NULL,
    "PartnerProgramTierID" text NULL,
    "WalletAccountID" text NULL,
    CONSTRAINT "PK_ContactProfile" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ContactProfile_Bank_BankID" FOREIGN KEY ("BankID") REFERENCES "Bank" ("ID"),
    CONSTRAINT "FK_ContactProfile_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ContactProfile_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ContactProfile_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_ContactProfile_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_ContactProfile_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_ContactProfile_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_ContactProfile_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_ContactProfile_EmployeeType_EmployeeTypeID" FOREIGN KEY ("EmployeeTypeID") REFERENCES "EmployeeType" ("ID"),
    CONSTRAINT "FK_ContactProfile_FiscalAuthority_FiscalAuthorityID" FOREIGN KEY ("FiscalAuthorityID") REFERENCES "FiscalAuthority" ("ID"),
    CONSTRAINT "FK_ContactProfile_FiscalIdentificationType_FiscalIdentificatio~" FOREIGN KEY ("FiscalIdentificationTypeID") REFERENCES "FiscalIdentificationType" ("ID"),
    CONSTRAINT "FK_ContactProfile_FiscalRegime_FiscalRegimeID" FOREIGN KEY ("FiscalRegimeID") REFERENCES "FiscalRegime" ("ID"),
    CONSTRAINT "FK_ContactProfile_JobTitle_JobTitleID" FOREIGN KEY ("JobTitleID") REFERENCES "JobTitle" ("ID"),
    CONSTRAINT "FK_ContactProfile_MarketingCampaign_MarketingCampaignID" FOREIGN KEY ("MarketingCampaignID") REFERENCES "MarketingCampaign" ("ID"),
    CONSTRAINT "FK_ContactProfile_PartnerProgramTier_PartnerProgramTierID" FOREIGN KEY ("PartnerProgramTierID") REFERENCES "PartnerProgramTier" ("ID")
);

CREATE TABLE "CreditLimit" (
    "ID" text NOT NULL,
    "Value" double precision NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CurrencyID" text NULL,
    "ContactID" text NULL,
    "ContactProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CreditLimit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CreditLimit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CreditLimit_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CreditLimit_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_CreditLimit_ContactProfile_ContactProfileID" FOREIGN KEY ("ContactProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CreditLimit_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "Curriculum" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "SocialProfileID" text NULL,
    "JobApplicantProfileID" text NULL,
    "Undergraduate" boolean NOT NULL,
    "CertifiedProfessional" boolean NOT NULL,
    "Sales" boolean NOT NULL,
    "Others" boolean NOT NULL,
    "Finance" boolean NOT NULL,
    "Research" boolean NOT NULL,
    "Advocate" boolean NOT NULL,
    "Marketing" boolean NOT NULL,
    "Education" boolean NOT NULL,
    "Executive" boolean NOT NULL,
    "Commercial" boolean NOT NULL,
    "GraphicDesign" boolean NOT NULL,
    "Sustainability" boolean NOT NULL,
    "Administrative" boolean NOT NULL,
    "HumanResources" boolean NOT NULL,
    "SoundEngineering" boolean NOT NULL,
    "CloudEngineering" boolean NOT NULL,
    "FirstLevelSupport" boolean NOT NULL,
    "SecondLevelSupport" boolean NOT NULL,
    "SoftwareEngineering" boolean NOT NULL,
    "PartnerAccountRepresentative" boolean NOT NULL,
    "StartupSuccessRepresentative" boolean NOT NULL,
    "CustomerSuccessRepresentative" boolean NOT NULL,
    CONSTRAINT "PK_Curriculum" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Curriculum_ContactProfile_JobApplicantProfileID" FOREIGN KEY ("JobApplicantProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Curriculum_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "DealUnit" (
    "ID" text NOT NULL,
    "Closed" boolean NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "PartnerCreated" boolean NOT NULL,
    "PartnerCollaboration" boolean NOT NULL,
    "ProposedSolution" text NULL,
    "CurrentSituation" text NULL,
    "CustomerNeed" text NULL,
    "WonDate" timestamp with time zone NOT NULL,
    "LostDate" timestamp with time zone NOT NULL,
    "ExpiryDate" timestamp with time zone NOT NULL,
    "DeliveredDate" timestamp with time zone NOT NULL,
    "ClosedTimestamp" timestamp with time zone NOT NULL,
    "ExpectedCloseDate" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "DealUnitStatus" integer NOT NULL,
    "DealUnitPurchaseProcess" integer NOT NULL,
    "DealUnitForecastCategory" integer NOT NULL,
    "DealUnitAmountsCalculation" integer NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "TotalBaseAmountInUSD" double precision NOT NULL,
    "TotalDetailAmountInUSD" double precision NOT NULL,
    "TotalDiscountsInUSD" double precision NOT NULL,
    "TotalProfitInUSD" double precision NOT NULL,
    "TotalTaxBaseInUSD" double precision NOT NULL,
    "TotalTaxesInUSD" double precision NOT NULL,
    "TotalWithholdingTaxesInUSD" double precision NOT NULL,
    "TotalShippingCostInUSD" double precision NOT NULL,
    "TotalShippingTaxesInUSD" double precision NOT NULL,
    "TotalWarrantyCostInUSD" double precision NOT NULL,
    "TotalReturnCostInUSD" double precision NOT NULL,
    "TotalRefundCostInUSD" double precision NOT NULL,
    "TotalSurchargesInUSD" double precision NOT NULL,
    "TotalAmountInUSD" double precision NOT NULL,
    "CustomBaseAmount" double precision NOT NULL,
    "CustomDetailAmount" double precision NOT NULL,
    "CustomDiscountsAmount" double precision NOT NULL,
    "CustomSurchargesAmount" double precision NOT NULL,
    "CustomProfitAmount" double precision NOT NULL,
    "CustomShippingCostAmount" double precision NOT NULL,
    "CustomShippingTaxAmount" double precision NOT NULL,
    "CustomTaxBase" double precision NOT NULL,
    "CustomTaxAmount" double precision NOT NULL,
    "CustomWithholdingTaxAmount" double precision NOT NULL,
    "CustomTotalAmount" double precision NOT NULL,
    "TotalGlobalDiscountsInUSD" double precision NOT NULL,
    "TotalGlobalSurchargesInUSD" double precision NOT NULL,
    "CustomGlobalSurchargesAmount" double precision NOT NULL,
    "CustomGlobalDiscountsAmount" double precision NOT NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "ReceptorBusinessID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "PriceListID" text NULL,
    "TerritoryID" text NULL,
    "BusinessTeamID" text NULL,
    "WorkOrderTypeID" text NULL,
    "MarketingCampaignID" text NULL,
    "CurrencyID" text NULL,
    "DealUnitFlowID" text NULL,
    "DealUnitFlowStageID" text NULL,
    "PartnerProfileID" text NULL,
    CONSTRAINT "PK_DealUnit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_DealUnit_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_DealUnit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_DealUnit_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_DealUnit_BusinessProcess_DealUnitFlowID" FOREIGN KEY ("DealUnitFlowID") REFERENCES "BusinessProcess" ("ID"),
    CONSTRAINT "FK_DealUnit_BusinessProcessStage_DealUnitFlowStageID" FOREIGN KEY ("DealUnitFlowStageID") REFERENCES "BusinessProcessStage" ("ID"),
    CONSTRAINT "FK_DealUnit_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_DealUnit_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID"),
    CONSTRAINT "FK_DealUnit_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_DealUnit_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_DealUnit_ContactProfile_PartnerProfileID" FOREIGN KEY ("PartnerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_DealUnit_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_DealUnit_MarketingCampaign_MarketingCampaignID" FOREIGN KEY ("MarketingCampaignID") REFERENCES "MarketingCampaign" ("ID"),
    CONSTRAINT "FK_DealUnit_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_DealUnit_Territory_TerritoryID" FOREIGN KEY ("TerritoryID") REFERENCES "Territory" ("ID"),
    CONSTRAINT "FK_DealUnit_WorkOrderType_WorkOrderTypeID" FOREIGN KEY ("WorkOrderTypeID") REFERENCES "WorkOrderType" ("ID")
);

CREATE TABLE "EmployeeDegree" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Institution" text NULL,
    "Description" text NULL,
    "AchievedDate" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "EmployeeProfileID" text NULL,
    CONSTRAINT "PK_EmployeeDegree" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmployeeDegree_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmployeeDegree_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_EmployeeDegree_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID")
);

CREATE TABLE "FiscalResponsibilityRecord" (
    "ID" text NOT NULL,
    "FiscalResponsibilityID" text NULL,
    "BillingProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_FiscalResponsibilityRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FiscalResponsibilityRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FiscalResponsibilityRecord_BusinessProfileRecord_BusinessPr~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FiscalResponsibilityRecord_ContactProfile_BillingProfileID" FOREIGN KEY ("BillingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_FiscalResponsibilityRecord_FiscalResponsibility_FiscalRespo~" FOREIGN KEY ("FiscalResponsibilityID") REFERENCES "FiscalResponsibility" ("ID")
);

CREATE TABLE "Gig" (
    "ID" text NOT NULL,
    "Remote" boolean NOT NULL,
    "Type" text NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ExpectedDeliveryDate" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "EmployerProfileID" text NULL,
    "MinBudget" numeric NOT NULL,
    "MaxBudget" numeric NOT NULL,
    "CurrencyID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "Location" text NULL,
    "ViewsCount" integer NOT NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "ExternalUrl" text NULL,
    CONSTRAINT "PK_Gig" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Gig_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Gig_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Gig_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Gig_ContactProfile_EmployerProfileID" FOREIGN KEY ("EmployerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Gig_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Gig_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Gig_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "Item" (
    "ID" text NOT NULL,
    "Discriminator" text NULL,
    "Type" text NOT NULL,
    "Permalink" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Barcode" text NULL,
    "SKU" text NULL,
    "SKUs" text NULL,
    "ISBN13" text NULL,
    "ISBN" text NULL,
    "ISBNs" text NULL,
    "UPC" text NULL,
    "UPCs" text NULL,
    "EAN" text NULL,
    "EANs" text NULL,
    "ASIN" text NULL,
    "ASINs" text NULL,
    "UNSPSC" text NULL,
    "UNSPSCs" text NULL,
    "GTIN" text NULL,
    "GTINs" text NULL,
    "MPN" text NULL,
    "MPNs" text NULL,
    "SupplierCode" text NULL,
    "Series" text NULL,
    "Part" text NULL,
    "Model" text NULL,
    "Auction" boolean NOT NULL,
    "AuctionEnd" timestamp with time zone NOT NULL,
    "AuctionStart" timestamp with time zone NOT NULL,
    "TariffHeading" text NULL,
    "SystemRequirements" text NULL,
    "OperatingSystemSupported" text NULL,
    "Title" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "ShortDescription" text NULL,
    "PublishedDate" timestamp with time zone NOT NULL,
    "OfficialDescriptionURL" text NULL,
    "PrimaryImageURL" text NULL,
    "ValidPrimaryImage" boolean NOT NULL,
    "PurchaseNote" text NULL,
    "Features" text NULL,
    "Ingredients" text NULL,
    "ReleaseDate" text NULL,
    "Pattern" text NULL,
    "Material" text NULL,
    "Color" text NULL,
    "NutritionFacts" text NULL,
    "EnergyEfficiencyRating" text NULL,
    "Published" boolean NOT NULL,
    "Deleted" boolean NOT NULL,
    "Digital" boolean NOT NULL,
    "PreSale" boolean NOT NULL,
    "ByRequest" boolean NOT NULL,
    "Taxable" boolean NOT NULL,
    "IsMonthlyDeal" boolean NOT NULL,
    "Featured" boolean NOT NULL,
    "Hot" boolean NOT NULL,
    "DisplayOnGlobalMozaic" boolean NOT NULL,
    "DisplayOnCategoryMozaic" boolean NOT NULL,
    "DisplayOnBannerMarketingRotation" boolean NOT NULL,
    "DisplayOnBrandsMozaic" boolean NOT NULL,
    "MozaicCoverURL" text NULL,
    "YoutubeVideoID" text NULL,
    "PageCoverBackgroundURL" text NULL,
    "Recurrency" numeric NOT NULL,
    "PackageContent" text NULL,
    "PackagedQuantity" integer NOT NULL,
    "Variations" text NULL,
    "ShipsToRules" text NULL,
    "Categories" text NULL,
    "GoogleCategories" text NULL,
    "Brands" text NULL,
    "OnDiscount" boolean NOT NULL,
    "IsFixedDiscount" boolean NOT NULL,
    "IsDeadlineDiscount" boolean NOT NULL,
    "DiscountPercentage" double precision NOT NULL,
    "DiscountPrice" double precision NOT NULL,
    "DiscountAmount" double precision NOT NULL,
    "DeadlineDiscountFromDate" timestamp with time zone NOT NULL,
    "DeadlineDiscountDueDate" timestamp with time zone NOT NULL,
    "InStock" boolean NOT NULL,
    "LowStock" boolean NOT NULL,
    "CurrentStock" numeric NOT NULL,
    "ManageInventory" boolean NOT NULL,
    "TaxIncludedInPrice" boolean NOT NULL,
    "LastFixedPricesUpdateDateTime" timestamp with time zone NOT NULL,
    "DisableDefaultPolicies" boolean NOT NULL,
    "RegularPrice" double precision NOT NULL,
    "EstimatedRegularPriceInUSD" double precision NOT NULL,
    "EstimatedBasePriceInUSD" double precision NOT NULL,
    "EstimatedTaxBasePriceInUSD" double precision NOT NULL,
    "EstimatedProfitInUSD" double precision NOT NULL,
    "EstimatedSurchargesInUSD" double precision NOT NULL,
    "EstimatedDiscountsInUSD" double precision NOT NULL,
    "EstimatedTaxesInUSD" double precision NOT NULL,
    "EstimatedWitholdingTaxesInUSD" double precision NOT NULL,
    "EstimatedPaymentCostInUSD" double precision NOT NULL,
    "EstimatedPaymentTaxInUSD" double precision NOT NULL,
    "EstimatedDefaultShippingCostInUSD" double precision NOT NULL,
    "EstimatedDefaultShippingTaxInUSD" double precision NOT NULL,
    "EstimatedTotalPriceInUSD" double precision NOT NULL,
    "EstimatedRevenueInUSD" double precision NOT NULL,
    "EstimatedDealSavingsInUSD" double precision NOT NULL,
    "ParentItemID" text NULL,
    "Weight" text NULL,
    "Height" double precision NOT NULL,
    "Width" double precision NOT NULL,
    "Length" double precision NOT NULL,
    "CountryLanguageID" text NULL,
    "ItemTypeID" text NULL,
    "UnitGroupID" text NULL,
    "UnitID" text NULL,
    "CurrencyID" text NULL,
    "ItemGoogleCategoryID" text NULL,
    "CountryID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "BrandID" text NULL,
    "ShippingClassID" text NULL,
    "ItemClassID" text NULL,
    "ItemClass" integer NOT NULL,
    "ItemCategoryID" text NULL,
    "SupplierProfileID" text NULL,
    "BateryType" text NOT NULL,
    "RecurrencyPeriod" integer NOT NULL,
    "MeasurementUnits" text NOT NULL,
    "ContainsOrIsBattery" boolean NOT NULL,
    "IsStandaloneBatery" boolean NOT NULL,
    "BateryWeight" double precision NOT NULL,
    "NumberOfBatteries" integer NOT NULL,
    "WattHours" integer NOT NULL,
    "CellsInBattery" integer NOT NULL,
    "IsNewArrival" boolean NOT NULL,
    "IsBestSeller" boolean NOT NULL,
    "IsProductOfTheMonth" boolean NOT NULL,
    "IsProductOfTheWeek" boolean NOT NULL,
    "IsDailyDeal" boolean NOT NULL,
    "IsWeeklyDeal" boolean NOT NULL,
    "IsMontlyDeal" boolean NOT NULL,
    "IsDealersChoice" boolean NOT NULL,
    "TryWebScraping" boolean NOT NULL,
    "IsOfficialChoice" boolean NOT NULL,
    "DisplayShowcaseTab" boolean NOT NULL,
    "DisplayDescriptionEditor" boolean NOT NULL,
    "DisplayShortDescriptionEditor" boolean NOT NULL,
    "RatingAverage" double precision NOT NULL,
    "MinRating" double precision NOT NULL,
    "MaxRating" double precision NOT NULL,
    "ViewsCount" bigint NOT NULL,
    "ReviewsCount" bigint NOT NULL,
    "SalesCount" bigint NOT NULL,
    "CustomAddedPercentage" double precision NOT NULL,
    "CustomAddedValue" double precision NOT NULL,
    "CustomTaxPercentage" double precision NOT NULL,
    "CustomTaxValue" double precision NOT NULL,
    "CustomTaxDescription" text NULL,
    "Minted" boolean NULL,
    "BlockchainID" text NULL,
    "MintedTimestamp" timestamp with time zone NULL,
    "MintTransactionHash" text NULL,
    "BlockchainBlockID" text NULL,
    "Code" text NULL,
    "Version" text NULL,
    "Summary" text NULL,
    "SubmitTolerance" text NULL,
    "MaxCourseEnrollments" integer NULL,
    "TotalEffortInWeeks" integer NULL,
    "TotalHoursPerWeek" integer NULL,
    "TotalEffortInHours" integer NULL,
    "CalificationRanges" text NULL,
    "Prerequisites" text NULL,
    "MatlabAPI" text NULL,
    "StartDateTime" timestamp with time zone NULL,
    "EndDateTime" timestamp with time zone NULL,
    "InscriptionsStartDateTime" timestamp with time zone NULL,
    "InscriptionsEndDateTime" timestamp with time zone NULL,
    "CourseCategoryID" text NULL,
    "InstructorProfileID" text NULL,
    "AllowTrials" boolean NULL,
    "IsPerpetualLicense" boolean NULL,
    "MaxLicenseUtilizations" integer NULL,
    "TrialLicenseRelativeExpirationInDays" integer NULL,
    "StandardLicenseRelativeExpirationInDays" integer NULL,
    "ServiceID" text NULL,
    CONSTRAINT "PK_Item" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Item_Blockchain_BlockchainID" FOREIGN KEY ("BlockchainID") REFERENCES "Blockchain" ("ID"),
    CONSTRAINT "FK_Item_BlockchainBlock_BlockchainBlockID" FOREIGN KEY ("BlockchainBlockID") REFERENCES "BlockchainBlock" ("ID"),
    CONSTRAINT "FK_Item_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Item_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Item_ContactProfile_InstructorProfileID" FOREIGN KEY ("InstructorProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Item_ContactProfile_SupplierProfileID" FOREIGN KEY ("SupplierProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Item_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Item_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1"),
    CONSTRAINT "FK_Item_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Item_Item_ParentItemID" FOREIGN KEY ("ParentItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Item_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Item_ItemBrand_BrandID" FOREIGN KEY ("BrandID") REFERENCES "ItemBrand" ("ID"),
    CONSTRAINT "FK_Item_ItemCategory_CourseCategoryID" FOREIGN KEY ("CourseCategoryID") REFERENCES "ItemCategory" ("ID"),
    CONSTRAINT "FK_Item_ItemCategory_ItemCategoryID" FOREIGN KEY ("ItemCategoryID") REFERENCES "ItemCategory" ("ID"),
    CONSTRAINT "FK_Item_ItemGoogleCategory_ItemGoogleCategoryID" FOREIGN KEY ("ItemGoogleCategoryID") REFERENCES "ItemGoogleCategory" ("ID"),
    CONSTRAINT "FK_Item_ItemType_ItemTypeID" FOREIGN KEY ("ItemTypeID") REFERENCES "ItemType" ("ID"),
    CONSTRAINT "FK_Item_ShippingClass_ShippingClassID" FOREIGN KEY ("ShippingClassID") REFERENCES "ShippingClass" ("ID"),
    CONSTRAINT "FK_Item_Unit_UnitID" FOREIGN KEY ("UnitID") REFERENCES "Unit" ("ID"),
    CONSTRAINT "FK_Item_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID")
);

CREATE TABLE "JobOffer" (
    "ID" text NOT NULL,
    "Remote" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ExpectedHireDate" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Title" text NULL,
    "Description" text NULL,
    "TechnicalSkills" text NULL,
    "NonTechnicalSkills" text NULL,
    "Certifications" text NULL,
    "ProjectExperience" text NULL,
    "Technologies" text NULL,
    "Benefits" text NULL,
    "IsOfficialJobOffer" boolean NOT NULL,
    "IsRemoteJobOffer" boolean NOT NULL,
    "IsMidTimeJobOffer" boolean NOT NULL,
    "IsUndergraduateOption" boolean NOT NULL,
    "MinOverallExperienceYears" integer NOT NULL,
    "AvailiablePositionsCount" integer NOT NULL,
    "ViewsCount" integer NOT NULL,
    "MinSalaryAmount" numeric NOT NULL,
    "MaxSalaryAmount" numeric NOT NULL,
    "CurrencyID" text NULL,
    "JobFieldID" text NULL,
    "EmployerProfileID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "ImageUrl" text NULL,
    "Location" text NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "ExternalUrl" text NULL,
    "JobTitleID" text NULL,
    CONSTRAINT "PK_JobOffer" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_JobOffer_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_JobOffer_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_JobOffer_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_JobOffer_ContactProfile_EmployerProfileID" FOREIGN KEY ("EmployerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_JobOffer_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_JobOffer_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_JobOffer_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_JobOffer_JobField_JobFieldID" FOREIGN KEY ("JobFieldID") REFERENCES "JobField" ("ID"),
    CONSTRAINT "FK_JobOffer_JobTitle_JobTitleID" FOREIGN KEY ("JobTitleID") REFERENCES "JobTitle" ("ID")
);

CREATE TABLE "LeaveApplication" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Justification" text NULL,
    "Approved" boolean NOT NULL,
    "OnReview" boolean NOT NULL,
    "LeaveTypeID" text NULL,
    "EmployeeProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_LeaveApplication" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LeaveApplication_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LeaveApplication_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_LeaveApplication_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_LeaveApplication_LeaveType_LeaveTypeID" FOREIGN KEY ("LeaveTypeID") REFERENCES "LeaveType" ("ID")
);

CREATE TABLE "Location" (
    "ID" text NOT NULL,
    "Verified" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "VerificationTimestamp" timestamp with time zone NOT NULL,
    "Title" text NOT NULL,
    "Company" text NULL,
    "Email" text NULL,
    "Address1" text NOT NULL,
    "Address2" text NULL,
    "Address3" text NULL,
    "Unit" text NULL,
    "CustomCity" text NULL,
    "CustomState" text NULL,
    "PostalCode" text NULL,
    "Phone" text NULL,
    "Fax" text NULL,
    "Longitud" double precision NOT NULL,
    "Latitud" double precision NOT NULL,
    "IsRoutable" boolean NOT NULL,
    "IsGlobalPrimary" boolean NOT NULL,
    "IsCountryPrimary" boolean NOT NULL,
    "CanGenerateLabels" boolean NOT NULL,
    "IsDefaultSenderAddress" boolean NOT NULL,
    "IsDefaultReturnAddress" boolean NOT NULL,
    "IsDefaultShippingLocation" boolean NOT NULL,
    "IsDefaultBillingLocation" boolean NOT NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "SocialProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "ContactID" text NULL,
    "AccountHolderID" text NULL,
    "IsGroup" boolean NULL,
    "ShipwireWarehouseID" text NULL,
    "ParentWarehouseID" text NULL,
    "SupplierProfileID" text NULL,
    CONSTRAINT "PK_Location" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Location_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Location_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Location_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Location_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Location_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Location_ContactProfile_SupplierProfileID" FOREIGN KEY ("SupplierProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Location_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Location_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Location_Location_ParentWarehouseID" FOREIGN KEY ("ParentWarehouseID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Location_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "MarketingAreaSubscription" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "PartnerProfileID" text NULL,
    "MarketingAreaID" text NULL,
    CONSTRAINT "PK_MarketingAreaSubscription" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MarketingAreaSubscription_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MarketingAreaSubscription_ContactProfile_PartnerProfileID" FOREIGN KEY ("PartnerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_MarketingAreaSubscription_MarketingArea_MarketingAreaID" FOREIGN KEY ("MarketingAreaID") REFERENCES "MarketingArea" ("ID")
);

CREATE TABLE "MarketingListMembership" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "LeadProfileID" text NULL,
    "MarketingListID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_MarketingListMembership" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_MarketingListMembership_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_MarketingListMembership_BusinessProfileRecord_BusinessProfi~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_MarketingListMembership_ContactProfile_LeadProfileID" FOREIGN KEY ("LeadProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_MarketingListMembership_MarketingList_MarketingListID" FOREIGN KEY ("MarketingListID") REFERENCES "MarketingList" ("ID")
);

CREATE TABLE "PartnerProgramRegistration" (
    "ID" text NOT NULL,
    "FormData" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "RegistrationStatus" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "PartnerProgramTierID" text NULL,
    "PartnerProfileID" text NULL,
    "PartnerProgramID" text NULL,
    CONSTRAINT "PK_PartnerProgramRegistration" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PartnerProgramRegistration_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PartnerProgramRegistration_BusinessProfileRecord_BusinessPr~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PartnerProgramRegistration_ContactProfile_PartnerProfileID" FOREIGN KEY ("PartnerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_PartnerProgramRegistration_PartnerProgram_PartnerProgramID" FOREIGN KEY ("PartnerProgramID") REFERENCES "PartnerProgram" ("ID"),
    CONSTRAINT "FK_PartnerProgramRegistration_PartnerProgramTier_PartnerProgra~" FOREIGN KEY ("PartnerProgramTierID") REFERENCES "PartnerProgramTier" ("ID")
);

CREATE TABLE "PurchaseRequest" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SupplierProfileID" text NULL,
    CONSTRAINT "PK_PurchaseRequest" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PurchaseRequest_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PurchaseRequest_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PurchaseRequest_ContactProfile_SupplierProfileID" FOREIGN KEY ("SupplierProfileID") REFERENCES "ContactProfile" ("ID")
);

CREATE TABLE "Salary" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Amount" double precision NOT NULL,
    "CurrencyID" text NULL,
    "EmployeeProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Salary" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Salary_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Salary_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Salary_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Salary_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID")
);

CREATE TABLE "ShareTransfer" (
    "ID" text NOT NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Value" double precision NOT NULL,
    "NewShareHolderID" text NULL,
    "FormerShareHolderID" text NULL,
    "ShareTransferReasonID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ShareTransfer" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShareTransfer_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShareTransfer_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ShareTransfer_ContactProfile_FormerShareHolderID" FOREIGN KEY ("FormerShareHolderID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_ShareTransfer_ContactProfile_NewShareHolderID" FOREIGN KEY ("NewShareHolderID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_ShareTransfer_ShareTransferReason_ShareTransferReasonID" FOREIGN KEY ("ShareTransferReasonID") REFERENCES "ShareTransferReason" ("ID")
);

CREATE TABLE "SigningCertificate" (
    "ID" text NOT NULL,
    "URL" text NULL,
    "CSR" text NULL,
    "Type" text NULL,
    "Title" text NULL,
    "PublicKey" text NULL,
    "PrivateKey" text NULL,
    "Signature" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "FileLengthInBits" bigint NOT NULL,
    "CertificateType" integer NOT NULL,
    "ContactID" text NULL,
    "BusinessID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SigningProfileID" text NULL,
    CONSTRAINT "PK_SigningCertificate" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SigningCertificate_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_SigningCertificate_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SigningCertificate_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SigningCertificate_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_SigningCertificate_ContactProfile_SigningProfileID" FOREIGN KEY ("SigningProfileID") REFERENCES "ContactProfile" ("ID")
);

CREATE TABLE "SupplierGroupRecord" (
    "ID" text NOT NULL,
    "SupplierProfileID" text NULL,
    "SupplierGroupID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_SupplierGroupRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SupplierGroupRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SupplierGroupRecord_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SupplierGroupRecord_ContactProfile_SupplierProfileID" FOREIGN KEY ("SupplierProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_SupplierGroupRecord_SupplierGroup_SupplierGroupID" FOREIGN KEY ("SupplierGroupID") REFERENCES "SupplierGroup" ("ID")
);

CREATE TABLE "TrainingProgramApplication" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "TrainingProgramID" text NULL,
    "EmployeeProfileID" text NULL,
    CONSTRAINT "PK_TrainingProgramApplication" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TrainingProgramApplication_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TrainingProgramApplication_BusinessProfileRecord_BusinessPr~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TrainingProgramApplication_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_TrainingProgramApplication_TrainingProgram_TrainingProgramID" FOREIGN KEY ("TrainingProgramID") REFERENCES "TrainingProgram" ("ID")
);

CREATE TABLE "CustomPropertyRecord" (
    "ID" text NOT NULL,
    "Value" text NULL,
    "CustomPropertyID" text NULL,
    "Discriminator" text NOT NULL,
    "ContactID" text NULL,
    "DealUnitID" text NULL,
    CONSTRAINT "PK_CustomPropertyRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CustomPropertyRecord_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_CustomPropertyRecord_CustomProperty_CustomPropertyID" FOREIGN KEY ("CustomPropertyID") REFERENCES "CustomProperty" ("ID"),
    CONSTRAINT "FK_CustomPropertyRecord_DealUnit_DealUnitID" FOREIGN KEY ("DealUnitID") REFERENCES "DealUnit" ("ID")
);

CREATE TABLE "CourseAssignmentType" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Abbreviation" text NULL,
    "Weight" double precision NOT NULL,
    "Quantity" integer NOT NULL,
    "Excluded" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseID" text NULL,
    CONSTRAINT "PK_CourseAssignmentType" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseAssignmentType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseAssignmentType_BusinessProfileRecord_BusinessProfileR~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseAssignmentType_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseCollectionRecord" (
    "ID" text NOT NULL,
    "CourseCollectionID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CourseID" text NULL,
    CONSTRAINT "PK_CourseCollectionRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseCollectionRecord_Item_CourseCollectionID" FOREIGN KEY ("CourseCollectionID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_CourseCollectionRecord_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseContentGroup" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CourseID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CourseContentGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseContentGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseContentGroup_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseContentGroup_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseGradingRubric" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "EnablePoints" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CourseID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CourseGradingRubric" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseGradingRubric_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseGradingRubric_BusinessProfileRecord_BusinessProfileRe~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseGradingRubric_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseSection" (
    "ID" text NOT NULL,
    "Icon" text NULL,
    "Name" text NULL,
    "Description" text NULL,
    "CourseID" text NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "HideFromStudents" boolean NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CourseSection" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseSection_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseSection_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseSection_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseTeamMembership" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CourseID" text NULL,
    "InstructorProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseTeamMembershipType" integer NOT NULL,
    CONSTRAINT "PK_CourseTeamMembership" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseTeamMembership_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseTeamMembership_BusinessProfileRecord_BusinessProfileR~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseTeamMembership_ContactProfile_InstructorProfileID" FOREIGN KEY ("InstructorProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CourseTeamMembership_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "ItemAttributeOptionRecord" (
    "ID" text NOT NULL,
    "ItemID" text NULL,
    "AttributeOptionID" text NULL,
    CONSTRAINT "PK_ItemAttributeOptionRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemAttributeOptionRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemAttributeOptionRecord_ItemAttributeOption_AttributeOpti~" FOREIGN KEY ("AttributeOptionID") REFERENCES "ItemAttributeOption" ("ID")
);

CREATE TABLE "ItemBundleRecord" (
    "ProductBundleRecordID" text NOT NULL,
    "ParentItemID" text NULL,
    "ItemBundleID" text NULL,
    "ChildItemID" text NULL,
    CONSTRAINT "PK_ItemBundleRecord" PRIMARY KEY ("ProductBundleRecordID"),
    CONSTRAINT "FK_ItemBundleRecord_Item_ChildItemID" FOREIGN KEY ("ChildItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemBundleRecord_Item_ParentItemID" FOREIGN KEY ("ParentItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemBundleRecord_ItemBundle_ItemBundleID" FOREIGN KEY ("ItemBundleID") REFERENCES "ItemBundle" ("ID")
);

CREATE TABLE "ItemCategoryRecord" (
    "ID" text NOT NULL,
    "ItemCategoryID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemCategoryRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemCategoryRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemCategoryRecord_ItemCategory_ItemCategoryID" FOREIGN KEY ("ItemCategoryID") REFERENCES "ItemCategory" ("ID")
);

CREATE TABLE "ItemFamilyRecord" (
    "ID" text NOT NULL,
    "ItemFamilyID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemFamilyRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemFamilyRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemFamilyRecord_ItemFamily_ItemFamilyID" FOREIGN KEY ("ItemFamilyID") REFERENCES "ItemFamily" ("ID")
);

CREATE TABLE "ItemGoogleCategoryRecord" (
    "ID" text NOT NULL,
    "ItemID" text NULL,
    "ItemGoogleCategoryID" text NULL,
    CONSTRAINT "PK_ItemGoogleCategoryRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemGoogleCategoryRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemGoogleCategoryRecord_ItemGoogleCategory_ItemGoogleCateg~" FOREIGN KEY ("ItemGoogleCategoryID") REFERENCES "ItemGoogleCategory" ("ID")
);

CREATE TABLE "ItemGroupRecord" (
    "ID" text NOT NULL,
    "ItemGroupID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemGroupRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemGroupRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemGroupRecord_ItemGroup_ItemGroupID" FOREIGN KEY ("ItemGroupID") REFERENCES "ItemGroup" ("ID")
);

CREATE TABLE "ItemQuestion" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "NeedsRevision" boolean NOT NULL,
    "Question" text NOT NULL,
    "SocialProfileID" text NULL,
    "BusinessID" text NULL,
    "ItemID" text NULL,
    "Type" text NOT NULL,
    CONSTRAINT "PK_ItemQuestion" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemQuestion_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemQuestion_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemQuestion_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "ItemShippingPolicyRecord" (
    "ID" text NOT NULL,
    "ItemID" text NULL,
    "ItemShippingPolicyID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemShippingPolicyRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemShippingPolicyRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemShippingPolicyRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemShippingPolicyRecord_Policy_ItemShippingPolicyID" FOREIGN KEY ("ItemShippingPolicyID") REFERENCES "Policy" ("ID")
);

CREATE TABLE "ItemTagRecord" (
    "ID" text NOT NULL,
    "ItemTagID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemTagRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemTagRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemTagRecord_ItemTag_ItemTagID" FOREIGN KEY ("ItemTagID") REFERENCES "ItemTag" ("ID")
);

CREATE TABLE "ItemTypeRecord" (
    "ID" text NOT NULL,
    "ItemTypeID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemTypeRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemTypeRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemTypeRecord_ItemType_ItemTypeID" FOREIGN KEY ("ItemTypeID") REFERENCES "ItemType" ("ID")
);

CREATE TABLE "LicenseAttribute" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "LicenseTypeID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_LicenseAttribute" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LicenseAttribute_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LicenseAttribute_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_LicenseAttribute_Item_LicenseTypeID" FOREIGN KEY ("LicenseTypeID") REFERENCES "Item" ("ID")
);

CREATE TABLE "LicenseFeature" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AccessKeyPairID" text NULL,
    "LicenseTypeID" text NULL,
    CONSTRAINT "PK_LicenseFeature" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LicenseFeature_AccessKeyPair_AccessKeyPairID" FOREIGN KEY ("AccessKeyPairID") REFERENCES "AccessKeyPair" ("IP"),
    CONSTRAINT "FK_LicenseFeature_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LicenseFeature_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_LicenseFeature_Item_LicenseTypeID" FOREIGN KEY ("LicenseTypeID") REFERENCES "Item" ("ID")
);

CREATE TABLE "PriceListItem" (
    "ID" text NOT NULL,
    "Price" double precision NOT NULL,
    "Percent" double precision NOT NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "UnitID" text NULL,
    "UnitGroupID" text NULL,
    "CurrencyID" text NULL,
    "PriceListID" text NULL,
    "DiscountListID" text NULL,
    "RoundingPolicyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "TransactionCategoryID" text NULL,
    "ItemID" text NULL,
    "ItemPriceListID" text NULL,
    CONSTRAINT "PK_PriceListItem" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PriceListItem_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PriceListItem_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PriceListItem_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_PriceListItem_DiscountList_DiscountListID" FOREIGN KEY ("DiscountListID") REFERENCES "DiscountList" ("ID"),
    CONSTRAINT "FK_PriceListItem_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_PriceListItem_Policy_RoundingPolicyID" FOREIGN KEY ("RoundingPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_PriceListItem_PriceList_ItemPriceListID" FOREIGN KEY ("ItemPriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_PriceListItem_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_PriceListItem_TransactionCategory_TransactionCategoryID" FOREIGN KEY ("TransactionCategoryID") REFERENCES "TransactionCategory" ("ID"),
    CONSTRAINT "FK_PriceListItem_Unit_UnitID" FOREIGN KEY ("UnitID") REFERENCES "Unit" ("ID"),
    CONSTRAINT "FK_PriceListItem_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID")
);

CREATE TABLE "SalesLiteratureRecord" (
    "ID" text NOT NULL,
    "SalesLiteratureID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_SalesLiteratureRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SalesLiteratureRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SalesLiteratureRecord_BusinessProfileRecord_BusinessProfile~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SalesLiteratureRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_SalesLiteratureRecord_SalesLiterature_SalesLiteratureID" FOREIGN KEY ("SalesLiteratureID") REFERENCES "SalesLiterature" ("ID")
);

CREATE TABLE "Schedule" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Disabled" boolean NOT NULL,
    "BusinessID" text NULL,
    "FiscalYearID" text NULL,
    "HolidayScheduleID" text NULL,
    "Sunday" boolean NOT NULL,
    "Monday" boolean NOT NULL,
    "Tuesday" boolean NOT NULL,
    "Wednesday" boolean NOT NULL,
    "Thursday" boolean NOT NULL,
    "Friday" boolean NOT NULL,
    "Saturday" boolean NOT NULL,
    "UniqueInterval" boolean NOT NULL,
    "_24x7Interval" boolean NOT NULL,
    "Start" timestamp with time zone NOT NULL,
    "End" timestamp with time zone NOT NULL,
    "TimezoneID" text NULL,
    "Discriminator" text NOT NULL,
    "AssetID" text NULL,
    "ServiceID" text NULL,
    "ContactID" text NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_Schedule" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Schedule_Asset_AssetID" FOREIGN KEY ("AssetID") REFERENCES "Asset" ("ID"),
    CONSTRAINT "FK_Schedule_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Schedule_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Schedule_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID"),
    CONSTRAINT "FK_Schedule_HolidaySchedule_HolidayScheduleID" FOREIGN KEY ("HolidayScheduleID") REFERENCES "HolidaySchedule" ("ID"),
    CONSTRAINT "FK_Schedule_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Schedule_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID"),
    CONSTRAINT "FK_Schedule_Timezone_TimezoneID" FOREIGN KEY ("TimezoneID") REFERENCES "Timezone" ("ID")
);

CREATE TABLE "ServiceQueueRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Order" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ServiceQueueID" text NULL,
    "ServiceID" text NULL,
    CONSTRAINT "PK_ServiceQueueRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServiceQueueRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceQueueRecord_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ServiceQueueRecord_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ServiceQueueRecord_ServiceQueue_ServiceQueueID" FOREIGN KEY ("ServiceQueueID") REFERENCES "ServiceQueue" ("ID")
);

CREATE TABLE "SocialGroup" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Name" text NULL,
    "Title" text NULL,
    "AvatarURL" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SocialProfileID" text NULL,
    "Discriminator" text NOT NULL,
    "CourseID" text NULL,
    CONSTRAINT "PK_SocialGroup" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SocialGroup_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SocialGroup_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_SocialGroup_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "TrainingProgramCourse" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "TrainingProgramID" text NULL,
    "CourseID" text NULL,
    CONSTRAINT "PK_TrainingProgramCourse" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TrainingProgramCourse_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TrainingProgramCourse_BusinessProfileRecord_BusinessProfile~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TrainingProgramCourse_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_TrainingProgramCourse_TrainingProgram_TrainingProgramID" FOREIGN KEY ("TrainingProgramID") REFERENCES "TrainingProgram" ("ID")
);

CREATE TABLE "WishListRecord" (
    "ID" text NOT NULL,
    "Type" text NULL,
    "WishListID" text NULL,
    "Discriminator" text NOT NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_WishListRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WishListRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WishListRecord_WishList_WishListID" FOREIGN KEY ("WishListID") REFERENCES "WishList" ("ID")
);

CREATE TABLE "CurriculumRecord" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Priority" numeric NOT NULL,
    "Organization" text NULL,
    "Featured" boolean NOT NULL,
    "Current" boolean NOT NULL,
    "Validated" boolean NOT NULL,
    "ImageUrl" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "DateFrom" timestamp with time zone NOT NULL,
    "DateTo" timestamp with time zone NOT NULL,
    "Date" timestamp with time zone NOT NULL,
    "CurriculumID" text NULL,
    "CountryLanguageID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ProficiencyRatingValueID" text NULL,
    "ProficiencyRatingModelID" text NULL,
    "GigID" text NULL,
    "Remarks" text NULL,
    "KnowledgeField" text NULL,
    "AcademicInstitutionProfileID" text NULL,
    "CoverLetter" text NULL,
    "InstitutionName" text NULL,
    "CurriculumDegree_KnowledgeField" text NULL,
    "CurriculumDegree_AcademicInstitutionProfileID" text NULL,
    "CurriculumDiploma_AcademicInstitutionProfileID" text NULL,
    "CurriculumEducation_KnowledgeField" text NULL,
    "CurriculumEducation_AcademicInstitutionProfileID" text NULL,
    "Achievements" text NULL,
    "Responsibilities" text NULL,
    "EmployerProfileID" text NULL,
    "CurriculumLanguageProficiency" integer NULL,
    "ProjectGoals" text NULL,
    "ProjectAccomplishments" text NULL,
    "ProjectResponsibilities" text NULL,
    "Recommendation" text NULL,
    "SocialProfileID" text NULL,
    "CurriculumExperienceID" text NULL,
    "RelationshipType" integer NULL,
    "ExperienceInYears" integer NULL,
    "ProficiencyPercentage" double precision NULL,
    "SkillID" text NULL,
    "IndividualSkillProficiency" integer NULL,
    "JobOfferID" text NULL,
    CONSTRAINT "PK_CurriculumRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CurriculumRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ContactProfile_AcademicInstitutionProfileID" FOREIGN KEY ("AcademicInstitutionProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ContactProfile_CurriculumDegree_AcademicIn~" FOREIGN KEY ("CurriculumDegree_AcademicInstitutionProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ContactProfile_CurriculumDiploma_AcademicI~" FOREIGN KEY ("CurriculumDiploma_AcademicInstitutionProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ContactProfile_CurriculumEducation_Academi~" FOREIGN KEY ("CurriculumEducation_AcademicInstitutionProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ContactProfile_EmployerProfileID" FOREIGN KEY ("EmployerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_CountryLanguage_CountryLanguageID" FOREIGN KEY ("CountryLanguageID") REFERENCES "CountryLanguage" ("Iso639_1"),
    CONSTRAINT "FK_CurriculumRecord_Curriculum_CurriculumID" FOREIGN KEY ("CurriculumID") REFERENCES "Curriculum" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_CurriculumRecord_CurriculumExperienceID" FOREIGN KEY ("CurriculumExperienceID") REFERENCES "CurriculumRecord" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_Gig_GigID" FOREIGN KEY ("GigID") REFERENCES "Gig" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_JobOffer_JobOfferID" FOREIGN KEY ("JobOfferID") REFERENCES "JobOffer" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ProficiencyRatingModel_ProficiencyRatingMo~" FOREIGN KEY ("ProficiencyRatingModelID") REFERENCES "ProficiencyRatingModel" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_ProficiencyRatingValue_ProficiencyRatingVa~" FOREIGN KEY ("ProficiencyRatingValueID") REFERENCES "ProficiencyRatingValue" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_Skill_SkillID" FOREIGN KEY ("SkillID") REFERENCES "Skill" ("ID"),
    CONSTRAINT "FK_CurriculumRecord_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "RequiredSkillRecord" (
    "ID" text NOT NULL,
    "ExperienceInYears" integer NOT NULL,
    "Priority" numeric NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "RequiredSkillRecordType" integer NOT NULL,
    "BusinessID" text NULL,
    "JobOfferID" text NULL,
    "EmployerProfileID" text NULL,
    "SkillID" text NULL,
    CONSTRAINT "PK_RequiredSkillRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_RequiredSkillRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_RequiredSkillRecord_ContactProfile_EmployerProfileID" FOREIGN KEY ("EmployerProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_RequiredSkillRecord_JobOffer_JobOfferID" FOREIGN KEY ("JobOfferID") REFERENCES "JobOffer" ("ID"),
    CONSTRAINT "FK_RequiredSkillRecord_Skill_SkillID" FOREIGN KEY ("SkillID") REFERENCES "Skill" ("ID")
);

CREATE TABLE "LeaveReport" (
    "ID" text NOT NULL,
    "Content" text NULL,
    "BusinessID" text NULL,
    "LeaveApplicationID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_LeaveReport" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LeaveReport_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LeaveReport_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_LeaveReport_LeaveApplication_LeaveApplicationID" FOREIGN KEY ("LeaveApplicationID") REFERENCES "LeaveApplication" ("ID")
);

CREATE TABLE "EmployeeTransfer" (
    "ID" text NOT NULL,
    "Initial" boolean NOT NULL,
    "Reason" text NULL,
    "Remarks" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "EffectiveDate" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "EmployeeProfileID" text NULL,
    "BusinessLocationID" text NULL,
    CONSTRAINT "PK_EmployeeTransfer" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmployeeTransfer_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmployeeTransfer_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_EmployeeTransfer_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_EmployeeTransfer_Location_BusinessLocationID" FOREIGN KEY ("BusinessLocationID") REFERENCES "Location" ("ID")
);

CREATE TABLE "ItemRestockEntry" (
    "ID" text NOT NULL,
    "Quantity" double precision NOT NULL,
    "ItemID" text NULL,
    "WarehouseID" text NULL,
    "ItemRestockID" text NULL,
    "OrderItemRecordID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ItemRestockEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemRestockEntry_BillingItemRecord_OrderItemRecordID" FOREIGN KEY ("OrderItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemRestockEntry_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemRestockEntry_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemRestockEntry_ItemRestock_ItemRestockID" FOREIGN KEY ("ItemRestockID") REFERENCES "ItemRestock" ("ID"),
    CONSTRAINT "FK_ItemRestockEntry_Location_WarehouseID" FOREIGN KEY ("WarehouseID") REFERENCES "Location" ("ID")
);

CREATE TABLE "ItemRetainSample" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "WarehouseID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemRetainSample" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemRetainSample_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemRetainSample_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemRetainSample_Location_WarehouseID" FOREIGN KEY ("WarehouseID") REFERENCES "Location" ("ID")
);

CREATE TABLE "PointOfSale" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "PriceListID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "LocationID" text NULL,
    CONSTRAINT "PK_PointOfSale" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PointOfSale_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PointOfSale_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PointOfSale_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_PointOfSale_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID")
);

CREATE TABLE "Quote" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "EffectiveFrom" timestamp with time zone NOT NULL,
    "QuoteStatus" integer NOT NULL,
    "FreightTerms" integer NOT NULL,
    "EffectiveTo" timestamp with time zone NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Closed" boolean NOT NULL,
    "CostCalculationMethod" integer NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "TotalBaseAmountInUSD" double precision NOT NULL,
    "TotalDetailAmountInUSD" double precision NOT NULL,
    "TotalDiscountsInUSD" double precision NOT NULL,
    "TotalProfitInUSD" double precision NOT NULL,
    "TotalTaxBaseInUSD" double precision NOT NULL,
    "TotalTaxesInUSD" double precision NOT NULL,
    "TotalWithholdingTaxesInUSD" double precision NOT NULL,
    "TotalShippingCostInUSD" double precision NOT NULL,
    "TotalShippingTaxesInUSD" double precision NOT NULL,
    "TotalWarrantyCostInUSD" double precision NOT NULL,
    "TotalReturnCostInUSD" double precision NOT NULL,
    "TotalRefundCostInUSD" double precision NOT NULL,
    "TotalSurchargesInUSD" double precision NOT NULL,
    "TotalAmountInUSD" double precision NOT NULL,
    "CustomBaseAmount" double precision NOT NULL,
    "CustomDetailAmount" double precision NOT NULL,
    "CustomDiscountsAmount" double precision NOT NULL,
    "CustomSurchargesAmount" double precision NOT NULL,
    "CustomProfitAmount" double precision NOT NULL,
    "CustomShippingCostAmount" double precision NOT NULL,
    "CustomShippingTaxAmount" double precision NOT NULL,
    "CustomTaxBase" double precision NOT NULL,
    "CustomTaxAmount" double precision NOT NULL,
    "CustomWithholdingTaxAmount" double precision NOT NULL,
    "CustomTotalAmount" double precision NOT NULL,
    "TotalGlobalDiscountsInUSD" double precision NOT NULL,
    "TotalGlobalSurchargesInUSD" double precision NOT NULL,
    "CustomGlobalSurchargesAmount" double precision NOT NULL,
    "CustomGlobalDiscountsAmount" double precision NOT NULL,
    "BusinessID" text NULL,
    "ReceptorBusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "AccountHolderID" text NULL,
    "CurrencyID" text NULL,
    "PriceListID" text NULL,
    "DealUnitID" text NULL,
    "PaymentTermID" text NULL,
    "ShippingMethodID" text NULL,
    "ShippingLocationID" text NULL,
    "BillingLocationID" text NULL,
    "Discriminator" text NOT NULL,
    "SupplierProfileID" text NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_Quote" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Quote_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Quote_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Quote_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Quote_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Quote_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Quote_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Quote_ContactProfile_SupplierProfileID" FOREIGN KEY ("SupplierProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Quote_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Quote_DealUnit_DealUnitID" FOREIGN KEY ("DealUnitID") REFERENCES "DealUnit" ("ID"),
    CONSTRAINT "FK_Quote_Location_BillingLocationID" FOREIGN KEY ("BillingLocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Quote_Location_ShippingLocationID" FOREIGN KEY ("ShippingLocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Quote_PaymentTerm_PaymentTermID" FOREIGN KEY ("PaymentTermID") REFERENCES "PaymentTerm" ("ID"),
    CONSTRAINT "FK_Quote_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_Quote_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID"),
    CONSTRAINT "FK_Quote_ShippingMethod_ShippingMethodID" FOREIGN KEY ("ShippingMethodID") REFERENCES "ShippingMethod" ("ID")
);

CREATE TABLE "WalletAccount" (
    "ID" text NOT NULL,
    "CreatedTimestamp" timestamp with time zone NOT NULL,
    "EnabledToRecievePayments" boolean NOT NULL,
    "WalletCurrentBalanceInUSD" double precision NOT NULL,
    "Test" boolean NOT NULL,
    "Type" text NOT NULL,
    "LegalName" text NULL,
    "OfficialID" text NULL,
    "OfficialIDExpeditionDate" timestamp with time zone NOT NULL,
    "CustomAddress" text NULL,
    "Phone" text NULL,
    "Cellphone" text NULL,
    "Department" text NULL,
    "City" text NULL,
    "EthereumAddress" text NULL,
    "EthereumPublicKey" text NULL,
    "EthereumPrivateKey" text NULL,
    "MainNetEtherBalance" numeric NOT NULL,
    "TestNetEtherBalance" numeric NOT NULL,
    "BitcoinMainNetAddress" text NULL,
    "BitcoinTestNetAddress" text NULL,
    "BitcoinPublicKey" text NULL,
    "BitcoinPrivateKey" text NULL,
    "BitcoinMainNetBalance" numeric NOT NULL,
    "BitcoinTestNetBalance" numeric NOT NULL,
    "RollingReservePercent" numeric NOT NULL,
    "RollingReserveTimeInDays" numeric NOT NULL,
    "AccountID" text NULL,
    "BillingProfileID" text NULL,
    "CountryID" text NULL,
    "LocationID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    CONSTRAINT "PK_WalletAccount" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WalletAccount_Account_AccountID" FOREIGN KEY ("AccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_WalletAccount_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_WalletAccount_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_WalletAccount_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_WalletAccount_ContactProfile_BillingProfileID" FOREIGN KEY ("BillingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_WalletAccount_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_WalletAccount_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID")
);

CREATE TABLE "Workstation" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Type" text NULL,
    "Description" text NULL,
    "LocationID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_Workstation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Workstation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Workstation_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Workstation_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID")
);

CREATE TABLE "RetentionBonus" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Amount" double precision NOT NULL,
    "CurrencyID" text NULL,
    "SalaryID" text NULL,
    CONSTRAINT "PK_RetentionBonus" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_RetentionBonus_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_RetentionBonus_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_RetentionBonus_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_RetentionBonus_Salary_SalaryID" FOREIGN KEY ("SalaryID") REFERENCES "Salary" ("ID")
);

CREATE TABLE "SalaryDeduction" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Amount" double precision NOT NULL,
    "CurrencyID" text NULL,
    "SalaryID" text NULL,
    CONSTRAINT "PK_SalaryDeduction" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SalaryDeduction_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SalaryDeduction_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SalaryDeduction_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_SalaryDeduction_Salary_SalaryID" FOREIGN KEY ("SalaryID") REFERENCES "Salary" ("ID")
);

CREATE TABLE "SalaryEarning" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Amount" double precision NOT NULL,
    "CurrencyID" text NULL,
    "SalaryID" text NULL,
    CONSTRAINT "PK_SalaryEarning" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SalaryEarning_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SalaryEarning_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SalaryEarning_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_SalaryEarning_Salary_SalaryID" FOREIGN KEY ("SalaryID") REFERENCES "Salary" ("ID")
);

CREATE TABLE "SignedDocument" (
    "ID" text NOT NULL,
    "Signed" boolean NOT NULL,
    "URL" text NULL,
    "Type" text NULL,
    "Title" text NULL,
    "Document" bytea NULL,
    "ContentType" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "FileLengthInBits" bigint NOT NULL,
    "SignedDataBase64" text NULL,
    "PreSignedDataBase64" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SigningCertificateID" text NULL,
    "SigningProfileID" text NULL,
    CONSTRAINT "PK_SignedDocument" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SignedDocument_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_SignedDocument_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SignedDocument_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SignedDocument_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_SignedDocument_ContactProfile_SigningProfileID" FOREIGN KEY ("SigningProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_SignedDocument_SigningCertificate_SigningCertificateID" FOREIGN KEY ("SigningCertificateID") REFERENCES "SigningCertificate" ("ID")
);

CREATE TABLE "CourseCohort" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "StartDateTime" timestamp with time zone NOT NULL,
    "EndDateTime" timestamp with time zone NOT NULL,
    "ExpectedStartDateTime" timestamp with time zone NOT NULL,
    "ExpectedEndDateTime" timestamp with time zone NOT NULL,
    "CourseID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseContentGroupID" text NULL,
    "CourseCohortAssignationMethod" integer NOT NULL,
    CONSTRAINT "PK_CourseCohort" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseCohort_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseCohort_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseCohort_CourseContentGroup_CourseContentGroupID" FOREIGN KEY ("CourseContentGroupID") REFERENCES "CourseContentGroup" ("ID"),
    CONSTRAINT "FK_CourseCohort_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseGradingCriteria" (
    "ID" text NOT NULL,
    "Percent" double precision NOT NULL,
    "Description" text NULL,
    "GradingRubricID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CourseGradingCriteria" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseGradingCriteria_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseGradingCriteria_BusinessProfileRecord_BusinessProfile~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseGradingCriteria_CourseGradingRubric_GradingRubricID" FOREIGN KEY ("GradingRubricID") REFERENCES "CourseGradingRubric" ("ID")
);

CREATE TABLE "CourseUnit" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Content" text NULL,
    "CourseID" text NULL,
    "CourseSectionID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseContentGroupID" text NULL,
    CONSTRAINT "PK_CourseUnit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseUnit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseUnit_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseUnit_CourseContentGroup_CourseContentGroupID" FOREIGN KEY ("CourseContentGroupID") REFERENCES "CourseContentGroup" ("ID"),
    CONSTRAINT "FK_CourseUnit_CourseSection_CourseSectionID" FOREIGN KEY ("CourseSectionID") REFERENCES "CourseSection" ("ID"),
    CONSTRAINT "FK_CourseUnit_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "ItemQuestionReply" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Reply" text NOT NULL,
    "NeedsRevision" boolean NOT NULL,
    "SentimentScore" double precision NOT NULL,
    "SocialProfileID" text NULL,
    "BusinessID" text NULL,
    "ItemQuestionID" text NULL,
    "Type" text NOT NULL,
    CONSTRAINT "PK_ItemQuestionReply" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemQuestionReply_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemQuestionReply_ItemQuestion_ItemQuestionID" FOREIGN KEY ("ItemQuestionID") REFERENCES "ItemQuestion" ("ID"),
    CONSTRAINT "FK_ItemQuestionReply_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "GenericRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "TaxPolicyID" text NULL,
    "ItemPriceID" text NULL,
    "ItemID" text NULL,
    "PricingRuleID" text NULL,
    "PriceListID" text NULL,
    "ItemPricingRuleRecord_ItemID" text NULL,
    "ItemRefundPolicyRecord_ItemID" text NULL,
    "RefundPolicyID" text NULL,
    "ItemWarrantyPolicyRecord_ItemID" text NULL,
    "WarrantyPolicyID" text NULL,
    "ItemReturnPolicyRecord_ItemID" text NULL,
    "ReturnPolicyID" text NULL,
    "ItemSellingMarginPolicyRecord_ItemID" text NULL,
    "ItemSellingMarginPolicyID" text NULL,
    "JobFieldID" text NULL,
    "JobOfferID" text NULL,
    CONSTRAINT "PK_GenericRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_GenericRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_GenericRecord_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_GenericRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_GenericRecord_Item_ItemPricingRuleRecord_ItemID" FOREIGN KEY ("ItemPricingRuleRecord_ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_GenericRecord_Item_ItemRefundPolicyRecord_ItemID" FOREIGN KEY ("ItemRefundPolicyRecord_ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_GenericRecord_Item_ItemReturnPolicyRecord_ItemID" FOREIGN KEY ("ItemReturnPolicyRecord_ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_GenericRecord_Item_ItemSellingMarginPolicyRecord_ItemID" FOREIGN KEY ("ItemSellingMarginPolicyRecord_ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_GenericRecord_Item_ItemWarrantyPolicyRecord_ItemID" FOREIGN KEY ("ItemWarrantyPolicyRecord_ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_GenericRecord_JobField_JobFieldID" FOREIGN KEY ("JobFieldID") REFERENCES "JobField" ("ID"),
    CONSTRAINT "FK_GenericRecord_JobOffer_JobOfferID" FOREIGN KEY ("JobOfferID") REFERENCES "JobOffer" ("ID"),
    CONSTRAINT "FK_GenericRecord_Policy_ItemSellingMarginPolicyID" FOREIGN KEY ("ItemSellingMarginPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_GenericRecord_Policy_PricingRuleID" FOREIGN KEY ("PricingRuleID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_GenericRecord_Policy_RefundPolicyID" FOREIGN KEY ("RefundPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_GenericRecord_Policy_ReturnPolicyID" FOREIGN KEY ("ReturnPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_GenericRecord_Policy_TaxPolicyID" FOREIGN KEY ("TaxPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_GenericRecord_Policy_WarrantyPolicyID" FOREIGN KEY ("WarrantyPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_GenericRecord_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_GenericRecord_PriceListItem_ItemPriceID" FOREIGN KEY ("ItemPriceID") REFERENCES "PriceListItem" ("ID")
);

CREATE TABLE "TimeInterval" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "IsBreak" boolean NOT NULL,
    "OccustOnMonday" boolean NOT NULL,
    "OccustOnTuesday" boolean NOT NULL,
    "OccustOnWednesday" boolean NOT NULL,
    "OccustOnThursday" boolean NOT NULL,
    "OccustOnFriday" boolean NOT NULL,
    "OccustOnSaturday" boolean NOT NULL,
    "OccustOnSunday" boolean NOT NULL,
    "Start" timestamp with time zone NOT NULL,
    "End" timestamp with time zone NOT NULL,
    "RepeatEvery" integer NOT NULL,
    "RepetitionCriteria" integer NOT NULL,
    "RecurrenceStart" timestamp with time zone NOT NULL,
    "RecurrenceEnd" timestamp with time zone NOT NULL,
    "DayOfTheWeek" integer NOT NULL,
    "ScheduleID" text NULL,
    "ParentTimeIntervalID" text NULL,
    "Discriminator" text NOT NULL,
    "BusinessID" text NULL,
    "EmployeeProfileID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "LeaveApplicationID" text NULL,
    "Shift_BusinessID" text NULL,
    "Shift_EmployeeProfileID" text NULL,
    "TrainingProgramEvent_BusinessID" text NULL,
    "TrainingProgramEvent_BusinessProfileRecordID" text NULL,
    "TrainingProgramID" text NULL,
    CONSTRAINT "PK_TimeInterval" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TimeInterval_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TimeInterval_Business_Shift_BusinessID" FOREIGN KEY ("Shift_BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TimeInterval_Business_TrainingProgramEvent_BusinessID" FOREIGN KEY ("TrainingProgramEvent_BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TimeInterval_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TimeInterval_BusinessProfileRecord_TrainingProgramEvent_Bus~" FOREIGN KEY ("TrainingProgramEvent_BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_TimeInterval_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_TimeInterval_ContactProfile_Shift_EmployeeProfileID" FOREIGN KEY ("Shift_EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_TimeInterval_LeaveApplication_LeaveApplicationID" FOREIGN KEY ("LeaveApplicationID") REFERENCES "LeaveApplication" ("ID"),
    CONSTRAINT "FK_TimeInterval_Schedule_ScheduleID" FOREIGN KEY ("ScheduleID") REFERENCES "Schedule" ("ID"),
    CONSTRAINT "FK_TimeInterval_TimeInterval_ParentTimeIntervalID" FOREIGN KEY ("ParentTimeIntervalID") REFERENCES "TimeInterval" ("ID"),
    CONSTRAINT "FK_TimeInterval_TrainingProgram_TrainingProgramID" FOREIGN KEY ("TrainingProgramID") REFERENCES "TrainingProgram" ("ID")
);

CREATE TABLE "SocialGroupEnrollmentRecord" (
    "ID" text NOT NULL,
    "IsOwner" boolean NOT NULL,
    "IsAdmin" boolean NOT NULL,
    "SocialProfileID" text NULL,
    "GroupID" text NULL,
    CONSTRAINT "PK_SocialGroupEnrollmentRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialGroupEnrollmentRecord_SocialGroup_GroupID" FOREIGN KEY ("GroupID") REFERENCES "SocialGroup" ("ID"),
    CONSTRAINT "FK_SocialGroupEnrollmentRecord_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "GigApplication" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "AcceptedTimestamp" timestamp with time zone NULL,
    "Accepted" boolean NOT NULL,
    "GigID" text NULL,
    "Proposal" text NULL,
    "Cost" numeric NOT NULL,
    "CurrencyID" text NULL,
    "CurriculumID" text NULL,
    "CurriculumCoverID" text NULL,
    "JobApplicantProfileID" text NULL,
    CONSTRAINT "PK_GigApplication" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_GigApplication_ContactProfile_JobApplicantProfileID" FOREIGN KEY ("JobApplicantProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_GigApplication_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_GigApplication_Curriculum_CurriculumID" FOREIGN KEY ("CurriculumID") REFERENCES "Curriculum" ("ID"),
    CONSTRAINT "FK_GigApplication_CurriculumRecord_CurriculumCoverID" FOREIGN KEY ("CurriculumCoverID") REFERENCES "CurriculumRecord" ("ID"),
    CONSTRAINT "FK_GigApplication_Gig_GigID" FOREIGN KEY ("GigID") REFERENCES "Gig" ("ID")
);

CREATE TABLE "JobOfferApplication" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Start" timestamp with time zone NOT NULL,
    "End" timestamp with time zone NOT NULL,
    "SalaryExpectation" double precision NOT NULL,
    "CurrencyID" text NULL,
    "CurriculumID" text NULL,
    "CurriculumCoverID" text NULL,
    "JobOfferID" text NULL,
    "JobApplicantProfileID" text NULL,
    CONSTRAINT "PK_JobOfferApplication" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_JobOfferApplication_ContactProfile_JobApplicantProfileID" FOREIGN KEY ("JobApplicantProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_JobOfferApplication_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_JobOfferApplication_Curriculum_CurriculumID" FOREIGN KEY ("CurriculumID") REFERENCES "Curriculum" ("ID"),
    CONSTRAINT "FK_JobOfferApplication_CurriculumRecord_CurriculumCoverID" FOREIGN KEY ("CurriculumCoverID") REFERENCES "CurriculumRecord" ("ID"),
    CONSTRAINT "FK_JobOfferApplication_JobOffer_JobOfferID" FOREIGN KEY ("JobOfferID") REFERENCES "JobOffer" ("ID")
);

CREATE TABLE "ItemBid" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Amount" numeric NOT NULL,
    "CurrencyID" text NULL,
    "WalletAccountID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemBid" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemBid_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_ItemBid_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemBid_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "Order" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Closed" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "RequestedDelivery" timestamp with time zone NOT NULL,
    "OrderType" integer NOT NULL,
    "OrderStatus" integer NOT NULL,
    "FreightTerms" integer NOT NULL,
    "CostCalculationMethod" integer NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "TotalBaseAmountInUSD" double precision NOT NULL,
    "TotalDetailAmountInUSD" double precision NOT NULL,
    "TotalTaxBaseInUSD" double precision NOT NULL,
    "TotalDiscountsInUSD" double precision NOT NULL,
    "TotalProfitInUSD" double precision NOT NULL,
    "TotalTaxesInUSD" double precision NOT NULL,
    "TotalWithholdingTaxesInUSD" double precision NOT NULL,
    "TotalShippingCostInUSD" double precision NOT NULL,
    "TotalShippingTaxesInUSD" double precision NOT NULL,
    "TotalWarrantyCostInUSD" double precision NOT NULL,
    "TotalReturnCostInUSD" double precision NOT NULL,
    "TotalRefundCostInUSD" double precision NOT NULL,
    "TotalSurchargesInUSD" double precision NOT NULL,
    "TotalAmountInUSD" double precision NOT NULL,
    "CustomBaseAmount" double precision NOT NULL,
    "CustomDetailAmount" double precision NOT NULL,
    "CustomDiscountsAmount" double precision NOT NULL,
    "CustomSurchargesAmount" double precision NOT NULL,
    "CustomProfitAmount" double precision NOT NULL,
    "CustomShippingCostAmount" double precision NOT NULL,
    "CustomShippingTaxAmount" double precision NOT NULL,
    "CustomTaxBase" double precision NOT NULL,
    "CustomTaxAmount" double precision NOT NULL,
    "CustomWithholdingTaxAmount" double precision NOT NULL,
    "CustomTotalAmount" double precision NOT NULL,
    "TotalGlobalDiscountsInUSD" double precision NOT NULL,
    "TotalGlobalSurchargesInUSD" double precision NOT NULL,
    "CustomGlobalSurchargesAmount" double precision NOT NULL,
    "CustomGlobalDiscountsAmount" double precision NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "AddressLine1" text NULL,
    "AddressLine2" text NULL,
    "PostalCode" text NULL,
    "BillingEmail" text NULL,
    "CompanyName" text NULL,
    "CustomerNotes" text NULL,
    "BillingContactID" text NULL,
    "ShippingContactID" text NULL,
    "BillingAddressID" text NULL,
    "ShippingAddressID" text NULL,
    "CurrencyID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "CountryID" text NULL,
    "CountryStateID" text NULL,
    "CityID" text NULL,
    "BusinessID" text NULL,
    "ReceptorBusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AccountHolderID" text NULL,
    "CartID" text NULL,
    "WalletAccountID" text NULL,
    "BillingProfileID" text NULL,
    "ParentOrderID" text NULL,
    "QuoteID" text NULL,
    "PriceListID" text NULL,
    "ShippingLocationID" text NULL,
    "BillingLocationID" text NULL,
    "PaymentTermID" text NULL,
    "ShippingMethodID" text NULL,
    "Discriminator" text NOT NULL,
    "SalesQuoteID" text NULL,
    CONSTRAINT "PK_Order" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Order_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Order_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Order_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Order_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Order_Cart_CartID" FOREIGN KEY ("CartID") REFERENCES "Cart" ("ID"),
    CONSTRAINT "FK_Order_City_CityID" FOREIGN KEY ("CityID") REFERENCES "City" ("ID"),
    CONSTRAINT "FK_Order_Contact_BillingContactID" FOREIGN KEY ("BillingContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Order_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Order_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Order_Contact_ShippingContactID" FOREIGN KEY ("ShippingContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Order_ContactProfile_BillingProfileID" FOREIGN KEY ("BillingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Order_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Order_CountryState_CountryStateID" FOREIGN KEY ("CountryStateID") REFERENCES "CountryState" ("ID"),
    CONSTRAINT "FK_Order_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Order_Location_BillingAddressID" FOREIGN KEY ("BillingAddressID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Order_Location_BillingLocationID" FOREIGN KEY ("BillingLocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Order_Location_ShippingAddressID" FOREIGN KEY ("ShippingAddressID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Order_Location_ShippingLocationID" FOREIGN KEY ("ShippingLocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Order_Order_ParentOrderID" FOREIGN KEY ("ParentOrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_Order_PaymentTerm_PaymentTermID" FOREIGN KEY ("PaymentTermID") REFERENCES "PaymentTerm" ("ID"),
    CONSTRAINT "FK_Order_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_Order_Quote_QuoteID" FOREIGN KEY ("QuoteID") REFERENCES "Quote" ("ID"),
    CONSTRAINT "FK_Order_Quote_SalesQuoteID" FOREIGN KEY ("SalesQuoteID") REFERENCES "Quote" ("ID"),
    CONSTRAINT "FK_Order_ShippingMethod_ShippingMethodID" FOREIGN KEY ("ShippingMethodID") REFERENCES "ShippingMethod" ("ID"),
    CONSTRAINT "FK_Order_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "PaymentToken" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ValidUntil" timestamp with time zone NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "Test" boolean NOT NULL,
    "Mask" text NULL,
    "Data" text NULL,
    "Token" text NULL,
    "TokenId" text NULL,
    "Nonce" text NULL,
    "Status" text NULL,
    "ValidSeconds" integer NOT NULL,
    "TokenType" text NULL,
    "ObjectType" text NULL,
    "CardFranchise" text NULL,
    "CardExpiratonMonth" text NULL,
    "CardExpiratonYear" text NULL,
    "CreatedDateProperty" text NULL,
    "WalletAccountID" text NULL,
    "PaymentGatewayID" text NULL,
    CONSTRAINT "PK_PaymentToken" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentToken_PaymentGateway_PaymentGatewayID" FOREIGN KEY ("PaymentGatewayID") REFERENCES "PaymentGateway" ("ID"),
    CONSTRAINT "FK_PaymentToken_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "WalletWithdrawRequest" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "RequestedWithdrawAmount" numeric NOT NULL,
    "RequestedWithdrawAmountInUSD" numeric NOT NULL,
    "WalletWithdrawRequestStatus" integer NOT NULL,
    "ForexRate" text NULL,
    "ForexRates" text NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "WalletAccountID" text NULL,
    "BankAccountID" text NULL,
    CONSTRAINT "PK_WalletWithdrawRequest" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WalletWithdrawRequest_Account_BankAccountID" FOREIGN KEY ("BankAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_WalletWithdrawRequest_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_WalletWithdrawRequest_BusinessProfileRecord_BusinessProfile~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_WalletWithdrawRequest_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_WalletWithdrawRequest_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "Signature" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ValidationCode" text NULL,
    "SignatureImage" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ContactID" text NULL,
    "AccountHolderID" text NULL,
    "SigningProfileID" text NULL,
    "SigningCertificateID" text NULL,
    "SignedDocumentID" text NULL,
    "AgreementRevisionID" text NULL,
    "SocialProfileID" text NULL,
    CONSTRAINT "PK_Signature" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Signature_AgreementRevision_AgreementRevisionID" FOREIGN KEY ("AgreementRevisionID") REFERENCES "AgreementRevision" ("ID"),
    CONSTRAINT "FK_Signature_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Signature_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Signature_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Signature_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Signature_ContactProfile_SigningProfileID" FOREIGN KEY ("SigningProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Signature_SignedDocument_SignedDocumentID" FOREIGN KEY ("SignedDocumentID") REFERENCES "SignedDocument" ("ID"),
    CONSTRAINT "FK_Signature_SigningCertificate_SigningCertificateID" FOREIGN KEY ("SigningCertificateID") REFERENCES "SigningCertificate" ("ID"),
    CONSTRAINT "FK_Signature_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "CourseEnrollment" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "StudentProfileID" text NULL,
    "CourseCohortID" text NULL,
    "CourseID" text NULL,
    CONSTRAINT "PK_CourseEnrollment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseEnrollment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseEnrollment_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseEnrollment_ContactProfile_StudentProfileID" FOREIGN KEY ("StudentProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CourseEnrollment_CourseCohort_CourseCohortID" FOREIGN KEY ("CourseCohortID") REFERENCES "CourseCohort" ("ID"),
    CONSTRAINT "FK_CourseEnrollment_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseGradingCriteriaCategory" (
    "ID" text NOT NULL,
    "Points" integer NOT NULL,
    "Title" text NULL,
    "Criteria" text NULL,
    "CourseGradingRubricID" text NULL,
    "CourseGradingCriteriaID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CourseGradingCriteriaCategory" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseGradingCriteriaCategory_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseGradingCriteriaCategory_BusinessProfileRecord_Busines~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseGradingCriteriaCategory_CourseGradingCriteria_CourseG~" FOREIGN KEY ("CourseGradingCriteriaID") REFERENCES "CourseGradingCriteria" ("ID"),
    CONSTRAINT "FK_CourseGradingCriteriaCategory_CourseGradingRubric_CourseGra~" FOREIGN KEY ("CourseGradingRubricID") REFERENCES "CourseGradingRubric" ("ID")
);

CREATE TABLE "CourseHandout" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Content" text NULL,
    "Url" text NULL,
    "File" bytea NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "CourseID" text NULL,
    "CourseUnitID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_CourseHandout" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseHandout_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseHandout_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseHandout_CourseUnit_CourseUnitID" FOREIGN KEY ("CourseUnitID") REFERENCES "CourseUnit" ("ID"),
    CONSTRAINT "FK_CourseHandout_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseLibrary" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "BusinessID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseID" text NULL,
    "CourseUnitID" text NULL,
    CONSTRAINT "PK_CourseLibrary" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseLibrary_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseLibrary_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseLibrary_CourseUnit_CourseUnitID" FOREIGN KEY ("CourseUnitID") REFERENCES "CourseUnit" ("ID"),
    CONSTRAINT "FK_CourseLibrary_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseProblemSet" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "OverallScore" double precision NOT NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CourseGradingRubricID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseID" text NULL,
    "CourseUnitID" text NULL,
    CONSTRAINT "PK_CourseProblemSet" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseProblemSet_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseProblemSet_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseProblemSet_CourseGradingRubric_CourseGradingRubricID" FOREIGN KEY ("CourseGradingRubricID") REFERENCES "CourseGradingRubric" ("ID"),
    CONSTRAINT "FK_CourseProblemSet_CourseUnit_CourseUnitID" FOREIGN KEY ("CourseUnitID") REFERENCES "CourseUnit" ("ID"),
    CONSTRAINT "FK_CourseProblemSet_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "CourseWiki" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseID" text NULL,
    "CourseUnitID" text NULL,
    CONSTRAINT "PK_CourseWiki" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseWiki_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseWiki_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseWiki_CourseUnit_CourseUnitID" FOREIGN KEY ("CourseUnitID") REFERENCES "CourseUnit" ("ID"),
    CONSTRAINT "FK_CourseWiki_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "Payroll" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "PayrollPeriodID" text NULL,
    CONSTRAINT "PK_Payroll" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Payroll_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Payroll_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Payroll_TimeInterval_PayrollPeriodID" FOREIGN KEY ("PayrollPeriodID") REFERENCES "TimeInterval" ("ID")
);

CREATE TABLE "ItemOwnership" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ItemBidID" text NULL,
    "ItemID" text NULL,
    "CartID" text NULL,
    "Discriminator" text NOT NULL,
    "BlockchainBlockID" text NULL,
    "WalletAccountID" text NULL,
    CONSTRAINT "PK_ItemOwnership" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemOwnership_BlockchainBlock_BlockchainBlockID" FOREIGN KEY ("BlockchainBlockID") REFERENCES "BlockchainBlock" ("ID"),
    CONSTRAINT "FK_ItemOwnership_Cart_CartID" FOREIGN KEY ("CartID") REFERENCES "Cart" ("ID"),
    CONSTRAINT "FK_ItemOwnership_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemOwnership_ItemBid_ItemBidID" FOREIGN KEY ("ItemBidID") REFERENCES "ItemBid" ("ID"),
    CONSTRAINT "FK_ItemOwnership_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "Invoice" (
    "ID" text NOT NULL,
    "Closed" boolean NOT NULL,
    "Paid" boolean NOT NULL,
    "Number" bigint NOT NULL,
    "Data" text NULL,
    "Type" text NOT NULL,
    "Notes" text NULL,
    "Description" text NULL,
    "TermsAndConditions" text NULL,
    "Opening" boolean NOT NULL,
    "OnHold" boolean NOT NULL,
    "Expired" boolean NOT NULL,
    "Reported" boolean NOT NULL,
    "HoldReason" text NULL,
    "IgnorePricingRules" boolean NOT NULL,
    "RawMaterialsSupplied" boolean NOT NULL,
    "ToDate" timestamp with time zone NOT NULL,
    "FromDate" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "PaymentDue" timestamp with time zone NOT NULL,
    "Expiration" timestamp with time zone NOT NULL,
    "ReleaseDate" timestamp with time zone NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "ReportedTimestamp" timestamp with time zone NOT NULL,
    "InvoiceType" integer NOT NULL,
    "DocumentType" integer NOT NULL,
    "InvoiceStatus" integer NOT NULL,
    "RemainingAmountInUSD" double precision NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "ForexRate" double precision NOT NULL,
    "TotalBaseAmountInUSD" double precision NOT NULL,
    "TotalDetailAmountInUSD" double precision NOT NULL,
    "TotalTaxBaseInUSD" double precision NOT NULL,
    "TotalDiscountsInUSD" double precision NOT NULL,
    "TotalProfitInUSD" double precision NOT NULL,
    "TotalTaxesInUSD" double precision NOT NULL,
    "TotalWithholdingTaxesInUSD" double precision NOT NULL,
    "TotalShippingCostInUSD" double precision NOT NULL,
    "TotalShippingTaxesInUSD" double precision NOT NULL,
    "TotalWarrantyCostInUSD" double precision NOT NULL,
    "TotalReturnCostInUSD" double precision NOT NULL,
    "TotalRefundCostInUSD" double precision NOT NULL,
    "TotalSurchargesInUSD" double precision NOT NULL,
    "TotalAmountInUSD" double precision NOT NULL,
    "CustomBaseAmount" double precision NOT NULL,
    "CustomDetailAmount" double precision NOT NULL,
    "CustomTaxBase" double precision NOT NULL,
    "CustomDiscountsAmount" double precision NOT NULL,
    "CustomSurchargesAmount" double precision NOT NULL,
    "CustomProfitAmount" double precision NOT NULL,
    "CustomShippingCostAmount" double precision NOT NULL,
    "CustomShippingTaxAmount" double precision NOT NULL,
    "CustomTaxAmount" double precision NOT NULL,
    "CustomWithholdingTaxAmount" double precision NOT NULL,
    "CustomTotalAmount" double precision NOT NULL,
    "TotalGlobalDiscountsInUSD" double precision NOT NULL,
    "TotalGlobalSurchargesInUSD" double precision NOT NULL,
    "CustomGlobalSurchargesAmount" double precision NOT NULL,
    "CustomGlobalDiscountsAmount" double precision NOT NULL,
    "AccountHolderID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "ReceptorBusinessID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "OrderID" text NULL,
    "CurrencyID" text NULL,
    "ShippingLocationID" text NULL,
    "BillingLocationID" text NULL,
    "EmmisorBillingProfileID" text NULL,
    "ReceptorBillingProfileID" text NULL,
    "InvoiceEnumerationRangeID" text NULL,
    "EmmisorWalletAccountID" text NULL,
    "ReceptorWalletAccountID" text NULL,
    "PriceListID" text NULL,
    "PaymentModeID" text NULL,
    "PaymentTermID" text NULL,
    "SupplierInvoiceDate" timestamp with time zone NULL,
    "SupplierInvoiceReference" text NULL,
    "PointOfSaleID" text NULL,
    CONSTRAINT "PK_Invoice" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Invoice_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Invoice_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Invoice_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Invoice_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Invoice_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Invoice_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Invoice_ContactProfile_EmmisorBillingProfileID" FOREIGN KEY ("EmmisorBillingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Invoice_ContactProfile_ReceptorBillingProfileID" FOREIGN KEY ("ReceptorBillingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Invoice_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Invoice_InvoiceEnumerationRange_InvoiceEnumerationRangeID" FOREIGN KEY ("InvoiceEnumerationRangeID") REFERENCES "InvoiceEnumerationRange" ("ID"),
    CONSTRAINT "FK_Invoice_Location_BillingLocationID" FOREIGN KEY ("BillingLocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Invoice_Location_ShippingLocationID" FOREIGN KEY ("ShippingLocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Invoice_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_Invoice_PaymentMode_PaymentModeID" FOREIGN KEY ("PaymentModeID") REFERENCES "PaymentMode" ("ID"),
    CONSTRAINT "FK_Invoice_PaymentTerm_PaymentTermID" FOREIGN KEY ("PaymentTermID") REFERENCES "PaymentTerm" ("ID"),
    CONSTRAINT "FK_Invoice_PointOfSale_PointOfSaleID" FOREIGN KEY ("PointOfSaleID") REFERENCES "PointOfSale" ("ID"),
    CONSTRAINT "FK_Invoice_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_Invoice_WalletAccount_EmmisorWalletAccountID" FOREIGN KEY ("EmmisorWalletAccountID") REFERENCES "WalletAccount" ("ID"),
    CONSTRAINT "FK_Invoice_WalletAccount_ReceptorWalletAccountID" FOREIGN KEY ("ReceptorWalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "ItemPackingSlip" (
    "ID" text NOT NULL,
    "Instructions" text NULL,
    "DeliveryNoteID" text NULL,
    "BusinessID" text NULL,
    "OrderID" text NULL,
    CONSTRAINT "PK_ItemPackingSlip" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemPackingSlip_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemPackingSlip_DeliveryNote_DeliveryNoteID" FOREIGN KEY ("DeliveryNoteID") REFERENCES "DeliveryNote" ("ID"),
    CONSTRAINT "FK_ItemPackingSlip_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID")
);

CREATE TABLE "ItemPickList" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "OrderID" text NULL,
    "BusinessID" text NULL,
    "WarehouseID" text NULL,
    CONSTRAINT "PK_ItemPickList" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemPickList_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemPickList_Location_WarehouseID" FOREIGN KEY ("WarehouseID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_ItemPickList_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID")
);

CREATE TABLE "OrderRelation" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Type" text NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "OrderID" text NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_OrderRelation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_OrderRelation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_OrderRelation_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_OrderRelation_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_OrderRelation_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID")
);

CREATE TABLE "Shipment" (
    "ID" text NOT NULL,
    "IsInternational" boolean NOT NULL,
    "Delivered" boolean NOT NULL,
    "Shipped" boolean NOT NULL,
    "ShippngTimestamp" timestamp with time zone NOT NULL,
    "DeliveryTimestamp" timestamp with time zone NOT NULL,
    "ExpectedShippingDate" timestamp with time zone NOT NULL,
    "ExpectedDeliveryDate" timestamp with time zone NOT NULL,
    "ShippingTerms" integer NOT NULL,
    "BusinessID" text NULL,
    "OrderID" text NULL,
    "BillingItemRecordID" text NULL,
    CONSTRAINT "PK_Shipment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Shipment_BillingItemRecord_BillingItemRecordID" FOREIGN KEY ("BillingItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_Shipment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Shipment_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID")
);

CREATE TABLE "Entitlement" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Status" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "Repetitions" integer NOT NULL,
    "ChargeAttempts" integer NOT NULL,
    "FreeTrialInDays" integer NOT NULL,
    "GracePeriodInDays" integer NOT NULL,
    "CustomRenewalPeriod" integer NOT NULL,
    "RenewalPeriod" integer NOT NULL,
    "EnableAutomaticRenew" boolean NOT NULL,
    "EnableAutomaticDisable" boolean NOT NULL,
    "EnableAutomaticPayments" boolean NOT NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "StartDateTime" timestamp with time zone NOT NULL,
    "EndDateTime" timestamp with time zone NOT NULL,
    "AccountHolderID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "ReceptorBusinessID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "PaymentTokenID" text NULL,
    "ContactProfileID" text NULL,
    "Discriminator" text NOT NULL,
    "Code" text NULL,
    "Signature" text NULL,
    "PassPhrase" text NULL,
    "Class" integer NULL,
    "LicenseTypeID" text NULL,
    "LicensingProfileID" text NULL,
    "ServiceID" text NULL,
    "ServiceLevelID" text NULL,
    "SubscriptionPlanID" text NULL,
    "ContactID" text NULL,
    "WalletAccountID" text NULL,
    "EmployeeBenefitID" text NULL,
    "EmployeeProfileID" text NULL,
    CONSTRAINT "PK_Entitlement" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Entitlement_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Entitlement_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Entitlement_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Entitlement_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Entitlement_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Entitlement_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Entitlement_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Entitlement_ContactProfile_ContactProfileID" FOREIGN KEY ("ContactProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Entitlement_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Entitlement_ContactProfile_LicensingProfileID" FOREIGN KEY ("LicensingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Entitlement_EmployeeBenefit_EmployeeBenefitID" FOREIGN KEY ("EmployeeBenefitID") REFERENCES "EmployeeBenefit" ("ID"),
    CONSTRAINT "FK_Entitlement_Item_LicenseTypeID" FOREIGN KEY ("LicenseTypeID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Entitlement_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Entitlement_Item_ServiceLevelID" FOREIGN KEY ("ServiceLevelID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Entitlement_Item_SubscriptionPlanID" FOREIGN KEY ("SubscriptionPlanID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Entitlement_PaymentToken_PaymentTokenID" FOREIGN KEY ("PaymentTokenID") REFERENCES "PaymentToken" ("ID"),
    CONSTRAINT "FK_Entitlement_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "WalletWithdraw" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "WithdrawStatus" integer NOT NULL,
    "WalletAccountID" text NULL,
    "WalletWithdrawRequestID" text NULL,
    "ForexRate" text NULL,
    "ForexRates" text NULL,
    "BalanceBeforeWithdraw" numeric NOT NULL,
    "BalanceAfterWithdraw" numeric NOT NULL,
    "WithdrawedAmount" numeric NOT NULL,
    "CurrencyID" text NULL,
    CONSTRAINT "PK_WalletWithdraw" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WalletWithdraw_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_WalletWithdraw_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID"),
    CONSTRAINT "FK_WalletWithdraw_WalletWithdrawRequest_WalletWithdrawRequestID" FOREIGN KEY ("WalletWithdrawRequestID") REFERENCES "WalletWithdrawRequest" ("ID")
);

CREATE TABLE "CourseAssignment" (
    "ID" text NOT NULL,
    "AsignToAllCohorts" boolean NOT NULL,
    "Points" double precision NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Instructions" text NULL,
    "DueDateTime" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Resources" text NULL,
    "BusinessID" text NULL,
    "CourseID" text NULL,
    "CourseCohortID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseGradingRubricID" text NULL,
    "CourseProblemSetID" text NULL,
    "CourseUnitID" text NULL,
    "CourseAssignmentTypeID" text NULL,
    CONSTRAINT "PK_CourseAssignment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseAssignment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseAssignment_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseAssignment_CourseAssignmentType_CourseAssignmentTypeID" FOREIGN KEY ("CourseAssignmentTypeID") REFERENCES "CourseAssignmentType" ("ID"),
    CONSTRAINT "FK_CourseAssignment_CourseCohort_CourseCohortID" FOREIGN KEY ("CourseCohortID") REFERENCES "CourseCohort" ("ID"),
    CONSTRAINT "FK_CourseAssignment_CourseGradingRubric_CourseGradingRubricID" FOREIGN KEY ("CourseGradingRubricID") REFERENCES "CourseGradingRubric" ("ID"),
    CONSTRAINT "FK_CourseAssignment_CourseProblemSet_CourseProblemSetID" FOREIGN KEY ("CourseProblemSetID") REFERENCES "CourseProblemSet" ("ID"),
    CONSTRAINT "FK_CourseAssignment_CourseUnit_CourseUnitID" FOREIGN KEY ("CourseUnitID") REFERENCES "CourseUnit" ("ID"),
    CONSTRAINT "FK_CourseAssignment_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "PayrollEntry" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "CurrencyID" text NULL,
    "BankAccountID" text NULL,
    "SalaryID" text NULL,
    "PayrollID" text NULL,
    CONSTRAINT "PK_PayrollEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PayrollEntry_Account_BankAccountID" FOREIGN KEY ("BankAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_PayrollEntry_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PayrollEntry_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_PayrollEntry_Payroll_PayrollID" FOREIGN KEY ("PayrollID") REFERENCES "Payroll" ("ID"),
    CONSTRAINT "FK_PayrollEntry_Salary_SalaryID" FOREIGN KEY ("SalaryID") REFERENCES "Salary" ("ID")
);

CREATE TABLE "InvoiceAdjustment" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Priority" integer NOT NULL,
    "Description" text NULL,
    "Code" text NULL,
    "DiscountPercent" double precision NOT NULL,
    "SurchargePercent" double precision NOT NULL,
    "DiscountAmount" double precision NOT NULL,
    "SurchargeAmount" double precision NOT NULL,
    "TotalDiscount" double precision NOT NULL,
    "TotalSurcharge" double precision NOT NULL,
    "Type" integer NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "InvoiceID" text NULL,
    "CurrencyID" text NULL,
    CONSTRAINT "PK_InvoiceAdjustment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_InvoiceAdjustment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_InvoiceAdjustment_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_InvoiceAdjustment_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_InvoiceAdjustment_Invoice_InvoiceID" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice" ("ID")
);

CREATE TABLE "InvoiceReference" (
    "ID" text NOT NULL,
    "ReferralInvoiceID" text NULL,
    "ReferencedInvoiceID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_InvoiceReference" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_InvoiceReference_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_InvoiceReference_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_InvoiceReference_Invoice_ReferencedInvoiceID" FOREIGN KEY ("ReferencedInvoiceID") REFERENCES "Invoice" ("ID"),
    CONSTRAINT "FK_InvoiceReference_Invoice_ReferralInvoiceID" FOREIGN KEY ("ReferralInvoiceID") REFERENCES "Invoice" ("ID")
);

CREATE TABLE "InvoiceRelation" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "InvoiceID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Type" text NOT NULL,
    "ProjectID" text NULL,
    CONSTRAINT "PK_InvoiceRelation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_InvoiceRelation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_InvoiceRelation_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_InvoiceRelation_Invoice_InvoiceID" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice" ("ID"),
    CONSTRAINT "FK_InvoiceRelation_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID")
);

CREATE TABLE "ItemPackingSlipEntry" (
    "ID" text NOT NULL,
    "Quantity" text NULL,
    "ItemID" text NULL,
    "BusinessID" text NULL,
    "ItemPackingSlipID" text NULL,
    CONSTRAINT "PK_ItemPackingSlipEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemPackingSlipEntry_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemPackingSlipEntry_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemPackingSlipEntry_ItemPackingSlip_ItemPackingSlipID" FOREIGN KEY ("ItemPackingSlipID") REFERENCES "ItemPackingSlip" ("ID")
);

CREATE TABLE "ItemPickListEntry" (
    "ID" text NOT NULL,
    "Quantity" double precision NOT NULL,
    "ItemID" text NULL,
    "WarehouseID" text NULL,
    "ItemPickListID" text NULL,
    "OrderItemRecordID" text NULL,
    "BusinessID" text NULL,
    "BillingCouponCartRecordID" text NULL,
    "BillingCouponItemRecordID" text NULL,
    "BillingCouponOrderRecordID" text NULL,
    "DealUnitItemRecordID" text NULL,
    "InvoiceItemRecordID" text NULL,
    "QuoteItemRecordID" text NULL,
    CONSTRAINT "PK_ItemPickListEntry" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_BillingCouponCartRecord~" FOREIGN KEY ("BillingCouponCartRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_BillingCouponItemRecord~" FOREIGN KEY ("BillingCouponItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_BillingCouponOrderRecor~" FOREIGN KEY ("BillingCouponOrderRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_DealUnitItemRecordID" FOREIGN KEY ("DealUnitItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_InvoiceItemRecordID" FOREIGN KEY ("InvoiceItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_OrderItemRecordID" FOREIGN KEY ("OrderItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_BillingItemRecord_QuoteItemRecordID" FOREIGN KEY ("QuoteItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_ItemPickList_ItemPickListID" FOREIGN KEY ("ItemPickListID") REFERENCES "ItemPickList" ("ID"),
    CONSTRAINT "FK_ItemPickListEntry_Location_WarehouseID" FOREIGN KEY ("WarehouseID") REFERENCES "Location" ("ID")
);

CREATE TABLE "ShippingLabel" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ExpectedDelivery" timestamp with time zone NOT NULL,
    "TrackingCode" text NULL,
    "LocationID" text NULL,
    "BusinessID" text NULL,
    "ShipmentID" text NULL,
    "ShippingCourierID" text NULL,
    CONSTRAINT "PK_ShippingLabel" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingLabel_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingLabel_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_ShippingLabel_Shipment_ShipmentID" FOREIGN KEY ("ShipmentID") REFERENCES "Shipment" ("ID"),
    CONSTRAINT "FK_ShippingLabel_ShippingCourier_ShippingCourierID" FOREIGN KEY ("ShippingCourierID") REFERENCES "ShippingCourier" ("ID")
);

CREATE TABLE "LicenseAssignment" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "LicenseID" text NULL,
    "LicensingProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_LicenseAssignment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_LicenseAssignment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_LicenseAssignment_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_LicenseAssignment_ContactProfile_LicensingProfileID" FOREIGN KEY ("LicensingProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_LicenseAssignment_Entitlement_LicenseID" FOREIGN KEY ("LicenseID") REFERENCES "Entitlement" ("ID")
);

CREATE TABLE "Payment" (
    "ID" text NOT NULL,
    "Closed" boolean NOT NULL,
    "Test" boolean NOT NULL,
    "Type" text NOT NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "Response" text NULL,
    "Authorization" text NULL,
    "ReferenceCode" text NULL,
    "CorrelationCode" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "OnBehalfOf" integer NOT NULL,
    "PaymentType" integer NOT NULL,
    "PaymentStatus" integer NOT NULL,
    "ForexRate" numeric NOT NULL,
    "BaseCost" numeric NOT NULL,
    "TotalCost" numeric NOT NULL,
    "TotalTaxes" numeric NOT NULL,
    "Signature" text NULL,
    "SignatureMismatch" boolean NOT NULL,
    "IsExternal" boolean NOT NULL,
    "MarkedForRevision" boolean NOT NULL,
    "ForexRatesSnapshot" text NULL,
    "OfficialID" text NULL,
    "OfficialIDExpeditionDate" timestamp with time zone NOT NULL,
    "FiscalIdentificationTypeID" text NULL,
    "BillingAddress" text NULL,
    "Phone" text NULL,
    "Cellphone" text NULL,
    "Department" text NULL,
    "City" text NULL,
    "CountryID" text NULL,
    "LocationID" text NULL,
    "EntitlementID" text NULL,
    "AntiFraudScore" numeric NOT NULL,
    "CallRecord" bytea NULL,
    "CallRecordURL" text NULL,
    "Called" boolean NOT NULL,
    "Verified" boolean NOT NULL,
    "PayerPictureTimestamp" text NULL,
    "PayerPicture" text NULL,
    "IdentificationPictureTimestamp" text NULL,
    "IdentificationPicture" text NULL,
    "IdentificationBackPicture" text NULL,
    "IdentificationBackPictureTimestamp" text NULL,
    "IPLookupID" text NULL,
    "CurrencyID" text NULL,
    "InvoiceID" text NULL,
    "OrderID" text NULL,
    "AccountingEntryID" text NULL,
    "PaymentGatewayID" text NULL,
    "BankAccountID" text NULL,
    "BusinessID" text NULL,
    "PayerBusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AccountHolderID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "BankID" text NULL,
    "PaymentTokenID" text NULL,
    "EmmisorWalletAccountID" text NULL,
    "ReceptorWalletAccountID" text NULL,
    CONSTRAINT "PK_Payment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Payment_Account_BankAccountID" FOREIGN KEY ("BankAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_Payment_AccountingEntry_AccountingEntryID" FOREIGN KEY ("AccountingEntryID") REFERENCES "AccountingEntry" ("ID"),
    CONSTRAINT "FK_Payment_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Payment_Bank_BankID" FOREIGN KEY ("BankID") REFERENCES "Bank" ("ID"),
    CONSTRAINT "FK_Payment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Payment_Business_PayerBusinessID" FOREIGN KEY ("PayerBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Payment_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Payment_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Payment_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Payment_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_Payment_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Payment_Entitlement_EntitlementID" FOREIGN KEY ("EntitlementID") REFERENCES "Entitlement" ("ID"),
    CONSTRAINT "FK_Payment_FiscalIdentificationType_FiscalIdentificationTypeID" FOREIGN KEY ("FiscalIdentificationTypeID") REFERENCES "FiscalIdentificationType" ("ID"),
    CONSTRAINT "FK_Payment_Invoice_InvoiceID" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice" ("ID"),
    CONSTRAINT "FK_Payment_IPLookup_IPLookupID" FOREIGN KEY ("IPLookupID") REFERENCES "IPLookup" ("ID"),
    CONSTRAINT "FK_Payment_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID"),
    CONSTRAINT "FK_Payment_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_Payment_PaymentGateway_PaymentGatewayID" FOREIGN KEY ("PaymentGatewayID") REFERENCES "PaymentGateway" ("ID"),
    CONSTRAINT "FK_Payment_PaymentToken_PaymentTokenID" FOREIGN KEY ("PaymentTokenID") REFERENCES "PaymentToken" ("ID"),
    CONSTRAINT "FK_Payment_WalletAccount_EmmisorWalletAccountID" FOREIGN KEY ("EmmisorWalletAccountID") REFERENCES "WalletAccount" ("ID"),
    CONSTRAINT "FK_Payment_WalletAccount_ReceptorWalletAccountID" FOREIGN KEY ("ReceptorWalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "ServiceCase" (
    "ID" text NOT NULL,
    "Taxable" boolean NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Instructions" text NULL,
    "TerritoryID" text NULL,
    "PriceListID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "PromisedEndDate" timestamp with time zone NOT NULL,
    "PromisedStartDate" timestamp with time zone NOT NULL,
    "WorkLocation" integer NOT NULL,
    "AccountHolderID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "ReceptorBusinessID" text NULL,
    "CurrencyID" text NULL,
    "ServiceID" text NULL,
    "ServiceQueueID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ServiceLevelAgreementID" text NULL,
    "ServiceCaseTypeID" text NULL,
    "Discriminator" text NOT NULL,
    "ProductionPlanID" text NULL,
    "WorkOrderTypeID" text NULL,
    "WorkstationID" text NULL,
    CONSTRAINT "PK_ServiceCase" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServiceCase_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ServiceCase_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceCase_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceCase_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ServiceCase_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_ServiceCase_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_ServiceCase_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_ServiceCase_Entitlement_ServiceLevelAgreementID" FOREIGN KEY ("ServiceLevelAgreementID") REFERENCES "Entitlement" ("ID"),
    CONSTRAINT "FK_ServiceCase_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ServiceCase_PriceList_PriceListID" FOREIGN KEY ("PriceListID") REFERENCES "PriceList" ("ID"),
    CONSTRAINT "FK_ServiceCase_ProductionPlan_ProductionPlanID" FOREIGN KEY ("ProductionPlanID") REFERENCES "ProductionPlan" ("ID"),
    CONSTRAINT "FK_ServiceCase_ServiceCaseType_ServiceCaseTypeID" FOREIGN KEY ("ServiceCaseTypeID") REFERENCES "ServiceCaseType" ("ID"),
    CONSTRAINT "FK_ServiceCase_ServiceQueue_ServiceQueueID" FOREIGN KEY ("ServiceQueueID") REFERENCES "ServiceQueue" ("ID"),
    CONSTRAINT "FK_ServiceCase_Territory_TerritoryID" FOREIGN KEY ("TerritoryID") REFERENCES "Territory" ("ID"),
    CONSTRAINT "FK_ServiceCase_WorkOrderType_WorkOrderTypeID" FOREIGN KEY ("WorkOrderTypeID") REFERENCES "WorkOrderType" ("ID"),
    CONSTRAINT "FK_ServiceCase_Workstation_WorkstationID" FOREIGN KEY ("WorkstationID") REFERENCES "Workstation" ("ID")
);

CREATE TABLE "SupportPriority" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "SupportEntitlementID" text NULL,
    CONSTRAINT "PK_SupportPriority" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SupportPriority_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SupportPriority_Entitlement_SupportEntitlementID" FOREIGN KEY ("SupportEntitlementID") REFERENCES "Entitlement" ("ID")
);

CREATE TABLE "CourseAssignmentSubmit" (
    "ID" text NOT NULL,
    "Content" text NULL,
    "Result" text NULL,
    "Score" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "CourseAssignmentID" text NULL,
    "GradingCriteriaCategoryID" text NULL,
    "InstructorProfileID" text NULL,
    "CourseID" text NULL,
    "StudentProfileID" text NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_CourseAssignmentSubmit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseAssignmentSubmit_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseAssignmentSubmit_ContactProfile_InstructorProfileID" FOREIGN KEY ("InstructorProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CourseAssignmentSubmit_ContactProfile_StudentProfileID" FOREIGN KEY ("StudentProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CourseAssignmentSubmit_CourseAssignment_CourseAssignmentID" FOREIGN KEY ("CourseAssignmentID") REFERENCES "CourseAssignment" ("ID"),
    CONSTRAINT "FK_CourseAssignmentSubmit_CourseGradingCriteriaCategory_Gradin~" FOREIGN KEY ("GradingCriteriaCategoryID") REFERENCES "CourseGradingCriteriaCategory" ("ID"),
    CONSTRAINT "FK_CourseAssignmentSubmit_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID")
);

CREATE TABLE "WebContent" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Order" integer NOT NULL,
    "Slug" text NULL,
    "Name" text NULL,
    "Title" text NULL,
    "Excerpt" text NULL,
    "Password" text NULL,
    "Description" text NULL,
    "HighlightImage" text NULL,
    "CanonicalUrl" text NULL,
    "SeoTitle" text NULL,
    "SeoKeyWords" text NULL,
    "SeoKeyPhrases" text NULL,
    "MetaDescription" text NULL,
    "TwitterImage" text NULL,
    "TwitterTitle" text NULL,
    "TwitterDescription" text NULL,
    "FacebookImage" text NULL,
    "FacebookTitle" text NULL,
    "FacebookDescription" text NULL,
    "FeaturedImageURL" text NULL,
    "Content" text NULL,
    "Code" text NULL,
    "Namespace" text NULL,
    "TypeName" text NULL,
    "GeneratedCode" text NULL,
    "CompiledCode" bytea NULL,
    "CompilationPath" text NULL,
    "CodeType" integer NULL,
    "HTMLContent" text NULL,
    "CSharpContent" text NULL,
    "RazorContent" text NULL,
    "CSSContent" text NULL,
    "JSContent" text NULL,
    "CSSFiles" text NULL,
    "JSFiles" text NULL,
    "RazorGeneratedCode" text NULL,
    "CSharpGeneratedCode" text NULL,
    "PrecompiledView" bytea NULL,
    "PrecompiledLogic" bytea NULL,
    "PrecompiledLogicSize" integer NOT NULL,
    "PrecompiledLogicSizeLong" bigint NOT NULL,
    "PrecompiledViewSize" integer NOT NULL,
    "PrecompiledViewSizeLong" bigint NOT NULL,
    "PrecompiledLogicViewSize" integer NOT NULL,
    "Template" boolean NOT NULL,
    "Default" boolean NOT NULL,
    "Enable" boolean NOT NULL,
    "EnableComments" boolean NOT NULL,
    "DisplaySocialBox" boolean NOT NULL,
    "Published" boolean NOT NULL,
    "InTrashCan" boolean NOT NULL,
    "SystemLocked" boolean NOT NULL,
    "AllowPingbacks" boolean NOT NULL,
    "AllowTrackbacks" boolean NOT NULL,
    "CornerstoneContent" boolean NOT NULL,
    "IsEssentialContent" boolean NOT NULL,
    "AllowSearchEngineIndexing" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ReleaseDateTime" timestamp with time zone NOT NULL,
    "LastModification" timestamp with time zone NOT NULL,
    "TrashedTimestamp" timestamp with time zone NOT NULL,
    "DeletionTimestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "WebPortalID" text NULL,
    "WebsiteThemeID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SocialProfileID" text NULL,
    "ParentWebContentID" text NULL,
    "ParentWebContentVersionID" text NULL,
    "CourseAssignmentID" text NULL,
    "CourseAssignmentComponent_CourseID" text NULL,
    "Form" text NULL,
    "WebForum_WebTemplateID" text NULL,
    "WebForumCategoryID" text NULL,
    "CourseForum_CourseID" text NULL,
    "WebPage_WebTemplateID" text NULL,
    "IsHomePage" boolean NULL,
    "IsStorePage" boolean NULL,
    "IsCartPage" boolean NULL,
    "IsBlogPage" boolean NULL,
    "IsAccountPage" boolean NULL,
    "IsCheckoutPage" boolean NULL,
    "IsWishListsPage" boolean NULL,
    "IsContactPage" boolean NULL,
    "IsPrivacyPolicyPage" boolean NULL,
    "IsTermsOfServicePage" boolean NULL,
    "WebPageVisibility" integer NULL,
    "WebPage_WebFormID" text NULL,
    "BlogPostCategoryID" text NULL,
    "WebTemplateID" text NULL,
    "WebFormID" text NULL,
    "CourseWikiID" text NULL,
    "CourseID" text NULL,
    "CourseCompletionCertificateTemplate_CourseID" text NULL,
    "CourseUnitID" text NULL,
    "CourseUnitComponent_CourseID" text NULL,
    "CoursePage_CourseID" text NULL,
    "CourseUpdate_CourseID" text NULL,
    "MarketingCampaignID" text NULL,
    "NewsletterID" text NULL,
    CONSTRAINT "PK_WebContent" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebContent_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_WebContent_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_WebContent_CourseAssignment_CourseAssignmentID" FOREIGN KEY ("CourseAssignmentID") REFERENCES "CourseAssignment" ("ID"),
    CONSTRAINT "FK_WebContent_CourseUnit_CourseUnitID" FOREIGN KEY ("CourseUnitID") REFERENCES "CourseUnit" ("ID"),
    CONSTRAINT "FK_WebContent_CourseWiki_CourseWikiID" FOREIGN KEY ("CourseWikiID") REFERENCES "CourseWiki" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CourseAssignmentComponent_CourseID" FOREIGN KEY ("CourseAssignmentComponent_CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CourseCompletionCertificateTemplate_CourseID" FOREIGN KEY ("CourseCompletionCertificateTemplate_CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CourseForum_CourseID" FOREIGN KEY ("CourseForum_CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CoursePage_CourseID" FOREIGN KEY ("CoursePage_CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CourseUnitComponent_CourseID" FOREIGN KEY ("CourseUnitComponent_CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_Item_CourseUpdate_CourseID" FOREIGN KEY ("CourseUpdate_CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_WebContent_MarketingCampaign_MarketingCampaignID" FOREIGN KEY ("MarketingCampaignID") REFERENCES "MarketingCampaign" ("ID"),
    CONSTRAINT "FK_WebContent_Newsletter_NewsletterID" FOREIGN KEY ("NewsletterID") REFERENCES "Newsletter" ("ID"),
    CONSTRAINT "FK_WebContent_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_WebContent_Taxonomy_BlogPostCategoryID" FOREIGN KEY ("BlogPostCategoryID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_WebContent_Taxonomy_WebForumCategoryID" FOREIGN KEY ("WebForumCategoryID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_ParentWebContentID" FOREIGN KEY ("ParentWebContentID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_ParentWebContentVersionID" FOREIGN KEY ("ParentWebContentVersionID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_WebFormID" FOREIGN KEY ("WebFormID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_WebForum_WebTemplateID" FOREIGN KEY ("WebForum_WebTemplateID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_WebPage_WebFormID" FOREIGN KEY ("WebPage_WebFormID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_WebPage_WebTemplateID" FOREIGN KEY ("WebPage_WebTemplateID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebContent_WebTemplateID" FOREIGN KEY ("WebTemplateID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_WebContent_WebPortal_WebPortalID" FOREIGN KEY ("WebPortalID") REFERENCES "WebPortal" ("ID"),
    CONSTRAINT "FK_WebContent_WebsiteTheme_WebsiteThemeID" FOREIGN KEY ("WebsiteThemeID") REFERENCES "WebsiteTheme" ("ID")
);

CREATE TABLE "ShippingPackage" (
    "ID" text NOT NULL,
    "Code" text NULL,
    "Name" text NULL,
    "Width" double precision NOT NULL,
    "Length" double precision NOT NULL,
    "Height" double precision NOT NULL,
    "EmptyWeight" double precision NOT NULL,
    "ServicePackage" boolean NOT NULL,
    "ShippingCourierID" text NULL,
    "ShippingLabelID" text NULL,
    "SpatialUnit" integer NOT NULL,
    "BusinessID" text NULL,
    CONSTRAINT "PK_ShippingPackage" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ShippingPackage_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ShippingPackage_ShippingCourier_ShippingCourierID" FOREIGN KEY ("ShippingCourierID") REFERENCES "ShippingCourier" ("ID"),
    CONSTRAINT "FK_ShippingPackage_ShippingLabel_ShippingLabelID" FOREIGN KEY ("ShippingLabelID") REFERENCES "ShippingLabel" ("ID")
);

CREATE TABLE "PaymentDeduction" (
    "ID" text NOT NULL,
    "Amount" double precision NOT NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "PaymentID" text NULL,
    "AccountID" text NULL,
    "CostCentreID" text NULL,
    CONSTRAINT "PK_PaymentDeduction" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentDeduction_Account_AccountID" FOREIGN KEY ("AccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_PaymentDeduction_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_PaymentDeduction_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_PaymentDeduction_CostCentre_CostCentreID" FOREIGN KEY ("CostCentreID") REFERENCES "CostCentre" ("ID"),
    CONSTRAINT "FK_PaymentDeduction_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_PaymentDeduction_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID")
);

CREATE TABLE "PaymentDispute" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Closed" boolean NOT NULL,
    "DisputedAmount" numeric NOT NULL,
    "CurrencyID" text NULL,
    "PaymentID" text NULL,
    "PaymentGatewayID" text NULL,
    "EmmisorWalletAccountID" text NULL,
    "ReceptorWalletAccountID" text NULL,
    CONSTRAINT "PK_PaymentDispute" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PaymentDispute_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_PaymentDispute_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID"),
    CONSTRAINT "FK_PaymentDispute_PaymentGateway_PaymentGatewayID" FOREIGN KEY ("PaymentGatewayID") REFERENCES "PaymentGateway" ("ID"),
    CONSTRAINT "FK_PaymentDispute_WalletAccount_EmmisorWalletAccountID" FOREIGN KEY ("EmmisorWalletAccountID") REFERENCES "WalletAccount" ("ID"),
    CONSTRAINT "FK_PaymentDispute_WalletAccount_ReceptorWalletAccountID" FOREIGN KEY ("ReceptorWalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "Receipt" (
    "ID" text NOT NULL,
    "Closed" boolean NOT NULL,
    "AccountHolderID" text NULL,
    "ContactID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ReceiptType" integer NOT NULL,
    "OrderID" text NULL,
    "InvoiceID" text NULL,
    "PaymentID" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_Receipt" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Receipt_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Receipt_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Receipt_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Receipt_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Receipt_Invoice_InvoiceID" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice" ("ID"),
    CONSTRAINT "FK_Receipt_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_Receipt_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID")
);

CREATE TABLE "SupportRequest" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Approved" boolean NOT NULL,
    "ApprovedTimestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SupportEntitlementID" text NULL,
    "ContactID" text NULL,
    "AccountHolderID" text NULL,
    "Discriminator" text NOT NULL,
    "RefundPolicyID" text NULL,
    "PaymentID" text NULL,
    "ReturnPolicyID" text NULL,
    "WarrantyPolicyID" text NULL,
    CONSTRAINT "PK_SupportRequest" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SupportRequest_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_SupportRequest_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SupportRequest_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SupportRequest_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_SupportRequest_Entitlement_SupportEntitlementID" FOREIGN KEY ("SupportEntitlementID") REFERENCES "Entitlement" ("ID"),
    CONSTRAINT "FK_SupportRequest_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID"),
    CONSTRAINT "FK_SupportRequest_Policy_RefundPolicyID" FOREIGN KEY ("RefundPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_SupportRequest_Policy_ReturnPolicyID" FOREIGN KEY ("ReturnPolicyID") REFERENCES "Policy" ("ID"),
    CONSTRAINT "FK_SupportRequest_Policy_WarrantyPolicyID" FOREIGN KEY ("WarrantyPolicyID") REFERENCES "Policy" ("ID")
);

CREATE TABLE "ServiceFulfillmentPreferences" (
    "ID" text NOT NULL,
    "Name" text NULL,
    "Details" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ServiceCaseID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_ServiceFulfillmentPreferences" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServiceFulfillmentPreferences_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceFulfillmentPreferences_BusinessProfileRecord_Busines~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ServiceFulfillmentPreferences_ServiceCase_ServiceCaseID" FOREIGN KEY ("ServiceCaseID") REFERENCES "ServiceCase" ("ID")
);

CREATE TABLE "ServicePersonnelRecord" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "EmployeeProfileID" text NULL,
    "ServiceCaseID" text NULL,
    "ServiceID" text NULL,
    CONSTRAINT "PK_ServicePersonnelRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServicePersonnelRecord_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_ServicePersonnelRecord_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ServicePersonnelRecord_ServiceCase_ServiceCaseID" FOREIGN KEY ("ServiceCaseID") REFERENCES "ServiceCase" ("ID")
);

CREATE TABLE "Task" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Instructions" text NULL,
    "DueDate" timestamp with time zone NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Data" text NULL,
    "DataLabel" text NULL,
    "Data1" text NULL,
    "Data1Label" text NULL,
    "Data2" text NULL,
    "Data2Label" text NULL,
    "Data3" text NULL,
    "Data3Label" text NULL,
    "Data4" text NULL,
    "Data4Label" text NULL,
    "Data5" text NULL,
    "Data5Label" text NULL,
    "Data6" text NULL,
    "Data6Label" text NULL,
    "Data7" text NULL,
    "Data7Label" text NULL,
    "Data8" text NULL,
    "Data8Label" text NULL,
    "Data9" text NULL,
    "Data9Label" text NULL,
    "IsTemplate" boolean NOT NULL,
    "Completed" boolean NOT NULL,
    "CompletedTimestamp" timestamp with time zone NOT NULL,
    "CompletionPercentage" integer NOT NULL,
    "SocialProfileID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "TaskListID" text NULL,
    "PriorityID" text NULL,
    "Discriminator" text NOT NULL,
    "StartDate" timestamp with time zone NULL,
    "DueLine" timestamp with time zone NULL,
    "ProjectID" text NULL,
    "ProjectTaskBucketID" text NULL,
    "ServiceCaseID" text NULL,
    "ServiceID" text NULL,
    CONSTRAINT "PK_Task" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Task_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Task_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Task_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Task_Priority_PriorityID" FOREIGN KEY ("PriorityID") REFERENCES "Priority" ("ID"),
    CONSTRAINT "FK_Task_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID"),
    CONSTRAINT "FK_Task_ProjectTaskBucket_ProjectTaskBucketID" FOREIGN KEY ("ProjectTaskBucketID") REFERENCES "ProjectTaskBucket" ("ID"),
    CONSTRAINT "FK_Task_ServiceCase_ServiceCaseID" FOREIGN KEY ("ServiceCaseID") REFERENCES "ServiceCase" ("ID"),
    CONSTRAINT "FK_Task_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_Task_TaskList_TaskListID" FOREIGN KEY ("TaskListID") REFERENCES "TaskList" ("ID")
);

CREATE TABLE "CourseCompletionCertificate" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "StudentProfileID" text NULL,
    "CourseEnrollmentID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "CourseCompletionCertificateTemplateID" text NULL,
    "CourseID" text NULL,
    CONSTRAINT "PK_CourseCompletionCertificate" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_CourseCompletionCertificate_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_CourseCompletionCertificate_BusinessProfileRecord_BusinessP~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_CourseCompletionCertificate_ContactProfile_StudentProfileID" FOREIGN KEY ("StudentProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_CourseCompletionCertificate_CourseEnrollment_CourseEnrollme~" FOREIGN KEY ("CourseEnrollmentID") REFERENCES "CourseEnrollment" ("ID"),
    CONSTRAINT "FK_CourseCompletionCertificate_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_CourseCompletionCertificate_WebContent_CourseCompletionCert~" FOREIGN KEY ("CourseCompletionCertificateTemplateID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "EmailRecord" (
    "ID" text NOT NULL,
    "SendedTimestamp" timestamp with time zone NOT NULL,
    "ReadedTimestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "ReceptorBusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "IndividualID" text NULL,
    "OrganizationID" text NULL,
    "AccountHolderID" text NULL,
    "Readed" boolean NOT NULL,
    "Email" text NULL,
    "Content" text NULL,
    "MarketingCampaignID" text NULL,
    "EmailTemplateID" text NULL,
    "EmailSignatureID" text NULL,
    CONSTRAINT "PK_EmailRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_EmailRecord_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_EmailRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmailRecord_Business_ReceptorBusinessID" FOREIGN KEY ("ReceptorBusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_EmailRecord_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_EmailRecord_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_EmailRecord_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_EmailRecord_MarketingCampaign_MarketingCampaignID" FOREIGN KEY ("MarketingCampaignID") REFERENCES "MarketingCampaign" ("ID"),
    CONSTRAINT "FK_EmailRecord_WebContent_EmailSignatureID" FOREIGN KEY ("EmailSignatureID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_EmailRecord_WebContent_EmailTemplateID" FOREIGN KEY ("EmailTemplateID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "Review" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ReviewScore" double precision NOT NULL,
    "ReviewMessage" text NOT NULL,
    "SocialProfileID" text NULL,
    "Discriminator" text NOT NULL,
    "SupplierProfileID" text NULL,
    "BlogPostID" text NULL,
    "BusinessID" text NULL,
    "ContactID" text NULL,
    "ItemID" text NULL,
    "TrainingProgramReview_BusinessID" text NULL,
    "TrainingProgramID" text NULL,
    CONSTRAINT "PK_Review" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Review_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Review_Business_TrainingProgramReview_BusinessID" FOREIGN KEY ("TrainingProgramReview_BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Review_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Review_ContactProfile_SupplierProfileID" FOREIGN KEY ("SupplierProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Review_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_Review_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_Review_TrainingProgram_TrainingProgramID" FOREIGN KEY ("TrainingProgramID") REFERENCES "TrainingProgram" ("ID"),
    CONSTRAINT "FK_Review_WebContent_BlogPostID" FOREIGN KEY ("BlogPostID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "SocialPost" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Message" text NULL,
    "SocialProfileID" text NULL,
    "Discriminator" text NOT NULL,
    "BlogPostID" text NULL,
    "SocialFeedID" text NULL,
    "WebForumID" text NULL,
    "SocialGroupID" text NULL,
    "WebPageID" text NULL,
    CONSTRAINT "PK_SocialPost" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialPost_SocialFeed_SocialFeedID" FOREIGN KEY ("SocialFeedID") REFERENCES "SocialFeed" ("ID"),
    CONSTRAINT "FK_SocialPost_SocialGroup_SocialGroupID" FOREIGN KEY ("SocialGroupID") REFERENCES "SocialGroup" ("ID"),
    CONSTRAINT "FK_SocialPost_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_SocialPost_WebContent_BlogPostID" FOREIGN KEY ("BlogPostID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_SocialPost_WebContent_WebForumID" FOREIGN KEY ("WebForumID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_SocialPost_WebContent_WebPageID" FOREIGN KEY ("WebPageID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "WebFormSubmit" (
    "ID" text NOT NULL,
    "Body" text NULL,
    "WebFormID" text NULL,
    CONSTRAINT "PK_WebFormSubmit" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_WebFormSubmit_WebContent_WebFormID" FOREIGN KEY ("WebFormID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "InquiryRequest" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Name" text NULL,
    "LastName" text NULL,
    "Email" text NULL,
    "OrganizationName" text NULL,
    "JobRole" text NULL,
    "OrganizationDomain" text NULL,
    "CountryID" text NULL,
    "Phone" text NULL,
    "Message" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AccountHolderID" text NULL,
    "SocialProfileID" text NULL,
    "PaymentDisputeID" text NULL,
    "WalletAccountID" text NULL,
    "BusinessTeamID" text NULL,
    "BusinessUnitID" text NULL,
    CONSTRAINT "PK_InquiryRequest" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_InquiryRequest_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_InquiryRequest_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_InquiryRequest_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_InquiryRequest_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID"),
    CONSTRAINT "FK_InquiryRequest_BusinessUnit_BusinessUnitID" FOREIGN KEY ("BusinessUnitID") REFERENCES "BusinessUnit" ("ID"),
    CONSTRAINT "FK_InquiryRequest_Country_CountryID" FOREIGN KEY ("CountryID") REFERENCES "Country" ("ID"),
    CONSTRAINT "FK_InquiryRequest_PaymentDispute_PaymentDisputeID" FOREIGN KEY ("PaymentDisputeID") REFERENCES "PaymentDispute" ("ID"),
    CONSTRAINT "FK_InquiryRequest_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_InquiryRequest_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID")
);

CREATE TABLE "OrderReturn" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Arrived" boolean NOT NULL,
    "Verified" boolean NOT NULL,
    "Approved" boolean NOT NULL,
    "ApprovedTimestamp" timestamp with time zone NOT NULL,
    "OrderID" text NULL,
    "ReturnRequestID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    CONSTRAINT "PK_OrderReturn" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_OrderReturn_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_OrderReturn_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_OrderReturn_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_OrderReturn_SupportRequest_ReturnRequestID" FOREIGN KEY ("ReturnRequestID") REFERENCES "SupportRequest" ("ID")
);

CREATE TABLE "OrderWarranty" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ApprovedTimestamp" timestamp with time zone NOT NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "WarrantyRequestID" text NULL,
    CONSTRAINT "PK_OrderWarranty" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_OrderWarranty_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_OrderWarranty_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_OrderWarranty_SupportRequest_WarrantyRequestID" FOREIGN KEY ("WarrantyRequestID") REFERENCES "SupportRequest" ("ID")
);

CREATE TABLE "SupportTicket" (
    "ID" text NOT NULL,
    "Title" text NULL,
    "Description" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "SupportTicketStatus" integer NOT NULL,
    "AccountHolderID" text NULL,
    "ContactID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "SupportTicketTypeID" text NULL,
    "SupportEntitlementID" text NULL,
    "SupportPriorityID" text NULL,
    "SupportRequestID" text NULL,
    CONSTRAINT "PK_SupportTicket" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SupportTicket_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_SupportTicket_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_SupportTicket_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_SupportTicket_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_SupportTicket_Entitlement_SupportEntitlementID" FOREIGN KEY ("SupportEntitlementID") REFERENCES "Entitlement" ("ID"),
    CONSTRAINT "FK_SupportTicket_SupportPriority_SupportPriorityID" FOREIGN KEY ("SupportPriorityID") REFERENCES "SupportPriority" ("ID"),
    CONSTRAINT "FK_SupportTicket_SupportRequest_SupportRequestID" FOREIGN KEY ("SupportRequestID") REFERENCES "SupportRequest" ("ID"),
    CONSTRAINT "FK_SupportTicket_SupportTicketType_SupportTicketTypeID" FOREIGN KEY ("SupportTicketTypeID") REFERENCES "SupportTicketType" ("ID")
);

CREATE TABLE "ServiceFulfillment" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Accepted" boolean NOT NULL,
    "Remarks" text NULL,
    "ServiceID" text NULL,
    "ServiceCaseID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ServiceFulfillmentPreferencesID" text NULL,
    CONSTRAINT "PK_ServiceFulfillment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ServiceFulfillment_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_ServiceFulfillment_BusinessProfileRecord_BusinessProfileRec~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_ServiceFulfillment_Item_ServiceID" FOREIGN KEY ("ServiceID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_ServiceFulfillment_ServiceCase_ServiceCaseID" FOREIGN KEY ("ServiceCaseID") REFERENCES "ServiceCase" ("ID"),
    CONSTRAINT "FK_ServiceFulfillment_ServiceFulfillmentPreferences_ServiceFul~" FOREIGN KEY ("ServiceFulfillmentPreferencesID") REFERENCES "ServiceFulfillmentPreferences" ("ID")
);

CREATE TABLE "ProjectTaskRelationship" (
    "ID" text NOT NULL,
    "IsDependenceRelation" boolean NOT NULL,
    "ParentTaskID" text NULL,
    "ParentProjectTaskID" text NULL,
    "ChildProjectTaskID" text NULL,
    CONSTRAINT "PK_ProjectTaskRelationship" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ProjectTaskRelationship_Task_ChildProjectTaskID" FOREIGN KEY ("ChildProjectTaskID") REFERENCES "Task" ("ID"),
    CONSTRAINT "FK_ProjectTaskRelationship_Task_ParentProjectTaskID" FOREIGN KEY ("ParentProjectTaskID") REFERENCES "Task" ("ID")
);

CREATE TABLE "TaskAssignment" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Instructions" text NULL,
    "TaskID" text NULL,
    "SocialProfileID" text NULL,
    "TaskListID" text NULL,
    CONSTRAINT "PK_TaskAssignment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TaskAssignment_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_TaskAssignment_Task_TaskID" FOREIGN KEY ("TaskID") REFERENCES "Task" ("ID"),
    CONSTRAINT "FK_TaskAssignment_TaskList_TaskListID" FOREIGN KEY ("TaskListID") REFERENCES "TaskList" ("ID")
);

CREATE TABLE "Transaction" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Description" text NULL,
    "Price" double precision NOT NULL,
    "Quantity" double precision NOT NULL,
    "ExternalDescription" text NULL,
    "BasisQuantity" double precision NOT NULL,
    "BasisAmount" double precision NOT NULL,
    "Percent" double precision NOT NULL,
    "UnitGroupID" text NULL,
    "UnitID" text NULL,
    "TransactionCategoryID" text NULL,
    "CurrencyID" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "Discriminator" text NOT NULL,
    "BankProfileID" text NULL,
    "BankAccountID" text NULL,
    "ProjectResourceID" text NULL,
    "ProjectTaskID" text NULL,
    "ContactID" text NULL,
    "ProjectID" text NULL,
    "ProjectResourceRoleID" text NULL,
    "AccountingDate" timestamp with time zone NULL,
    "DocumentDate" timestamp with time zone NULL,
    "StartDateTime" timestamp with time zone NULL,
    "EndDateTime" timestamp with time zone NULL,
    "BillingType" integer NULL,
    "CustomerType" integer NULL,
    "TransactionType" integer NULL,
    "TransactionClass" integer NULL,
    "AmountMethod" integer NULL,
    "ProjectJournalID" text NULL,
    CONSTRAINT "PK_Transaction" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Transaction_Account_BankAccountID" FOREIGN KEY ("BankAccountID") REFERENCES "Account" ("ID"),
    CONSTRAINT "FK_Transaction_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_Transaction_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_Transaction_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_Transaction_ContactProfile_BankProfileID" FOREIGN KEY ("BankProfileID") REFERENCES "ContactProfile" ("ID"),
    CONSTRAINT "FK_Transaction_Currency_CurrencyID" FOREIGN KEY ("CurrencyID") REFERENCES "Currency" ("ID"),
    CONSTRAINT "FK_Transaction_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID"),
    CONSTRAINT "FK_Transaction_ProjectJournal_ProjectJournalID" FOREIGN KEY ("ProjectJournalID") REFERENCES "ProjectJournal" ("ID"),
    CONSTRAINT "FK_Transaction_ProjectResource_ProjectResourceID" FOREIGN KEY ("ProjectResourceID") REFERENCES "ProjectResource" ("ID"),
    CONSTRAINT "FK_Transaction_ProjectResourceRole_ProjectResourceRoleID" FOREIGN KEY ("ProjectResourceRoleID") REFERENCES "ProjectResourceRole" ("ID"),
    CONSTRAINT "FK_Transaction_Task_ProjectTaskID" FOREIGN KEY ("ProjectTaskID") REFERENCES "Task" ("ID"),
    CONSTRAINT "FK_Transaction_TransactionCategory_TransactionCategoryID" FOREIGN KEY ("TransactionCategoryID") REFERENCES "TransactionCategory" ("ID"),
    CONSTRAINT "FK_Transaction_Unit_UnitID" FOREIGN KEY ("UnitID") REFERENCES "Unit" ("ID"),
    CONSTRAINT "FK_Transaction_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID")
);

CREATE TABLE "SocialComment" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Message" text NULL,
    "OwnerSocialProfileID" text NULL,
    "SocialPostID" text NULL,
    "ParentCommentID" text NULL,
    "Discriminator" text NOT NULL,
    "BlogPostID" text NULL,
    CONSTRAINT "PK_SocialComment" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialComment_SocialComment_ParentCommentID" FOREIGN KEY ("ParentCommentID") REFERENCES "SocialComment" ("ID"),
    CONSTRAINT "FK_SocialComment_SocialPost_SocialPostID" FOREIGN KEY ("SocialPostID") REFERENCES "SocialPost" ("ID"),
    CONSTRAINT "FK_SocialComment_SocialProfile_OwnerSocialProfileID" FOREIGN KEY ("OwnerSocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_SocialComment_WebContent_BlogPostID" FOREIGN KEY ("BlogPostID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "TaxonomyRecord" (
    "ID" text NOT NULL,
    "BusinessID" text NULL,
    "TaxonomyID" text NULL,
    "WebContentID" text NULL,
    "Discriminator" text NOT NULL,
    "SocialForumPostID" text NULL,
    "IsMainCategory" boolean NULL,
    "WebPageCategoryRecord_WebPageID" text NULL,
    "WebPageCategoryID" text NULL,
    "WebPageTagID" text NULL,
    "WebPageID" text NULL,
    "BlogPostCategoryRecord_BlogPostID" text NULL,
    "BlogPostID" text NULL,
    "BlogPostTagID" text NULL,
    "KnowledgeArticleCategoryID" text NULL,
    "KnowledgeArticleID" text NULL,
    CONSTRAINT "PK_TaxonomyRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_SocialPost_SocialForumPostID" FOREIGN KEY ("SocialForumPostID") REFERENCES "SocialPost" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_Taxonomy_BlogPostTagID" FOREIGN KEY ("BlogPostTagID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_Taxonomy_KnowledgeArticleCategoryID" FOREIGN KEY ("KnowledgeArticleCategoryID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_Taxonomy_TaxonomyID" FOREIGN KEY ("TaxonomyID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_Taxonomy_WebPageCategoryID" FOREIGN KEY ("WebPageCategoryID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_Taxonomy_WebPageTagID" FOREIGN KEY ("WebPageTagID") REFERENCES "Taxonomy" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_WebContent_BlogPostCategoryRecord_BlogPostID" FOREIGN KEY ("BlogPostCategoryRecord_BlogPostID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_WebContent_BlogPostID" FOREIGN KEY ("BlogPostID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_WebContent_KnowledgeArticleID" FOREIGN KEY ("KnowledgeArticleID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_WebContent_WebContentID" FOREIGN KEY ("WebContentID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_WebContent_WebPageCategoryRecord_WebPageID" FOREIGN KEY ("WebPageCategoryRecord_WebPageID") REFERENCES "WebContent" ("ID"),
    CONSTRAINT "FK_TaxonomyRecord_WebContent_WebPageID" FOREIGN KEY ("WebPageID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "OrderItemReturn" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Approved" boolean NOT NULL,
    "Reason" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "ReturnRequestID" text NULL,
    "OrderID" text NULL,
    "OrderItemRecordID" text NULL,
    "OrderReturnID" text NULL,
    CONSTRAINT "PK_OrderItemReturn" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_OrderItemReturn_BillingItemRecord_OrderItemRecordID" FOREIGN KEY ("OrderItemRecordID") REFERENCES "BillingItemRecord" ("ID"),
    CONSTRAINT "FK_OrderItemReturn_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_OrderItemReturn_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_OrderItemReturn_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID"),
    CONSTRAINT "FK_OrderItemReturn_OrderReturn_OrderReturnID" FOREIGN KEY ("OrderReturnID") REFERENCES "OrderReturn" ("ID"),
    CONSTRAINT "FK_OrderItemReturn_SupportRequest_ReturnRequestID" FOREIGN KEY ("ReturnRequestID") REFERENCES "SupportRequest" ("ID")
);

CREATE TABLE "OrderItemWarranty" (
    "ID" text NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ApprovedTimestamp" timestamp with time zone NOT NULL,
    "Approved" boolean NOT NULL,
    "Reason" text NULL,
    "BusinessID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "WarrantyRequestID" text NULL,
    "OrderWarrantyID" text NULL,
    CONSTRAINT "PK_OrderItemWarranty" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_OrderItemWarranty_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_OrderItemWarranty_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_OrderItemWarranty_OrderWarranty_WarrantyRequestID" FOREIGN KEY ("WarrantyRequestID") REFERENCES "OrderWarranty" ("ID"),
    CONSTRAINT "FK_OrderItemWarranty_SupportRequest_OrderWarrantyID" FOREIGN KEY ("OrderWarrantyID") REFERENCES "SupportRequest" ("ID")
);

CREATE TABLE "Conversation" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "Topic" text NULL,
    "Closed" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "ClosedTimestamp" timestamp with time zone NOT NULL,
    "SocialProfileID" text NULL,
    "SupportTicketID" text NULL,
    CONSTRAINT "PK_Conversation" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Conversation_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_Conversation_SupportTicket_SupportTicketID" FOREIGN KEY ("SupportTicketID") REFERENCES "SupportTicket" ("ID")
);

CREATE TABLE "SocialReaction" (
    "ID" text NOT NULL,
    "SocialProfileID" text NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Reaction" integer NOT NULL,
    "Discriminator" text NOT NULL,
    "BlogPostID" text NULL,
    "SocialCommentID" text NULL,
    "SocialPostID" text NULL,
    CONSTRAINT "PK_SocialReaction" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_SocialReaction_SocialComment_SocialCommentID" FOREIGN KEY ("SocialCommentID") REFERENCES "SocialComment" ("ID"),
    CONSTRAINT "FK_SocialReaction_SocialPost_SocialPostID" FOREIGN KEY ("SocialPostID") REFERENCES "SocialPost" ("ID"),
    CONSTRAINT "FK_SocialReaction_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_SocialReaction_WebContent_BlogPostID" FOREIGN KEY ("BlogPostID") REFERENCES "WebContent" ("ID")
);

CREATE TABLE "PrivateMessage" (
    "ID" text NOT NULL,
    "SendedTimestamp" timestamp with time zone NOT NULL,
    "ReadedTimestamp" timestamp with time zone NOT NULL,
    "ReceivedTimestamp" timestamp with time zone NOT NULL,
    "Readed" boolean NOT NULL,
    "Message" text NULL,
    "ConversationID" text NULL,
    "SenderID" text NULL,
    "ReceptorID" text NULL,
    CONSTRAINT "PK_PrivateMessage" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_PrivateMessage_Conversation_ConversationID" FOREIGN KEY ("ConversationID") REFERENCES "Conversation" ("ID"),
    CONSTRAINT "FK_PrivateMessage_SocialProfile_ReceptorID" FOREIGN KEY ("ReceptorID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_PrivateMessage_SocialProfile_SenderID" FOREIGN KEY ("SenderID") REFERENCES "SocialProfile" ("ID")
);

CREATE TABLE "FileUpload" (
    "ID" text NOT NULL,
    "Type" text NOT NULL,
    "MD5Hash" text NULL,
    "Metadata" text NULL,
    "FileUploadURL" text NULL,
    "IsFolder" boolean NOT NULL,
    "FileName" text NULL,
    "Title" text NULL,
    "Abstract" text NULL,
    "Author" text NULL,
    "KeyWords" text NULL,
    "Notes" text NULL,
    "ContentType" text NULL,
    "FileLength" bigint NOT NULL,
    "ValidResponse" boolean NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "FileUploadPublicAccessType" integer NOT NULL,
    "BusinessID" text NULL,
    "SocialProfileID" text NULL,
    "ParentFileUploadID" text NULL,
    "AccountHolderID" text NULL,
    "BusinessProfileRecordID" text NULL,
    "AgreementID" text NULL,
    "AgreementRevisionID" text NULL,
    "ContactID" text NULL,
    "CourseAssignmentID" text NULL,
    "CourseID" text NULL,
    "TaskID" text NULL,
    "InquiryRequestID" text NULL,
    "SupportRequestID" text NULL,
    "ItemAttachment_ItemID" text NULL,
    "IsItemMozaicBG" boolean NULL,
    "ItemID" text NULL,
    "SocialMediaPostID" text NULL,
    "SalesLiteratureID" text NULL,
    "SignedDocumentID" text NULL,
    "SocialCommentID" text NULL,
    "CurriculumRecordID" text NULL,
    "PrivateMessageID" text NULL,
    "SocialPostID" text NULL,
    "BusinessTeamID" text NULL,
    CONSTRAINT "PK_FileUpload" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_FileUpload_Agreement_AgreementID" FOREIGN KEY ("AgreementID") REFERENCES "Agreement" ("ID"),
    CONSTRAINT "FK_FileUpload_AgreementRevision_AgreementRevisionID" FOREIGN KEY ("AgreementRevisionID") REFERENCES "AgreementRevision" ("ID"),
    CONSTRAINT "FK_FileUpload_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_FileUpload_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID"),
    CONSTRAINT "FK_FileUpload_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID"),
    CONSTRAINT "FK_FileUpload_BusinessTeam_BusinessTeamID" FOREIGN KEY ("BusinessTeamID") REFERENCES "BusinessTeam" ("ID"),
    CONSTRAINT "FK_FileUpload_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID"),
    CONSTRAINT "FK_FileUpload_CourseAssignment_CourseAssignmentID" FOREIGN KEY ("CourseAssignmentID") REFERENCES "CourseAssignment" ("ID"),
    CONSTRAINT "FK_FileUpload_CurriculumRecord_CurriculumRecordID" FOREIGN KEY ("CurriculumRecordID") REFERENCES "CurriculumRecord" ("ID"),
    CONSTRAINT "FK_FileUpload_FileUpload_ParentFileUploadID" FOREIGN KEY ("ParentFileUploadID") REFERENCES "FileUpload" ("ID"),
    CONSTRAINT "FK_FileUpload_InquiryRequest_InquiryRequestID" FOREIGN KEY ("InquiryRequestID") REFERENCES "InquiryRequest" ("ID"),
    CONSTRAINT "FK_FileUpload_Item_CourseID" FOREIGN KEY ("CourseID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_FileUpload_Item_ItemAttachment_ItemID" FOREIGN KEY ("ItemAttachment_ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_FileUpload_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID"),
    CONSTRAINT "FK_FileUpload_PrivateMessage_PrivateMessageID" FOREIGN KEY ("PrivateMessageID") REFERENCES "PrivateMessage" ("ID"),
    CONSTRAINT "FK_FileUpload_SalesLiterature_SalesLiteratureID" FOREIGN KEY ("SalesLiteratureID") REFERENCES "SalesLiterature" ("ID"),
    CONSTRAINT "FK_FileUpload_SignedDocument_SignedDocumentID" FOREIGN KEY ("SignedDocumentID") REFERENCES "SignedDocument" ("ID"),
    CONSTRAINT "FK_FileUpload_SocialComment_SocialCommentID" FOREIGN KEY ("SocialCommentID") REFERENCES "SocialComment" ("ID"),
    CONSTRAINT "FK_FileUpload_SocialMediaPost_SocialMediaPostID" FOREIGN KEY ("SocialMediaPostID") REFERENCES "SocialMediaPost" ("ID"),
    CONSTRAINT "FK_FileUpload_SocialPost_SocialPostID" FOREIGN KEY ("SocialPostID") REFERENCES "SocialPost" ("ID"),
    CONSTRAINT "FK_FileUpload_SocialProfile_SocialProfileID" FOREIGN KEY ("SocialProfileID") REFERENCES "SocialProfile" ("ID"),
    CONSTRAINT "FK_FileUpload_SupportRequest_SupportRequestID" FOREIGN KEY ("SupportRequestID") REFERENCES "SupportRequest" ("ID"),
    CONSTRAINT "FK_FileUpload_Task_TaskID" FOREIGN KEY ("TaskID") REFERENCES "Task" ("ID")
);

CREATE TABLE "ItemImageRecord" (
    "ID" text NOT NULL,
    "ItemImageID" text NULL,
    "ItemID" text NULL,
    CONSTRAINT "PK_ItemImageRecord" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_ItemImageRecord_FileUpload_ItemImageID" FOREIGN KEY ("ItemImageID") REFERENCES "FileUpload" ("ID"),
    CONSTRAINT "FK_ItemImageRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID")
);

INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Alert', NULL, NULL, 'Alert');
INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Appointment', NULL, NULL, 'Appointment');
INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Email', NULL, NULL, 'Email');
INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Letter', NULL, NULL, 'Letter');
INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Note', NULL, NULL, 'Note');
INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('PhoneCall', NULL, NULL, 'Phone Call');
INSERT INTO "ActivityType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Task', NULL, NULL, 'Task');

INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('accounts_create', NULL, NULL, 'Accounts', NULL, TRUE, 'Create accounts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('accounts_delete', NULL, NULL, 'Accounts', NULL, TRUE, 'Delete accounts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('accounts_manage', NULL, NULL, 'Accounts', NULL, TRUE, 'Manage accounts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('accounts_read', NULL, NULL, 'Accounts', NULL, TRUE, 'Read accounts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('accounts_update', NULL, NULL, 'Accounts', NULL, TRUE, 'Update accounts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('assets_create', NULL, NULL, 'Assets', NULL, TRUE, 'Create assets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('assets_delete', NULL, NULL, 'Assets', NULL, TRUE, 'Delete assets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('assets_manage', NULL, NULL, 'Assets', NULL, TRUE, 'Manage assets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('assets_read', NULL, NULL, 'Assets', NULL, TRUE, 'Read assets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('assets_update', NULL, NULL, 'Assets', NULL, TRUE, 'Update assets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('bots_create', NULL, NULL, 'Bots', NULL, TRUE, 'Create bots');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('bots_delete', NULL, NULL, 'Bots', NULL, TRUE, 'Delete bots');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('bots_manage', NULL, NULL, 'Bots', NULL, TRUE, 'Manage bots');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('bots_read', NULL, NULL, 'Bots', NULL, TRUE, 'Read bots');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('bots_update', NULL, NULL, 'Bots', NULL, TRUE, 'Update bots');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('budgets_create', NULL, NULL, 'Budgets', NULL, TRUE, 'Create budgets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('budgets_delete', NULL, NULL, 'Budgets', NULL, TRUE, 'Delete budgets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('budgets_manage', NULL, NULL, 'Budgets', NULL, TRUE, 'Manage budgets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('budgets_read', NULL, NULL, 'Budgets', NULL, TRUE, 'Read budgets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('budgets_update', NULL, NULL, 'Budgets', NULL, TRUE, 'Update budgets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('campaigns_create', NULL, NULL, 'Campaigns', NULL, TRUE, 'Create campaigns');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('campaigns_delete', NULL, NULL, 'Campaigns', NULL, TRUE, 'Delete campaigns');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('campaigns_manage', NULL, NULL, 'Campaigns', NULL, TRUE, 'Manage campaigns');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('campaigns_read', NULL, NULL, 'Campaigns', NULL, TRUE, 'Read campaigns');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('campaigns_update', NULL, NULL, 'Campaigns', NULL, TRUE, 'Update campaigns');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('contacts_create', NULL, NULL, 'Contacts', NULL, TRUE, 'Create contacts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('contacts_delete', NULL, NULL, 'Contacts', NULL, TRUE, 'Delete contacts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('contacts_manage', NULL, NULL, 'Contacts', NULL, TRUE, 'Manage contacts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('contacts_read', NULL, NULL, 'Contacts', NULL, TRUE, 'Read contacts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('contacts_update', NULL, NULL, 'Contacts', NULL, TRUE, 'Update contacts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('courses_create', NULL, NULL, 'Courses', NULL, TRUE, 'Create courses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('courses_delete', NULL, NULL, 'Courses', NULL, TRUE, 'Delete courses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('courses_manage', NULL, NULL, 'Courses', NULL, TRUE, 'Manage courses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('courses_read', NULL, NULL, 'Courses', NULL, TRUE, 'Read courses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('courses_update', NULL, NULL, 'Courses', NULL, TRUE, 'Update courses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('deal_units_create', NULL, NULL, 'Deal Units', NULL, TRUE, 'Create deal units');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('deal_units_delete', NULL, NULL, 'Deal Units', NULL, TRUE, 'Delete deal units');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('deal_units_manage', NULL, NULL, 'Deal Units', NULL, TRUE, 'Manage deal units');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('deal_units_read', NULL, NULL, 'Deal Units', NULL, TRUE, 'Read deal units');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('deal_units_update', NULL, NULL, 'Deal Units', NULL, TRUE, 'Update deal units');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('employees_create', NULL, NULL, 'Employees', NULL, TRUE, 'Create employees');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('employees_delete', NULL, NULL, 'Employees', NULL, TRUE, 'Delete employees');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('employees_manage', NULL, NULL, 'Employees', NULL, TRUE, 'Manage employees');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('employees_read', NULL, NULL, 'Employees', NULL, TRUE, 'Read employees');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('employees_update', NULL, NULL, 'Employees', NULL, TRUE, 'Update employees');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('expenses_create', NULL, NULL, 'Expenses', NULL, TRUE, 'Create expenses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('expenses_delete', NULL, NULL, 'Expenses', NULL, TRUE, 'Delete expenses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('expenses_manage', NULL, NULL, 'Expenses', NULL, TRUE, 'Manage expenses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('expenses_read', NULL, NULL, 'Expenses', NULL, TRUE, 'Read expenses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('expenses_update', NULL, NULL, 'Expenses', NULL, TRUE, 'Update expenses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('file_uploads_create', NULL, NULL, 'File Uploads', NULL, TRUE, 'Create file uploads');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('file_uploads_delete', NULL, NULL, 'File Uploads', NULL, TRUE, 'Delete file uploads');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('file_uploads_manage', NULL, NULL, 'File Uploads', NULL, TRUE, 'Manage file uploads');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('file_uploads_read', NULL, NULL, 'File Uploads', NULL, TRUE, 'Read file uploads');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('file_uploads_update', NULL, NULL, 'File Uploads', NULL, TRUE, 'Update file uploads');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('financialbooks_create', NULL, NULL, 'Financial books', NULL, TRUE, 'Create financial books');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('financialbooks_delete', NULL, NULL, 'Financial books', NULL, TRUE, 'Delete financial books');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('financialbooks_manage', NULL, NULL, 'Financial books', NULL, TRUE, 'Manage financial books');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('financialbooks_read', NULL, NULL, 'Financial books', NULL, TRUE, 'Read financial books');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('financialbooks_update', NULL, NULL, 'Financial books', NULL, TRUE, 'Update financial books');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('holders_create', NULL, NULL, 'Holders', NULL, TRUE, 'Create holders');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('holders_delete', NULL, NULL, 'Holders', NULL, TRUE, 'Delete holders');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('holders_manage', NULL, NULL, 'Holders', NULL, TRUE, 'Manage holders');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('holders_read', NULL, NULL, 'Holders', NULL, TRUE, 'Read holders');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('holders_update', NULL, NULL, 'Holders', NULL, TRUE, 'Update holders');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('invoices_create', NULL, NULL, 'Invoices', NULL, TRUE, 'Create invoices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('invoices_delete', NULL, NULL, 'Invoices', NULL, TRUE, 'Delete invoices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('invoices_manage', NULL, NULL, 'Invoices', NULL, TRUE, 'Manage invoices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('invoices_read', NULL, NULL, 'Invoices', NULL, TRUE, 'Read invoices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('invoices_update', NULL, NULL, 'Invoices', NULL, TRUE, 'Update invoices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('journals_create', NULL, NULL, 'Journals', NULL, TRUE, 'Create journals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('journals_delete', NULL, NULL, 'Journals', NULL, TRUE, 'Delete journals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('journals_manage', NULL, NULL, 'Journals', NULL, TRUE, 'Manage journals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('journals_read', NULL, NULL, 'Journals', NULL, TRUE, 'Read journals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('journals_update', NULL, NULL, 'Journals', NULL, TRUE, 'Update journals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('ledgers_create', NULL, NULL, 'Ledgers', NULL, TRUE, 'Create ledgers');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('ledgers_delete', NULL, NULL, 'Ledgers', NULL, TRUE, 'Delete ledgers');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('ledgers_manage', NULL, NULL, 'Ledgers', NULL, TRUE, 'Manage ledgers');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('ledgers_read', NULL, NULL, 'Ledgers', NULL, TRUE, 'Read ledgers');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('ledgers_update', NULL, NULL, 'Ledgers', NULL, TRUE, 'Update ledgers');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('organizations_create', NULL, NULL, 'Organizations', NULL, TRUE, 'Create organizations');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('organizations_delete', NULL, NULL, 'Organizations', NULL, TRUE, 'Delete organizations');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('organizations_manage', NULL, NULL, 'Organizations', NULL, TRUE, 'Manage organizations');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('organizations_read', NULL, NULL, 'Organizations', NULL, TRUE, 'Read organizations');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('organizations_update', NULL, NULL, 'Organizations', NULL, TRUE, 'Update organizations');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('payments_create', NULL, NULL, 'Payments', NULL, TRUE, 'Create payments');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('payments_delete', NULL, NULL, 'Payments', NULL, TRUE, 'Delete payments');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('payments_manage', NULL, NULL, 'Payments', NULL, TRUE, 'Manage payments');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('payments_read', NULL, NULL, 'Payments', NULL, TRUE, 'Read payments');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('payments_update', NULL, NULL, 'Payments', NULL, TRUE, 'Update payments');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_pages_create', NULL, NULL, 'Portal Pages', NULL, TRUE, 'Create pages');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_pages_delete', NULL, NULL, 'Portal Pages', NULL, TRUE, 'Delete pages');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_pages_manage', NULL, NULL, 'Portal Pages', NULL, TRUE, 'Manage pages');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_pages_read', NULL, NULL, 'Portal Pages', NULL, TRUE, 'Read pages');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_pages_update', NULL, NULL, 'Portal Pages', NULL, TRUE, 'Update pages');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_posts_create', NULL, NULL, 'Blog Posts', NULL, TRUE, 'Create blog posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_posts_delete', NULL, NULL, 'Blog Posts', NULL, TRUE, 'Delete blog posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_posts_manage', NULL, NULL, 'Blog Posts', NULL, TRUE, 'Manage blog posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_posts_read', NULL, NULL, 'Blog Posts', NULL, TRUE, 'Read blog posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_posts_update', NULL, NULL, 'Blog Posts', NULL, TRUE, 'Update blog posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_settings_create', NULL, NULL, 'Portal Settings', NULL, TRUE, 'Create portal settings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_settings_delete', NULL, NULL, 'Portal Settings', NULL, TRUE, 'Delete portal settings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_settings_manage', NULL, NULL, 'Portal Settings', NULL, TRUE, 'Manage portal settings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_settings_read', NULL, NULL, 'Portal Settings', NULL, TRUE, 'Read portal settings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portal_settings_update', NULL, NULL, 'Portal Settings', NULL, TRUE, 'Update portal settings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portals_create', NULL, NULL, 'Portals', NULL, TRUE, 'Create portals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portals_delete', NULL, NULL, 'Portals', NULL, TRUE, 'Delete portals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portals_manage', NULL, NULL, 'Portals', NULL, TRUE, 'Manage portals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portals_read', NULL, NULL, 'Portals', NULL, TRUE, 'Read portals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('portals_update', NULL, NULL, 'Portals', NULL, TRUE, 'Update portals');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('pricelists_create', NULL, NULL, 'Prices', NULL, TRUE, 'Create price lists');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('pricelists_delete', NULL, NULL, 'Prices', NULL, TRUE, 'Delete price lists');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('pricelists_manage', NULL, NULL, 'Prices', NULL, TRUE, 'Manage price lists');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('pricelists_read', NULL, NULL, 'Prices', NULL, TRUE, 'Read price lists');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('pricelists_update', NULL, NULL, 'Prices', NULL, TRUE, 'Update price lists');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('prices_create', NULL, NULL, 'Prices', NULL, TRUE, 'Create prices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('prices_delete', NULL, NULL, 'Prices', NULL, TRUE, 'Delete prices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('prices_manage', NULL, NULL, 'Prices', NULL, TRUE, 'Manage prices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('prices_read', NULL, NULL, 'Prices', NULL, TRUE, 'Read prices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('prices_update', NULL, NULL, 'Prices', NULL, TRUE, 'Update prices');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('product_taxonomies_create', NULL, NULL, 'Product taxonomies', NULL, TRUE, 'Create product taxonomies');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('product_taxonomies_delete', NULL, NULL, 'Product taxonomies', NULL, TRUE, 'Delete product taxonomies');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('product_taxonomies_manage', NULL, NULL, 'Product taxonomies', NULL, TRUE, 'Manage product taxonomies');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('product_taxonomies_read', NULL, NULL, 'Product taxonomies', NULL, TRUE, 'Read product taxonomies');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('product_taxonomies_update', NULL, NULL, 'Product taxonomies', NULL, TRUE, 'Update product taxonomies');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('products_create', NULL, NULL, 'Products', NULL, TRUE, 'Create products');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('products_delete', NULL, NULL, 'Products', NULL, TRUE, 'Delete products');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('products_manage', NULL, NULL, 'Products', NULL, TRUE, 'Manage products');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('products_read', NULL, NULL, 'Products', NULL, TRUE, 'Read products');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('products_update', NULL, NULL, 'Products', NULL, TRUE, 'Update products');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('projects_create', NULL, NULL, 'Projects', NULL, TRUE, 'Create projects');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('projects_delete', NULL, NULL, 'Projects', NULL, TRUE, 'Delete projects');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('projects_manage', NULL, NULL, 'Projects', NULL, TRUE, 'Manage projects');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('projects_read', NULL, NULL, 'Projects', NULL, TRUE, 'Read projects');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('projects_update', NULL, NULL, 'Projects', NULL, TRUE, 'Update projects');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('purchase_requests_create', NULL, NULL, 'Purchase Requests', NULL, TRUE, 'Create purchase requests');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('purchase_requests_delete', NULL, NULL, 'Purchase Requests', NULL, TRUE, 'Delete purchase requests');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('purchase_requests_manage', NULL, NULL, 'Purchase Requests', NULL, TRUE, 'Manage purchase requests');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('purchase_requests_read', NULL, NULL, 'Purchase Requests', NULL, TRUE, 'Read purchase requests');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('purchase_requests_update', NULL, NULL, 'Purchase Requests', NULL, TRUE, 'Update purchase requests');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('reports_create', NULL, NULL, 'Reports', NULL, TRUE, 'Create reports');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('reports_delete', NULL, NULL, 'Reports', NULL, TRUE, 'Delete reports');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('reports_manage', NULL, NULL, 'Reports', NULL, TRUE, 'Manage reports');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('reports_read', NULL, NULL, 'Reports', NULL, TRUE, 'Read reports');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('reports_update', NULL, NULL, 'Reports', NULL, TRUE, 'Update reports');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_permissions_create', NULL, NULL, 'Security permissions', NULL, TRUE, 'Create security permissions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_permissions_delete', NULL, NULL, 'Security permissions', NULL, TRUE, 'Delete security permissions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_permissions_manage', NULL, NULL, 'Security permissions', NULL, TRUE, 'Manage security permissions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_permissions_read', NULL, NULL, 'Security permissions', NULL, TRUE, 'Read security permissions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_permissions_update', NULL, NULL, 'Security permissions', NULL, TRUE, 'Update security permissions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_roles_create', NULL, NULL, 'Security Roles', NULL, TRUE, 'Create security roles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_roles_delete', NULL, NULL, 'Security Roles', NULL, TRUE, 'Delete security roles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_roles_manage', NULL, NULL, 'Security Roles', NULL, TRUE, 'Manage security roles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_roles_read', NULL, NULL, 'Security Roles', NULL, TRUE, 'Read security roles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('security_roles_update', NULL, NULL, 'Security Roles', NULL, TRUE, 'Update security roles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('services_create', NULL, NULL, 'Services', NULL, TRUE, 'Create services');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('services_delete', NULL, NULL, 'Services', NULL, TRUE, 'Delete services');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('services_manage', NULL, NULL, 'Services', NULL, TRUE, 'Manage services');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('services_read', NULL, NULL, 'Services', NULL, TRUE, 'Read services');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('services_update', NULL, NULL, 'Services', NULL, TRUE, 'Update services');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shares_create', NULL, NULL, 'Shares', NULL, TRUE, 'Create shares');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shares_delete', NULL, NULL, 'Shares', NULL, TRUE, 'Delete shares');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shares_manage', NULL, NULL, 'Shares', NULL, TRUE, 'Manage shares');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shares_read', NULL, NULL, 'Shares', NULL, TRUE, 'Read shares');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shares_update', NULL, NULL, 'Shares', NULL, TRUE, 'Update shares');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shippings_create', NULL, NULL, 'Shippings', NULL, TRUE, 'Create shippings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shippings_delete', NULL, NULL, 'Shippings', NULL, TRUE, 'Delete shippings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shippings_manage', NULL, NULL, 'Shippings', NULL, TRUE, 'Manage shippings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shippings_read', NULL, NULL, 'Shippings', NULL, TRUE, 'Read shippings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('shippings_update', NULL, NULL, 'Shippings', NULL, TRUE, 'Update shippings');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_groups_create', NULL, NULL, 'Social Groups', NULL, TRUE, 'Create social groups');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_groups_delete', NULL, NULL, 'Social Groups', NULL, TRUE, 'Delete social groups');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_groups_manage', NULL, NULL, 'Social Groups', NULL, TRUE, 'Manage social groups');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_groups_read', NULL, NULL, 'Social Groups', NULL, TRUE, 'Read social groups');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_groups_update', NULL, NULL, 'Social Groups', NULL, TRUE, 'Update social groups');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_posts_create', NULL, NULL, 'Social Posts', NULL, TRUE, 'Create social posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_posts_delete', NULL, NULL, 'Social Posts', NULL, TRUE, 'Delete social posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_posts_manage', NULL, NULL, 'Social Posts', NULL, TRUE, 'Manage social posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_posts_read', NULL, NULL, 'Social Posts', NULL, TRUE, 'Read social posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_posts_update', NULL, NULL, 'Social Posts', NULL, TRUE, 'Update social posts');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_profiles_create', NULL, NULL, 'Social Groups', NULL, TRUE, 'Create social profiles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_profiles_delete', NULL, NULL, 'Social Groups', NULL, TRUE, 'Delete social profiles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_profiles_manage', NULL, NULL, 'Social Groups', NULL, TRUE, 'Manage social profiles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_profiles_read', NULL, NULL, 'Social Groups', NULL, TRUE, 'Read social profiles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('social_profiles_update', NULL, NULL, 'Social Groups', NULL, TRUE, 'Update social profiles');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('stock_items_create', NULL, NULL, 'Stock items', NULL, TRUE, 'Create stock items');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('stock_items_delete', NULL, NULL, 'Stock items', NULL, TRUE, 'Delete stock items');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('stock_items_manage', NULL, NULL, 'Stock items', NULL, TRUE, 'Manage stock items');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('stock_items_read', NULL, NULL, 'Stock items', NULL, TRUE, 'Read stock items');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('stock_items_update', NULL, NULL, 'Stock items', NULL, TRUE, 'Update stock items');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('studio_access', NULL, NULL, NULL, NULL, TRUE, 'Studio Access (System)');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('subscriptions_create', NULL, NULL, 'Subscriptions', NULL, TRUE, 'Create subscriptions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('subscriptions_delete', NULL, NULL, 'Subscriptions', NULL, TRUE, 'Delete subscriptions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('subscriptions_manage', NULL, NULL, 'Subscriptions', NULL, TRUE, 'Manage subscriptions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('subscriptions_read', NULL, NULL, 'Subscriptions', NULL, TRUE, 'Read subscriptions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('subscriptions_update', NULL, NULL, 'Subscriptions', NULL, TRUE, 'Update subscriptions');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('taxes_create', NULL, NULL, 'Taxes', NULL, TRUE, 'Create taxes');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('taxes_delete', NULL, NULL, 'Taxes', NULL, TRUE, 'Delete taxes');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('taxes_manage', NULL, NULL, 'Taxes', NULL, TRUE, 'Manage taxes');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('taxes_read', NULL, NULL, 'Taxes', NULL, TRUE, 'Read taxes');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('taxes_update', NULL, NULL, 'Taxes', NULL, TRUE, 'Update taxes');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tenants_create', NULL, NULL, 'Tenants', NULL, TRUE, 'Create tenants');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tenants_delete', NULL, NULL, 'Tenants', NULL, TRUE, 'Delete tenants');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tenants_manage', NULL, NULL, 'Tenants', NULL, TRUE, 'Manage tenants');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tenants_read', NULL, NULL, 'Tenants', NULL, TRUE, 'Read tenants');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tenants_update', NULL, NULL, 'Tenants', NULL, TRUE, 'Update tenants');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tickets_create', NULL, NULL, 'Tickets', NULL, TRUE, 'Create tickets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tickets_delete', NULL, NULL, 'Tickets', NULL, TRUE, 'Delete tickets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tickets_manage', NULL, NULL, 'Tickets', NULL, TRUE, 'Manage tickets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tickets_read', NULL, NULL, 'Tickets', NULL, TRUE, 'Read tickets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('tickets_update', NULL, NULL, 'Tickets', NULL, TRUE, 'Update tickets');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('warehouses_create', NULL, NULL, 'Warehouses', NULL, TRUE, 'Create warehouses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('warehouses_delete', NULL, NULL, 'Warehouses', NULL, TRUE, 'Delete warehouses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('warehouses_manage', NULL, NULL, 'Warehouses', NULL, TRUE, 'Manage warehouses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('warehouses_read', NULL, NULL, 'Warehouses', NULL, TRUE, 'Read warehouses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('warehouses_update', NULL, NULL, 'Warehouses', NULL, TRUE, 'Update warehouses');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('workflows_create', NULL, NULL, 'Workflows', NULL, TRUE, 'Create workflows');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('workflows_delete', NULL, NULL, 'Workflows', NULL, TRUE, 'Delete workflows');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('workflows_manage', NULL, NULL, 'Workflows', NULL, TRUE, 'Manage workflows');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('workflows_read', NULL, NULL, 'Workflows', NULL, TRUE, 'Read workflows');
INSERT INTO "BusinessPermission" ("ID", "BusinessID", "BusinessProfileRecordID", "Category", "Description", "IsSystemPermission", "Name")
VALUES ('workflows_update', NULL, NULL, 'Workflows', NULL, TRUE, 'Update workflows');

INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('business_owner', NULL, NULL, NULL, TRUE, 'Business Owner (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('global_admin', NULL, NULL, NULL, TRUE, 'Global Admin (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_author', NULL, NULL, NULL, TRUE, 'Portal Author (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_blocked', NULL, NULL, NULL, TRUE, 'Portal Blocked (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_collaborator', NULL, NULL, NULL, TRUE, 'Portal Colaborator (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_default', NULL, NULL, NULL, TRUE, 'Portal Application (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_editor', NULL, NULL, NULL, TRUE, 'Portal Editor (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_keymaster', NULL, NULL, NULL, TRUE, 'Portal Keymaster (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_moderator', NULL, NULL, NULL, TRUE, 'Portal Moderator (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_participant', NULL, NULL, NULL, TRUE, 'Portal Participant (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_spectator', NULL, NULL, NULL, TRUE, 'Portal Spectator (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('portal_suscriptor', NULL, NULL, NULL, TRUE, 'Portal Suscriptor (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('store_admin', NULL, NULL, NULL, TRUE, 'Store Admin (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('store_blocked', NULL, NULL, NULL, TRUE, 'Store Blocked (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('store_customer', NULL, NULL, NULL, TRUE, 'Store Customer (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('store_manager', NULL, NULL, NULL, TRUE, 'Store Manager (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('support_agent', NULL, NULL, NULL, TRUE, 'Support Agent (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('support_manager', NULL, NULL, NULL, TRUE, 'Support Manager (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('support_supervisor', NULL, NULL, NULL, TRUE, 'Support Supervisor (System)');
INSERT INTO "BusinessSecurityRole" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "IsSystemSecurityRole", "Name")
VALUES ('support_user', NULL, NULL, NULL, TRUE, 'Support User (System)');

INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Bulletins', NULL, NULL, 'Bulletins');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('CompanyBackground', NULL, NULL, 'Company Background');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Manuals', NULL, NULL, 'Manuals');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('MarketingCollateral', NULL, NULL, 'Marketing Collateral');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('News', NULL, NULL, 'News');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('PoliciesAndProcedures', NULL, NULL, 'Policies And Procedures');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Presentation', NULL, NULL, 'Presentation');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('PriceSheets', NULL, NULL, 'Price Sheets');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('ProductSheet', NULL, NULL, 'Product Sheet');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('SalesLiterature', NULL, NULL, 'Sales Literature');
INSERT INTO "SalesLiteratureType" ("ID", "BusinessID", "BusinessProfileRecordID", "Name")
VALUES ('Spreadsheets', NULL, NULL, 'Spreadsheets');

INSERT INTO "UnitGroup" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "Name", "SystemLocked")
VALUES ('Distance', NULL, NULL, NULL, 'Distance', TRUE);
INSERT INTO "UnitGroup" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "Name", "SystemLocked")
VALUES ('Mass', NULL, NULL, NULL, 'Mass', TRUE);
INSERT INTO "UnitGroup" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "Name", "SystemLocked")
VALUES ('Time', NULL, NULL, NULL, 'Time', TRUE);
INSERT INTO "UnitGroup" ("ID", "BusinessID", "BusinessProfileRecordID", "Description", "Name", "SystemLocked")
VALUES ('Units', NULL, NULL, NULL, 'Units', TRUE);

INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Milligrams', 0.0, NULL, NULL, NULL, 'Milligrams', 'Mass');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Millimeters', 0.0, NULL, NULL, NULL, 'Millimeters', 'Distance');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Second', 0.0, NULL, NULL, NULL, 'Second', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Unit', 1.0, NULL, NULL, NULL, 'Unit', 'Units');

INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Centimeters', 10.0, 'Millimeters', NULL, NULL, 'Centimeters', 'Distance');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Dozen', 12.0, 'Unit', NULL, NULL, 'Dozen', 'Units');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Grams', 1000.0, 'Milligrams', NULL, NULL, 'Grams', 'Mass');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Half a Dozen', 6.0, 'Unit', NULL, NULL, 'Half a Dozen', 'Units');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Hundred', 100.0, 'Unit', NULL, NULL, 'Thousand', 'Units');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Minute', 60.0, 'Second', NULL, NULL, 'Minute', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Pair', 2.0, 'Unit', NULL, NULL, 'Pair', 'Units');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Thousand', 1000.0, 'Unit', NULL, NULL, 'Thousand', 'Units');

INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Hour', 60.0, 'Minute', NULL, NULL, 'Hour', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Kilogram', 1000.0, 'Grams', NULL, NULL, 'Kilogram', 'Mass');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Meters', 100.0, 'Centimeters', NULL, NULL, 'Meters', 'Distance');

INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Day', 24.0, 'Hour', NULL, NULL, 'Day', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Kilometers', 1000.0, 'Meters', NULL, NULL, 'Kilometers', 'Distance');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Tonne', 1000.0, 'Kilogram', NULL, NULL, 'Tonne', 'Mass');

INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('28 Days Month', 28.0, 'Day', NULL, NULL, '28 Days Month', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('29 Days Month', 29.0, 'Day', NULL, NULL, '29 Days Month', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('30 Days Month', 30.0, 'Day', NULL, NULL, '30 Days Month', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('31 Days Month', 31.0, 'Day', NULL, NULL, '31 Days Month', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Leap Year (Gregorian calendar)', 366.0, 'Day', NULL, NULL, 'Leap Year (Gregorian calendar)', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Leap Year (Islamic calendar)', 355.0, 'Day', NULL, NULL, 'Leap Year (Islamic calendar)', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Week', 7.0, 'Day', NULL, NULL, 'Week', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Year (Gregorian calendar)', 365.0, 'Day', NULL, NULL, 'Year (Gregorian calendar)', 'Time');
INSERT INTO "Unit" ("ID", "BaseUnitAmount", "BaseUnitID", "BusinessID", "BusinessProfileRecordID", "Name", "UnitGroupID")
VALUES ('Year (Islamic calendar)', 354.0, 'Day', NULL, NULL, 'Year (Islamic calendar)', 'Time');

CREATE INDEX "IX_AccessKeyPair_AccountHolderID" ON "AccessKeyPair" ("AccountHolderID");

CREATE INDEX "IX_AccessKeyPair_BusinessID" ON "AccessKeyPair" ("BusinessID");

CREATE INDEX "IX_AccessKeyPair_BusinessProfileRecordID" ON "AccessKeyPair" ("BusinessProfileRecordID");

CREATE INDEX "IX_AccessKeyPair_ContactID" ON "AccessKeyPair" ("ContactID");

CREATE INDEX "IX_Account_AccountGroupID" ON "Account" ("AccountGroupID");

CREATE INDEX "IX_Account_AccountHolderID" ON "Account" ("AccountHolderID");

CREATE INDEX "IX_Account_AccountTypeID" ON "Account" ("AccountTypeID");

CREATE INDEX "IX_Account_BankID" ON "Account" ("BankID");

CREATE INDEX "IX_Account_BankProfileID" ON "Account" ("BankProfileID");

CREATE INDEX "IX_Account_BillingProfileID" ON "Account" ("BillingProfileID");

CREATE INDEX "IX_Account_BusinessID" ON "Account" ("BusinessID");

CREATE INDEX "IX_Account_BusinessProfileRecordID" ON "Account" ("BusinessProfileRecordID");

CREATE INDEX "IX_Account_ContactID" ON "Account" ("ContactID");

CREATE INDEX "IX_Account_CurrencyID" ON "Account" ("CurrencyID");

CREATE INDEX "IX_Account_LedgerID" ON "Account" ("LedgerID");

CREATE INDEX "IX_Account_ParentAccountID" ON "Account" ("ParentAccountID");

CREATE INDEX "IX_AccountGroup_BusinessID" ON "AccountGroup" ("BusinessID");

CREATE INDEX "IX_AccountGroup_BusinessProfileRecordID" ON "AccountGroup" ("BusinessProfileRecordID");

CREATE INDEX "IX_AccountGroup_ParentAccountGroupID" ON "AccountGroup" ("ParentAccountGroupID");

CREATE INDEX "IX_AccountHolderLogin_AccountHolderID" ON "AccountHolderLogin" ("AccountHolderID");

CREATE INDEX "IX_AccountHolderLogin_IPLookupID" ON "AccountHolderLogin" ("IPLookupID");

CREATE UNIQUE INDEX "IX_AccountHolderSettings_AccountHolderID" ON "AccountHolderSettings" ("AccountHolderID");

CREATE INDEX "IX_AccountingEntry_BankProfileID" ON "AccountingEntry" ("BankProfileID");

CREATE INDEX "IX_AccountingEntry_BusinessID" ON "AccountingEntry" ("BusinessID");

CREATE INDEX "IX_AccountingEntry_BusinessProfileRecordID" ON "AccountingEntry" ("BusinessProfileRecordID");

CREATE INDEX "IX_AccountingEntry_CreditAccountID" ON "AccountingEntry" ("CreditAccountID");

CREATE INDEX "IX_AccountingEntry_CurrencyID" ON "AccountingEntry" ("CurrencyID");

CREATE INDEX "IX_AccountingEntry_DebitAccountID" ON "AccountingEntry" ("DebitAccountID");

CREATE INDEX "IX_AccountingEntry_JournalEntryID" ON "AccountingEntry" ("JournalEntryID");

CREATE INDEX "IX_AccountingEntry_PaymentChargeback_PaymentDisputeID" ON "AccountingEntry" ("PaymentChargeback_PaymentDisputeID");

CREATE INDEX "IX_AccountingEntry_PaymentChargeback_PaymentID" ON "AccountingEntry" ("PaymentChargeback_PaymentID");

CREATE INDEX "IX_AccountingEntry_PaymentChargeback_WalletAccountID" ON "AccountingEntry" ("PaymentChargeback_WalletAccountID");

CREATE INDEX "IX_AccountingEntry_PaymentDisputeID" ON "AccountingEntry" ("PaymentDisputeID");

CREATE INDEX "IX_AccountingEntry_PaymentID" ON "AccountingEntry" ("PaymentID");

CREATE INDEX "IX_AccountingEntry_RefundRequestID" ON "AccountingEntry" ("RefundRequestID");

CREATE INDEX "IX_AccountingEntry_WalletAccountID" ON "AccountingEntry" ("WalletAccountID");

CREATE INDEX "IX_AccountingPeriodClosingVoucher_AccountID" ON "AccountingPeriodClosingVoucher" ("AccountID");

CREATE INDEX "IX_AccountingPeriodClosingVoucher_BusinessID" ON "AccountingPeriodClosingVoucher" ("BusinessID");

CREATE INDEX "IX_AccountingPeriodClosingVoucher_BusinessProfileRecordID" ON "AccountingPeriodClosingVoucher" ("BusinessProfileRecordID");

CREATE INDEX "IX_AccountingPeriodClosingVoucher_FiscalYearID" ON "AccountingPeriodClosingVoucher" ("FiscalYearID");

CREATE INDEX "IX_AccountRelation_AccountID" ON "AccountRelation" ("AccountID");

CREATE INDEX "IX_AccountRelation_BusinessID" ON "AccountRelation" ("BusinessID");

CREATE INDEX "IX_AccountRelation_BusinessProfileRecordID" ON "AccountRelation" ("BusinessProfileRecordID");

CREATE INDEX "IX_AccountRelation_ProjectID" ON "AccountRelation" ("ProjectID");

CREATE INDEX "IX_AccountType_BusinessID" ON "AccountType" ("BusinessID");

CREATE INDEX "IX_AccountType_BusinessProfileRecordID" ON "AccountType" ("BusinessProfileRecordID");

CREATE INDEX "IX_ActivityFeed_BusinessID" ON "ActivityFeed" ("BusinessID");

CREATE UNIQUE INDEX "IX_ActivityFeed_ContactID" ON "ActivityFeed" ("ContactID");

CREATE UNIQUE INDEX "IX_ActivityFeed_DealUnitID" ON "ActivityFeed" ("DealUnitID");

CREATE UNIQUE INDEX "IX_ActivityFeed_GigApplicationID" ON "ActivityFeed" ("GigApplicationID");

CREATE UNIQUE INDEX "IX_ActivityFeed_JobOfferApplicationID" ON "ActivityFeed" ("JobOfferApplicationID");

CREATE UNIQUE INDEX "IX_ActivityFeed_MarketingCampaignID" ON "ActivityFeed" ("MarketingCampaignID");

CREATE UNIQUE INDEX "IX_ActivityFeed_MarketingListID" ON "ActivityFeed" ("MarketingListID");

CREATE UNIQUE INDEX "IX_ActivityFeed_ProjectID" ON "ActivityFeed" ("ProjectID");

CREATE INDEX "IX_ActivityRecord_ActivityFeedID" ON "ActivityRecord" ("ActivityFeedID");

CREATE INDEX "IX_ActivityRecord_ActivityTypeID" ON "ActivityRecord" ("ActivityTypeID");

CREATE INDEX "IX_ActivityRecord_BusinessID" ON "ActivityRecord" ("BusinessID");

CREATE INDEX "IX_ActivityRecord_BusinessProfileRecordID" ON "ActivityRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_ActivityRecord_InChargeBusinessProfileRecordID" ON "ActivityRecord" ("InChargeBusinessProfileRecordID");

CREATE INDEX "IX_ActivityRecord_ParentActivityID" ON "ActivityRecord" ("ParentActivityID");

CREATE INDEX "IX_ActivityType_BusinessID" ON "ActivityType" ("BusinessID");

CREATE INDEX "IX_ActivityType_BusinessProfileRecordID" ON "ActivityType" ("BusinessProfileRecordID");

CREATE INDEX "IX_Agreement_AgreementTypeID" ON "Agreement" ("AgreementTypeID");

CREATE INDEX "IX_Agreement_BusinessID" ON "Agreement" ("BusinessID");

CREATE INDEX "IX_Agreement_ContactID" ON "Agreement" ("ContactID");

CREATE INDEX "IX_AgreementRevision_AgreementID" ON "AgreementRevision" ("AgreementID");

CREATE INDEX "IX_AgreementRevision_BusinessID" ON "AgreementRevision" ("BusinessID");

CREATE INDEX "IX_AgreementRevision_LanguageIso639_1" ON "AgreementRevision" ("LanguageIso639_1");

CREATE INDEX "IX_AgreementType_BusinessID" ON "AgreementType" ("BusinessID");

CREATE INDEX "IX_AppliedFee_FeeID" ON "AppliedFee" ("FeeID");

CREATE INDEX "IX_AppliedFee_PaymentChargebackID" ON "AppliedFee" ("PaymentChargebackID");

CREATE INDEX "IX_AppliedFee_PaymentGatewayID" ON "AppliedFee" ("PaymentGatewayID");

CREATE INDEX "IX_AppliedFee_PaymentID" ON "AppliedFee" ("PaymentID");

CREATE INDEX "IX_AppliedFee_PaymentRefundID" ON "AppliedFee" ("PaymentRefundID");

CREATE INDEX "IX_AppliedFee_WalletWithdrawID" ON "AppliedFee" ("WalletWithdrawID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_AppliedFeeID" ON "AppliedTaxPolicyRecord" ("AppliedFeeID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_BillingItemRecordID" ON "AppliedTaxPolicyRecord" ("BillingItemRecordID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_BusinessID" ON "AppliedTaxPolicyRecord" ("BusinessID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_BusinessProfileRecordID" ON "AppliedTaxPolicyRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_InvoiceID" ON "AppliedTaxPolicyRecord" ("InvoiceID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_ItemID" ON "AppliedTaxPolicyRecord" ("ItemID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_PaymentID" ON "AppliedTaxPolicyRecord" ("PaymentID");

CREATE INDEX "IX_AppliedTaxPolicyRecord_TaxPolicyID" ON "AppliedTaxPolicyRecord" ("TaxPolicyID");

CREATE INDEX "IX_AppraisalSession_AppraisalStageID" ON "AppraisalSession" ("AppraisalStageID");

CREATE INDEX "IX_AppraisalSession_AppraisalWorkflowID" ON "AppraisalSession" ("AppraisalWorkflowID");

CREATE INDEX "IX_AppraisalSession_BusinessID" ON "AppraisalSession" ("BusinessID");

CREATE INDEX "IX_AppraisalSession_BusinessProfileRecordID" ON "AppraisalSession" ("BusinessProfileRecordID");

CREATE INDEX "IX_AppraisalSession_EmployeeProfileID" ON "AppraisalSession" ("EmployeeProfileID");

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");

CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");

CREATE INDEX "IX_AspNetUsers_CityID" ON "AspNetUsers" ("CityID");

CREATE INDEX "IX_AspNetUsers_CountryID" ON "AspNetUsers" ("CountryID");

CREATE INDEX "IX_AspNetUsers_CountryLanguageID" ON "AspNetUsers" ("CountryLanguageID");

CREATE INDEX "IX_AspNetUsers_CountryStateID" ON "AspNetUsers" ("CountryStateID");

CREATE INDEX "IX_AspNetUsers_CurrencyID" ON "AspNetUsers" ("CurrencyID");

CREATE INDEX "IX_AspNetUsers_SelectedBusinessID" ON "AspNetUsers" ("SelectedBusinessID");

CREATE INDEX "IX_AspNetUsers_TimezoneID" ON "AspNetUsers" ("TimezoneID");

CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");

CREATE INDEX "IX_Asset_AssetCategoryID" ON "Asset" ("AssetCategoryID");

CREATE INDEX "IX_Asset_AssetLocationID" ON "Asset" ("AssetLocationID");

CREATE INDEX "IX_Asset_BusinessID" ON "Asset" ("BusinessID");

CREATE INDEX "IX_Asset_BusinessProfileRecordID" ON "Asset" ("BusinessProfileRecordID");

CREATE INDEX "IX_Asset_ContactID" ON "Asset" ("ContactID");

CREATE INDEX "IX_Asset_FinancialBookID" ON "Asset" ("FinancialBookID");

CREATE INDEX "IX_Asset_ItemID" ON "Asset" ("ItemID");

CREATE INDEX "IX_Asset_OrganizationDepartmentID" ON "Asset" ("OrganizationDepartmentID");

CREATE INDEX "IX_Asset_PurchaseInvoiceID" ON "Asset" ("PurchaseInvoiceID");

CREATE INDEX "IX_Asset_PurchaseReceiptID" ON "Asset" ("PurchaseReceiptID");

CREATE INDEX "IX_AssetCategory_BusinessID" ON "AssetCategory" ("BusinessID");

CREATE INDEX "IX_AssetDepreciationRecord_BusinessID" ON "AssetDepreciationRecord" ("BusinessID");

CREATE INDEX "IX_AssetDepreciationRecord_FinancialBookID" ON "AssetDepreciationRecord" ("FinancialBookID");

CREATE INDEX "IX_AssetTransfer_AssetID" ON "AssetTransfer" ("AssetID");

CREATE INDEX "IX_AssetTransfer_BusinessID" ON "AssetTransfer" ("BusinessID");

CREATE INDEX "IX_AssetTransfer_DestinationContactID" ON "AssetTransfer" ("DestinationContactID");

CREATE INDEX "IX_AssetTransfer_DestinationDepartmentID" ON "AssetTransfer" ("DestinationDepartmentID");

CREATE INDEX "IX_AssetTransfer_DestinationLocationID" ON "AssetTransfer" ("DestinationLocationID");

CREATE UNIQUE INDEX "IX_AssetTransfer_PreviousShareTransferID" ON "AssetTransfer" ("PreviousShareTransferID");

CREATE INDEX "IX_AssetTransfer_SourceContactID" ON "AssetTransfer" ("SourceContactID");

CREATE INDEX "IX_AssetTransfer_SourceDepartmentID" ON "AssetTransfer" ("SourceDepartmentID");

CREATE INDEX "IX_AssetTransfer_SourceLocationID" ON "AssetTransfer" ("SourceLocationID");

CREATE INDEX "IX_AssetValueAmend_BusinessID" ON "AssetValueAmend" ("BusinessID");

CREATE INDEX "IX_AssetValueAmend_FinancialBookID" ON "AssetValueAmend" ("FinancialBookID");

CREATE INDEX "IX_Bank_CountryID" ON "Bank" ("CountryID");

CREATE INDEX "IX_BankGuarantee_BankAccountID" ON "BankGuarantee" ("BankAccountID");

CREATE INDEX "IX_BankGuarantee_BankProfileID" ON "BankGuarantee" ("BankProfileID");

CREATE INDEX "IX_BankGuarantee_BusinessID" ON "BankGuarantee" ("BusinessID");

CREATE INDEX "IX_BankGuarantee_BusinessProfileRecordID" ON "BankGuarantee" ("BusinessProfileRecordID");

CREATE INDEX "IX_BankGuarantee_ContactID" ON "BankGuarantee" ("ContactID");

CREATE INDEX "IX_BankGuarantee_CurrencyID" ON "BankGuarantee" ("CurrencyID");

CREATE INDEX "IX_BankGuarantee_OrderID" ON "BankGuarantee" ("OrderID");

CREATE INDEX "IX_BankGuarantee_ProjectID" ON "BankGuarantee" ("ProjectID");

CREATE INDEX "IX_BillingCoupon_BusinessID" ON "BillingCoupon" ("BusinessID");

CREATE INDEX "IX_BillingCoupon_BusinessProfileRecordID" ON "BillingCoupon" ("BusinessProfileRecordID");

CREATE INDEX "IX_BillingCoupon_CurrencyID" ON "BillingCoupon" ("CurrencyID");

CREATE UNIQUE INDEX "IX_BillingItemRecord_AccountingEntryID" ON "BillingItemRecord" ("AccountingEntryID");

CREATE INDEX "IX_BillingItemRecord_BillingCouponCartRecord_BillingCouponID" ON "BillingItemRecord" ("BillingCouponCartRecord_BillingCouponID");

CREATE INDEX "IX_BillingItemRecord_BillingCouponID" ON "BillingItemRecord" ("BillingCouponID");

CREATE INDEX "IX_BillingItemRecord_BillingCouponOrderRecord_BillingCouponID" ON "BillingItemRecord" ("BillingCouponOrderRecord_BillingCouponID");

CREATE INDEX "IX_BillingItemRecord_BusinessID" ON "BillingItemRecord" ("BusinessID");

CREATE INDEX "IX_BillingItemRecord_BusinessProfileRecordID" ON "BillingItemRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_BillingItemRecord_CartID" ON "BillingItemRecord" ("CartID");

CREATE INDEX "IX_BillingItemRecord_CurrencyID" ON "BillingItemRecord" ("CurrencyID");

CREATE INDEX "IX_BillingItemRecord_DealUnitID" ON "BillingItemRecord" ("DealUnitID");

CREATE INDEX "IX_BillingItemRecord_InvoiceID" ON "BillingItemRecord" ("InvoiceID");

CREATE INDEX "IX_BillingItemRecord_ItemID" ON "BillingItemRecord" ("ItemID");

CREATE INDEX "IX_BillingItemRecord_ItemPriceID" ON "BillingItemRecord" ("ItemPriceID");

CREATE INDEX "IX_BillingItemRecord_ItemShipmentPolicyID" ON "BillingItemRecord" ("ItemShipmentPolicyID");

CREATE INDEX "IX_BillingItemRecord_LocationID" ON "BillingItemRecord" ("LocationID");

CREATE INDEX "IX_BillingItemRecord_OrderID" ON "BillingItemRecord" ("OrderID");

CREATE INDEX "IX_BillingItemRecord_OrderItemRecord_OrderID" ON "BillingItemRecord" ("OrderItemRecord_OrderID");

CREATE INDEX "IX_BillingItemRecord_ParentBillingItemRecordID" ON "BillingItemRecord" ("ParentBillingItemRecordID");

CREATE INDEX "IX_BillingItemRecord_ParentOrderID" ON "BillingItemRecord" ("ParentOrderID");

CREATE INDEX "IX_BillingItemRecord_PriceListItemID" ON "BillingItemRecord" ("PriceListItemID");

CREATE INDEX "IX_BillingItemRecord_QuoteID" ON "BillingItemRecord" ("QuoteID");

CREATE INDEX "IX_BillingItemRecord_QuoteItemRecordID" ON "BillingItemRecord" ("QuoteItemRecordID");

CREATE INDEX "IX_BillingItemRecord_RefundPolicyID" ON "BillingItemRecord" ("RefundPolicyID");

CREATE INDEX "IX_BillingItemRecord_ReturnPolicyID" ON "BillingItemRecord" ("ReturnPolicyID");

CREATE INDEX "IX_BillingItemRecord_UnitGroupID" ON "BillingItemRecord" ("UnitGroupID");

CREATE INDEX "IX_BillingItemRecord_UnitID" ON "BillingItemRecord" ("UnitID");

CREATE INDEX "IX_BillingItemRecord_WarrantyPolicyID" ON "BillingItemRecord" ("WarrantyPolicyID");

CREATE INDEX "IX_Blockchain_BusinessID" ON "Blockchain" ("BusinessID");

CREATE INDEX "IX_Blockchain_BusinessProfileRecordID" ON "Blockchain" ("BusinessProfileRecordID");

CREATE INDEX "IX_BlockchainBlock_BlockchainID" ON "BlockchainBlock" ("BlockchainID");

CREATE INDEX "IX_BlockchainBlock_NonFungibleTokenID" ON "BlockchainBlock" ("NonFungibleTokenID");

CREATE UNIQUE INDEX "IX_BlockchainBlock_PreviousBlockchainBlockID" ON "BlockchainBlock" ("PreviousBlockchainBlockID");

CREATE INDEX "IX_BlockchainBlock_WalletAccountID" ON "BlockchainBlock" ("WalletAccountID");

CREATE INDEX "IX_BlockRecord_BlockedSocialProfileID" ON "BlockRecord" ("BlockedSocialProfileID");

CREATE INDEX "IX_BlockRecord_BlockerSocialProfileID" ON "BlockRecord" ("BlockerSocialProfileID");

CREATE INDEX "IX_BrandRecord_BrandID" ON "BrandRecord" ("BrandID");

CREATE INDEX "IX_BrandRecord_ItemID" ON "BrandRecord" ("ItemID");

CREATE INDEX "IX_Budget_BusinessID" ON "Budget" ("BusinessID");

CREATE INDEX "IX_Budget_CostCentreID" ON "Budget" ("CostCentreID");

CREATE INDEX "IX_Budget_FiscalYearID" ON "Budget" ("FiscalYearID");

CREATE INDEX "IX_Budget_ProjectID" ON "Budget" ("ProjectID");

CREATE INDEX "IX_Business_BusinessIndustryID" ON "Business" ("BusinessIndustryID");

CREATE INDEX "IX_Business_BusinessSegmentID" ON "Business" ("BusinessSegmentID");

CREATE INDEX "IX_Business_BusinessSizeID" ON "Business" ("BusinessSizeID");

CREATE INDEX "IX_Business_BusinessTypeID" ON "Business" ("BusinessTypeID");

CREATE INDEX "IX_Business_CityID" ON "Business" ("CityID");

CREATE INDEX "IX_Business_CountryID" ON "Business" ("CountryID");

CREATE INDEX "IX_Business_CountryLanguageID" ON "Business" ("CountryLanguageID");

CREATE INDEX "IX_Business_CountryStateID" ON "Business" ("CountryStateID");

CREATE INDEX "IX_Business_CurrencyID" ON "Business" ("CurrencyID");

CREATE INDEX "IX_Business_ParentBusinessID" ON "Business" ("ParentBusinessID");

CREATE INDEX "IX_Business_TimezoneID" ON "Business" ("TimezoneID");

CREATE INDEX "IX_BusinessApplication_BusinessID" ON "BusinessApplication" ("BusinessID");

CREATE INDEX "IX_BusinessApplication_BusinessProfileRecordID" ON "BusinessApplication" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessApplicationQueryRecord_BusinessApplicationID" ON "BusinessApplicationQueryRecord" ("BusinessApplicationID");

CREATE INDEX "IX_BusinessApplicationReplyURL_BusinessApplicationID" ON "BusinessApplicationReplyURL" ("BusinessApplicationID");

CREATE INDEX "IX_BusinessApplicationRequestedPermission_BusinessApplicationID" ON "BusinessApplicationRequestedPermission" ("BusinessApplicationID");

CREATE INDEX "IX_BusinessApplicationRequestedPermission_BusinessPermissionID" ON "BusinessApplicationRequestedPermission" ("BusinessPermissionID");

CREATE INDEX "IX_BusinessApplicationSecret_AccessKeyPairID" ON "BusinessApplicationSecret" ("AccessKeyPairID");

CREATE INDEX "IX_BusinessApplicationSecret_BusinessApplicationID" ON "BusinessApplicationSecret" ("BusinessApplicationID");

CREATE INDEX "IX_BusinessApplicationSecret_JwtSigningAccessKeyPairID" ON "BusinessApplicationSecret" ("JwtSigningAccessKeyPairID");

CREATE INDEX "IX_BusinessDepartment_BusinessID" ON "BusinessDepartment" ("BusinessID");

CREATE INDEX "IX_BusinessDepartment_BusinessProfileRecordID" ON "BusinessDepartment" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessDepartment_OrganizationProfileID" ON "BusinessDepartment" ("OrganizationProfileID");

CREATE INDEX "IX_BusinessDepartment_ParentDepartmentID" ON "BusinessDepartment" ("ParentDepartmentID");

CREATE INDEX "IX_BusinessDomain_BusinessID" ON "BusinessDomain" ("BusinessID");

CREATE INDEX "IX_BusinessIndustry_BusinessProfileRecordID" ON "BusinessIndustry" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessIndustry_ParentBusinessIndustryID" ON "BusinessIndustry" ("ParentBusinessIndustryID");

CREATE INDEX "IX_BusinessIndustryRecord_BusinessID" ON "BusinessIndustryRecord" ("BusinessID");

CREATE INDEX "IX_BusinessIndustryRecord_BusinessIndustryID" ON "BusinessIndustryRecord" ("BusinessIndustryID");

CREATE INDEX "IX_BusinessPermission_BusinessID" ON "BusinessPermission" ("BusinessID");

CREATE INDEX "IX_BusinessPermission_BusinessProfileRecordID" ON "BusinessPermission" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessPermissionGrant_BusinessApplicationID" ON "BusinessPermissionGrant" ("BusinessApplicationID");

CREATE INDEX "IX_BusinessPermissionGrant_BusinessID" ON "BusinessPermissionGrant" ("BusinessID");

CREATE INDEX "IX_BusinessPermissionGrant_BusinessPermissionID" ON "BusinessPermissionGrant" ("BusinessPermissionID");

CREATE INDEX "IX_BusinessPermissionGrant_BusinessProfileRecordID" ON "BusinessPermissionGrant" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessPermissionGrant_BusinessSecurityRoleID" ON "BusinessPermissionGrant" ("BusinessSecurityRoleID");

CREATE INDEX "IX_BusinessPermissionGrant_GrantorBusinessProfileRecordID" ON "BusinessPermissionGrant" ("GrantorBusinessProfileRecordID");

CREATE INDEX "IX_BusinessPosition_BusinessID" ON "BusinessPosition" ("BusinessID");

CREATE INDEX "IX_BusinessPosition_BusinessProfileRecordID" ON "BusinessPosition" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessProcess_BusinessID" ON "BusinessProcess" ("BusinessID");

CREATE INDEX "IX_BusinessProcess_BusinessProfileRecordID" ON "BusinessProcess" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessProcess_ParentBusinessProcessID" ON "BusinessProcess" ("ParentBusinessProcessID");

CREATE INDEX "IX_BusinessProcessStage_AppraisalWorkflowID" ON "BusinessProcessStage" ("AppraisalWorkflowID");

CREATE INDEX "IX_BusinessProcessStage_BusinessID" ON "BusinessProcessStage" ("BusinessID");

CREATE INDEX "IX_BusinessProcessStage_BusinessProcessID" ON "BusinessProcessStage" ("BusinessProcessID");

CREATE INDEX "IX_BusinessProcessStage_BusinessProfileRecordID" ON "BusinessProcessStage" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessProcessStage_DealUnitFlowID" ON "BusinessProcessStage" ("DealUnitFlowID");

CREATE INDEX "IX_BusinessProcessStage_ParentBusinessProcessStageID" ON "BusinessProcessStage" ("ParentBusinessProcessStageID");

CREATE INDEX "IX_BusinessProcessStageRelation_ChildBusinessProcessStageID" ON "BusinessProcessStageRelation" ("ChildBusinessProcessStageID");

CREATE INDEX "IX_BusinessProcessStageRelation_ParentBusinessProcessStageID" ON "BusinessProcessStageRelation" ("ParentBusinessProcessStageID");

CREATE INDEX "IX_BusinessProfileInvitation_BusinessID" ON "BusinessProfileInvitation" ("BusinessID");

CREATE INDEX "IX_BusinessProfileInvitation_BusinessProfileRecordID" ON "BusinessProfileInvitation" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessProfileRecord_AccountHolderID" ON "BusinessProfileRecord" ("AccountHolderID");

CREATE INDEX "IX_BusinessProfileRecord_BusinessID" ON "BusinessProfileRecord" ("BusinessID");

CREATE INDEX "IX_BusinessRelationship_ChildBusinessID" ON "BusinessRelationship" ("ChildBusinessID");

CREATE INDEX "IX_BusinessRelationship_ParentBusinessID" ON "BusinessRelationship" ("ParentBusinessID");

CREATE INDEX "IX_BusinessSecurityLog_BusinessID" ON "BusinessSecurityLog" ("BusinessID");

CREATE INDEX "IX_BusinessSecurityLog_BusinessProfileRecordID" ON "BusinessSecurityLog" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessSecurityLog_SignedDocumentID" ON "BusinessSecurityLog" ("SignedDocumentID");

CREATE INDEX "IX_BusinessSecurityLog_SigningCertificateID" ON "BusinessSecurityLog" ("SigningCertificateID");

CREATE INDEX "IX_BusinessSecurityLog_SigningProfileID" ON "BusinessSecurityLog" ("SigningProfileID");

CREATE INDEX "IX_BusinessSecurityRole_BusinessID" ON "BusinessSecurityRole" ("BusinessID");

CREATE INDEX "IX_BusinessSecurityRole_BusinessProfileRecordID" ON "BusinessSecurityRole" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessTeam_BusinessID" ON "BusinessTeam" ("BusinessID");

CREATE INDEX "IX_BusinessTeam_BusinessProfileRecordID" ON "BusinessTeam" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessTeam_BusinessUnitID" ON "BusinessTeam" ("BusinessUnitID");

CREATE INDEX "IX_BusinessTeam_OrganizationProfileID" ON "BusinessTeam" ("OrganizationProfileID");

CREATE INDEX "IX_BusinessTeamRecord_BusinessID" ON "BusinessTeamRecord" ("BusinessID");

CREATE INDEX "IX_BusinessTeamRecord_BusinessProfileRecordID" ON "BusinessTeamRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessTeamRecord_BusinessTeamID" ON "BusinessTeamRecord" ("BusinessTeamID");

CREATE INDEX "IX_BusinessTeamRecord_ContactID" ON "BusinessTeamRecord" ("ContactID");

CREATE INDEX "IX_BusinessTeamRecord_EmployeeProfileID" ON "BusinessTeamRecord" ("EmployeeProfileID");

CREATE INDEX "IX_BusinessTeamRecord_ProjectID" ON "BusinessTeamRecord" ("ProjectID");

CREATE UNIQUE INDEX "IX_BusinessTenantSettings_BusinessID" ON "BusinessTenantSettings" ("BusinessID");

CREATE INDEX "IX_BusinessUnit_BusinessID" ON "BusinessUnit" ("BusinessID");

CREATE INDEX "IX_BusinessUnit_BusinessProfileRecordID" ON "BusinessUnit" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessUnit_CountryID" ON "BusinessUnit" ("CountryID");

CREATE INDEX "IX_BusinessUnit_OrganizationProfileID" ON "BusinessUnit" ("OrganizationProfileID");

CREATE INDEX "IX_BusinessUnit_ParentBusinessUnitID" ON "BusinessUnit" ("ParentBusinessUnitID");

CREATE INDEX "IX_BusinessUnitRecord_BusinessID" ON "BusinessUnitRecord" ("BusinessID");

CREATE INDEX "IX_BusinessUnitRecord_BusinessProfileRecordID" ON "BusinessUnitRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_BusinessUnitRecord_BusinessUnitID" ON "BusinessUnitRecord" ("BusinessUnitID");

CREATE UNIQUE INDEX "IX_Cart_AccountHolderID" ON "Cart" ("AccountHolderID");

CREATE UNIQUE INDEX "IX_Cart_BusinessID" ON "Cart" ("BusinessID");

CREATE INDEX "IX_Cart_CityID" ON "Cart" ("CityID");

CREATE UNIQUE INDEX "IX_Cart_ContactID" ON "Cart" ("ContactID");

CREATE INDEX "IX_Cart_CountryID" ON "Cart" ("CountryID");

CREATE INDEX "IX_Cart_CountryStateID" ON "Cart" ("CountryStateID");

CREATE INDEX "IX_Cart_CurrencyID" ON "Cart" ("CurrencyID");

CREATE INDEX "IX_Cart_GuestCart_BusinessID" ON "Cart" ("GuestCart_BusinessID");

CREATE INDEX "IX_Cart_IPLookupID" ON "Cart" ("IPLookupID");

CREATE INDEX "IX_Cart_LocationID" ON "Cart" ("LocationID");

CREATE INDEX "IX_CartRecord_CartID" ON "CartRecord" ("CartID");

CREATE INDEX "IX_CartRecord_CurrencyID" ON "CartRecord" ("CurrencyID");

CREATE INDEX "IX_CartRecord_ItemCartRecord_ItemID" ON "CartRecord" ("ItemCartRecord_ItemID");

CREATE INDEX "IX_CartRecord_ItemID" ON "CartRecord" ("ItemID");

CREATE INDEX "IX_CartRecord_ItemShippingPolicyID" ON "CartRecord" ("ItemShippingPolicyID");

CREATE INDEX "IX_CartRecord_RecentlyViewedItemRecord_ItemID" ON "CartRecord" ("RecentlyViewedItemRecord_ItemID");

CREATE INDEX "IX_CartRecord_RefundPolicyID" ON "CartRecord" ("RefundPolicyID");

CREATE INDEX "IX_CartRecord_ReturnPolicyID" ON "CartRecord" ("ReturnPolicyID");

CREATE INDEX "IX_CartRecord_ShippingAddressID" ON "CartRecord" ("ShippingAddressID");

CREATE INDEX "IX_CartRecord_WarrantyPolicyID" ON "CartRecord" ("WarrantyPolicyID");

CREATE INDEX "IX_Cell_ColumnID" ON "Cell" ("ColumnID");

CREATE INDEX "IX_Cell_RowID" ON "Cell" ("RowID");

CREATE INDEX "IX_City_CountryID" ON "City" ("CountryID");

CREATE INDEX "IX_City_StateID" ON "City" ("StateID");

CREATE INDEX "IX_CognitiveAgent_BusinessID" ON "CognitiveAgent" ("BusinessID");

CREATE INDEX "IX_CognitiveAgent_BusinessProfileRecordID" ON "CognitiveAgent" ("BusinessProfileRecordID");

CREATE INDEX "IX_CognitiveAgentConversation_AccountHolderID" ON "CognitiveAgentConversation" ("AccountHolderID");

CREATE INDEX "IX_CognitiveAgentConversation_BusinessID" ON "CognitiveAgentConversation" ("BusinessID");

CREATE INDEX "IX_CognitiveAgentConversation_BusinessProfileRecordID" ON "CognitiveAgentConversation" ("BusinessProfileRecordID");

CREATE INDEX "IX_CognitiveAgentConversation_CognitiveAgentID" ON "CognitiveAgentConversation" ("CognitiveAgentID");

CREATE INDEX "IX_CognitiveAgentConversation_IndividualID" ON "CognitiveAgentConversation" ("IndividualID");

CREATE INDEX "IX_CognitiveAgentConversation_OrganizationID" ON "CognitiveAgentConversation" ("OrganizationID");

CREATE INDEX "IX_CognitiveAgentConversation_ReceptorBusinessID" ON "CognitiveAgentConversation" ("ReceptorBusinessID");

CREATE INDEX "IX_Column_EntityID" ON "Column" ("EntityID");

CREATE INDEX "IX_Commission_BusinessID" ON "Commission" ("BusinessID");

CREATE INDEX "IX_Commission_BusinessProfileRecordID" ON "Commission" ("BusinessProfileRecordID");

CREATE INDEX "IX_Commission_EmmisorContactID" ON "Commission" ("EmmisorContactID");

CREATE INDEX "IX_Commission_EmmisorWalletAccountID" ON "Commission" ("EmmisorWalletAccountID");

CREATE INDEX "IX_Commission_PaymentID" ON "Commission" ("PaymentID");

CREATE INDEX "IX_Commission_ReceptorContactID" ON "Commission" ("ReceptorContactID");

CREATE INDEX "IX_Commission_ReceptorWalletAccountID" ON "Commission" ("ReceptorWalletAccountID");

CREATE INDEX "IX_Commission_SalaryID" ON "Commission" ("SalaryID");

CREATE INDEX "IX_Contact_AccountHolderID" ON "Contact" ("AccountHolderID");

CREATE INDEX "IX_Contact_BusinessID" ON "Contact" ("BusinessID");

CREATE INDEX "IX_Contact_BusinessIndustryID" ON "Contact" ("BusinessIndustryID");

CREATE INDEX "IX_Contact_BusinessProfileRecordID" ON "Contact" ("BusinessProfileRecordID");

CREATE INDEX "IX_Contact_BusinessSegmentID" ON "Contact" ("BusinessSegmentID");

CREATE INDEX "IX_Contact_BusinessSizeID" ON "Contact" ("BusinessSizeID");

CREATE INDEX "IX_Contact_BusinessTeamID" ON "Contact" ("BusinessTeamID");

CREATE INDEX "IX_Contact_CityID" ON "Contact" ("CityID");

CREATE INDEX "IX_Contact_ContactSourceID" ON "Contact" ("ContactSourceID");

CREATE INDEX "IX_Contact_CountryID" ON "Contact" ("CountryID");

CREATE INDEX "IX_Contact_CountryLanguageID" ON "Contact" ("CountryLanguageID");

CREATE INDEX "IX_Contact_CountryStateID" ON "Contact" ("CountryStateID");

CREATE INDEX "IX_Contact_CurrencyID" ON "Contact" ("CurrencyID");

CREATE INDEX "IX_Contact_FinancialBookID" ON "Contact" ("FinancialBookID");

CREATE INDEX "IX_Contact_ItemShippingPolicyID" ON "Contact" ("ItemShippingPolicyID");

CREATE INDEX "IX_Contact_OrganizationID" ON "Contact" ("OrganizationID");

CREATE INDEX "IX_Contact_OwnerContactID" ON "Contact" ("OwnerContactID");

CREATE INDEX "IX_Contact_ParentContactID" ON "Contact" ("ParentContactID");

CREATE INDEX "IX_Contact_PartnerProfileID" ON "Contact" ("PartnerProfileID");

CREATE INDEX "IX_Contact_PaymentTermID" ON "Contact" ("PaymentTermID");

CREATE INDEX "IX_Contact_PrimaryContactID" ON "Contact" ("PrimaryContactID");

CREATE INDEX "IX_Contact_RelatedAccountHolderID" ON "Contact" ("RelatedAccountHolderID");

CREATE INDEX "IX_Contact_RelatedBusinessID" ON "Contact" ("RelatedBusinessID");

CREATE UNIQUE INDEX "IX_Contact_RelatedBusinessProfileRecordID" ON "Contact" ("RelatedBusinessProfileRecordID");

CREATE INDEX "IX_Contact_ShippingMethodID" ON "Contact" ("ShippingMethodID");

CREATE INDEX "IX_Contact_TerritoryID" ON "Contact" ("TerritoryID");

CREATE INDEX "IX_Contact_TimezoneID" ON "Contact" ("TimezoneID");

CREATE INDEX "IX_ContactGroupRecord_ContactID" ON "ContactGroupRecord" ("ContactID");

CREATE INDEX "IX_ContactGroupRecord_ContactsGroupID" ON "ContactGroupRecord" ("ContactsGroupID");

CREATE INDEX "IX_ContactProfile_BankID" ON "ContactProfile" ("BankID");

CREATE INDEX "IX_ContactProfile_BusinessID" ON "ContactProfile" ("BusinessID");

CREATE INDEX "IX_ContactProfile_BusinessProfileRecordID" ON "ContactProfile" ("BusinessProfileRecordID");

CREATE INDEX "IX_ContactProfile_CityID" ON "ContactProfile" ("CityID");

CREATE INDEX "IX_ContactProfile_ContactID" ON "ContactProfile" ("ContactID");

CREATE INDEX "IX_ContactProfile_CountryID" ON "ContactProfile" ("CountryID");

CREATE INDEX "IX_ContactProfile_CountryStateID" ON "ContactProfile" ("CountryStateID");

CREATE INDEX "IX_ContactProfile_CurrencyID" ON "ContactProfile" ("CurrencyID");

CREATE INDEX "IX_ContactProfile_EmployeeTypeID" ON "ContactProfile" ("EmployeeTypeID");

CREATE INDEX "IX_ContactProfile_FiscalAuthorityID" ON "ContactProfile" ("FiscalAuthorityID");

CREATE INDEX "IX_ContactProfile_FiscalIdentificationTypeID" ON "ContactProfile" ("FiscalIdentificationTypeID");

CREATE INDEX "IX_ContactProfile_FiscalRegimeID" ON "ContactProfile" ("FiscalRegimeID");

CREATE INDEX "IX_ContactProfile_JobTitleID" ON "ContactProfile" ("JobTitleID");

CREATE INDEX "IX_ContactProfile_MarketingCampaignID" ON "ContactProfile" ("MarketingCampaignID");

CREATE INDEX "IX_ContactProfile_PartnerProgramTierID" ON "ContactProfile" ("PartnerProgramTierID");

CREATE INDEX "IX_ContactProfile_WalletAccountID" ON "ContactProfile" ("WalletAccountID");

CREATE INDEX "IX_ContactRelation_BusinessID" ON "ContactRelation" ("BusinessID");

CREATE INDEX "IX_ContactRelation_ContactID" ON "ContactRelation" ("ContactID");

CREATE INDEX "IX_ContactRelation_ContactRelationTypeID" ON "ContactRelation" ("ContactRelationTypeID");

CREATE INDEX "IX_ContactRelation_RelatedContactID" ON "ContactRelation" ("RelatedContactID");

CREATE INDEX "IX_ContactRelationType_BusinessID" ON "ContactRelationType" ("BusinessID");

CREATE INDEX "IX_ContactSource_BusinessID" ON "ContactSource" ("BusinessID");

CREATE INDEX "IX_Conversation_SocialProfileID" ON "Conversation" ("SocialProfileID");

CREATE INDEX "IX_Conversation_SupportTicketID" ON "Conversation" ("SupportTicketID");

CREATE INDEX "IX_CostCentre_BusinessID" ON "CostCentre" ("BusinessID");

CREATE INDEX "IX_CostCentre_CostCentresGroupID" ON "CostCentre" ("CostCentresGroupID");

CREATE INDEX "IX_CostCentre_ParentCostCentreID" ON "CostCentre" ("ParentCostCentreID");

CREATE INDEX "IX_CostCentresGroup_BusinessID" ON "CostCentresGroup" ("BusinessID");

CREATE INDEX "IX_CostCentresGroup_ParentCostCentresGroupID" ON "CostCentresGroup" ("ParentCostCentresGroupID");

CREATE INDEX "IX_CountryAltSpelling_CountryID" ON "CountryAltSpelling" ("CountryID");

CREATE INDEX "IX_CountryBorder_BorderCountryID" ON "CountryBorder" ("BorderCountryID");

CREATE INDEX "IX_CountryBorder_CountryID" ON "CountryBorder" ("CountryID");

CREATE INDEX "IX_CountryCallingCode_CountryID" ON "CountryCallingCode" ("CountryID");

CREATE INDEX "IX_CountryLanguageRecord_CountryID" ON "CountryLanguageRecord" ("CountryID");

CREATE INDEX "IX_CountryLanguageRecord_CountryLanguageID" ON "CountryLanguageRecord" ("CountryLanguageID");

CREATE UNIQUE INDEX "IX_CountryNameTranslations_CountryID" ON "CountryNameTranslations" ("CountryID");

CREATE INDEX "IX_CountryRegionalBlockRecord_CountryID" ON "CountryRegionalBlockRecord" ("CountryID");

CREATE INDEX "IX_CountryRegionalBlockRecord_RegionalBlockID" ON "CountryRegionalBlockRecord" ("RegionalBlockID");

CREATE INDEX "IX_CountryState_CountryID" ON "CountryState" ("CountryID");

CREATE INDEX "IX_CountryTimeZoneRecord_CountryID" ON "CountryTimeZoneRecord" ("CountryID");

CREATE INDEX "IX_CountryTimeZoneRecord_TimezoneID" ON "CountryTimeZoneRecord" ("TimezoneID");

CREATE INDEX "IX_CountryTopLevelDomain_CountryID" ON "CountryTopLevelDomain" ("CountryID");

CREATE INDEX "IX_CourrierItemShippingPolicyRecord_BusinessID" ON "CourrierItemShippingPolicyRecord" ("BusinessID");

CREATE INDEX "IX_CourrierItemShippingPolicyRecord_ItemShippingPolicyID" ON "CourrierItemShippingPolicyRecord" ("ItemShippingPolicyID");

CREATE INDEX "IX_CourrierItemShippingPolicyRecord_ShippingCourierID" ON "CourrierItemShippingPolicyRecord" ("ShippingCourierID");

CREATE INDEX "IX_CourseAssignment_BusinessID" ON "CourseAssignment" ("BusinessID");

CREATE INDEX "IX_CourseAssignment_BusinessProfileRecordID" ON "CourseAssignment" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseAssignment_CourseAssignmentTypeID" ON "CourseAssignment" ("CourseAssignmentTypeID");

CREATE INDEX "IX_CourseAssignment_CourseCohortID" ON "CourseAssignment" ("CourseCohortID");

CREATE INDEX "IX_CourseAssignment_CourseGradingRubricID" ON "CourseAssignment" ("CourseGradingRubricID");

CREATE INDEX "IX_CourseAssignment_CourseID" ON "CourseAssignment" ("CourseID");

CREATE INDEX "IX_CourseAssignment_CourseProblemSetID" ON "CourseAssignment" ("CourseProblemSetID");

CREATE INDEX "IX_CourseAssignment_CourseUnitID" ON "CourseAssignment" ("CourseUnitID");

CREATE INDEX "IX_CourseAssignmentSubmit_BusinessID" ON "CourseAssignmentSubmit" ("BusinessID");

CREATE INDEX "IX_CourseAssignmentSubmit_CourseAssignmentID" ON "CourseAssignmentSubmit" ("CourseAssignmentID");

CREATE INDEX "IX_CourseAssignmentSubmit_CourseID" ON "CourseAssignmentSubmit" ("CourseID");

CREATE INDEX "IX_CourseAssignmentSubmit_GradingCriteriaCategoryID" ON "CourseAssignmentSubmit" ("GradingCriteriaCategoryID");

CREATE INDEX "IX_CourseAssignmentSubmit_InstructorProfileID" ON "CourseAssignmentSubmit" ("InstructorProfileID");

CREATE INDEX "IX_CourseAssignmentSubmit_StudentProfileID" ON "CourseAssignmentSubmit" ("StudentProfileID");

CREATE INDEX "IX_CourseAssignmentType_BusinessID" ON "CourseAssignmentType" ("BusinessID");

CREATE INDEX "IX_CourseAssignmentType_BusinessProfileRecordID" ON "CourseAssignmentType" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseAssignmentType_CourseID" ON "CourseAssignmentType" ("CourseID");

CREATE INDEX "IX_CourseCohort_BusinessID" ON "CourseCohort" ("BusinessID");

CREATE INDEX "IX_CourseCohort_BusinessProfileRecordID" ON "CourseCohort" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseCohort_CourseContentGroupID" ON "CourseCohort" ("CourseContentGroupID");

CREATE INDEX "IX_CourseCohort_CourseID" ON "CourseCohort" ("CourseID");

CREATE INDEX "IX_CourseCollectionRecord_CourseCollectionID" ON "CourseCollectionRecord" ("CourseCollectionID");

CREATE INDEX "IX_CourseCollectionRecord_CourseID" ON "CourseCollectionRecord" ("CourseID");

CREATE INDEX "IX_CourseCompletionCertificate_BusinessID" ON "CourseCompletionCertificate" ("BusinessID");

CREATE INDEX "IX_CourseCompletionCertificate_BusinessProfileRecordID" ON "CourseCompletionCertificate" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseCompletionCertificate_CourseCompletionCertificateTemp~" ON "CourseCompletionCertificate" ("CourseCompletionCertificateTemplateID");

CREATE UNIQUE INDEX "IX_CourseCompletionCertificate_CourseEnrollmentID" ON "CourseCompletionCertificate" ("CourseEnrollmentID");

CREATE INDEX "IX_CourseCompletionCertificate_CourseID" ON "CourseCompletionCertificate" ("CourseID");

CREATE INDEX "IX_CourseCompletionCertificate_StudentProfileID" ON "CourseCompletionCertificate" ("StudentProfileID");

CREATE INDEX "IX_CourseContentGroup_BusinessID" ON "CourseContentGroup" ("BusinessID");

CREATE INDEX "IX_CourseContentGroup_BusinessProfileRecordID" ON "CourseContentGroup" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseContentGroup_CourseID" ON "CourseContentGroup" ("CourseID");

CREATE INDEX "IX_CourseEnrollment_BusinessID" ON "CourseEnrollment" ("BusinessID");

CREATE INDEX "IX_CourseEnrollment_BusinessProfileRecordID" ON "CourseEnrollment" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseEnrollment_CourseCohortID" ON "CourseEnrollment" ("CourseCohortID");

CREATE INDEX "IX_CourseEnrollment_CourseID" ON "CourseEnrollment" ("CourseID");

CREATE INDEX "IX_CourseEnrollment_StudentProfileID" ON "CourseEnrollment" ("StudentProfileID");

CREATE INDEX "IX_CourseGradingCriteria_BusinessID" ON "CourseGradingCriteria" ("BusinessID");

CREATE INDEX "IX_CourseGradingCriteria_BusinessProfileRecordID" ON "CourseGradingCriteria" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseGradingCriteria_GradingRubricID" ON "CourseGradingCriteria" ("GradingRubricID");

CREATE INDEX "IX_CourseGradingCriteriaCategory_BusinessID" ON "CourseGradingCriteriaCategory" ("BusinessID");

CREATE INDEX "IX_CourseGradingCriteriaCategory_BusinessProfileRecordID" ON "CourseGradingCriteriaCategory" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseGradingCriteriaCategory_CourseGradingCriteriaID" ON "CourseGradingCriteriaCategory" ("CourseGradingCriteriaID");

CREATE INDEX "IX_CourseGradingCriteriaCategory_CourseGradingRubricID" ON "CourseGradingCriteriaCategory" ("CourseGradingRubricID");

CREATE INDEX "IX_CourseGradingRubric_BusinessID" ON "CourseGradingRubric" ("BusinessID");

CREATE INDEX "IX_CourseGradingRubric_BusinessProfileRecordID" ON "CourseGradingRubric" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseGradingRubric_CourseID" ON "CourseGradingRubric" ("CourseID");

CREATE INDEX "IX_CourseHandout_BusinessID" ON "CourseHandout" ("BusinessID");

CREATE INDEX "IX_CourseHandout_BusinessProfileRecordID" ON "CourseHandout" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseHandout_CourseID" ON "CourseHandout" ("CourseID");

CREATE INDEX "IX_CourseHandout_CourseUnitID" ON "CourseHandout" ("CourseUnitID");

CREATE INDEX "IX_CourseLibrary_BusinessID" ON "CourseLibrary" ("BusinessID");

CREATE INDEX "IX_CourseLibrary_BusinessProfileRecordID" ON "CourseLibrary" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseLibrary_CourseID" ON "CourseLibrary" ("CourseID");

CREATE INDEX "IX_CourseLibrary_CourseUnitID" ON "CourseLibrary" ("CourseUnitID");

CREATE INDEX "IX_CourseProblemSet_BusinessID" ON "CourseProblemSet" ("BusinessID");

CREATE INDEX "IX_CourseProblemSet_BusinessProfileRecordID" ON "CourseProblemSet" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseProblemSet_CourseGradingRubricID" ON "CourseProblemSet" ("CourseGradingRubricID");

CREATE INDEX "IX_CourseProblemSet_CourseID" ON "CourseProblemSet" ("CourseID");

CREATE INDEX "IX_CourseProblemSet_CourseUnitID" ON "CourseProblemSet" ("CourseUnitID");

CREATE INDEX "IX_CourseSection_BusinessID" ON "CourseSection" ("BusinessID");

CREATE INDEX "IX_CourseSection_BusinessProfileRecordID" ON "CourseSection" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseSection_CourseID" ON "CourseSection" ("CourseID");

CREATE INDEX "IX_CourseTeamMembership_BusinessID" ON "CourseTeamMembership" ("BusinessID");

CREATE INDEX "IX_CourseTeamMembership_BusinessProfileRecordID" ON "CourseTeamMembership" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseTeamMembership_CourseID" ON "CourseTeamMembership" ("CourseID");

CREATE INDEX "IX_CourseTeamMembership_InstructorProfileID" ON "CourseTeamMembership" ("InstructorProfileID");

CREATE INDEX "IX_CourseUnit_BusinessID" ON "CourseUnit" ("BusinessID");

CREATE INDEX "IX_CourseUnit_BusinessProfileRecordID" ON "CourseUnit" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseUnit_CourseContentGroupID" ON "CourseUnit" ("CourseContentGroupID");

CREATE INDEX "IX_CourseUnit_CourseID" ON "CourseUnit" ("CourseID");

CREATE INDEX "IX_CourseUnit_CourseSectionID" ON "CourseUnit" ("CourseSectionID");

CREATE INDEX "IX_CourseWiki_BusinessID" ON "CourseWiki" ("BusinessID");

CREATE INDEX "IX_CourseWiki_BusinessProfileRecordID" ON "CourseWiki" ("BusinessProfileRecordID");

CREATE INDEX "IX_CourseWiki_CourseID" ON "CourseWiki" ("CourseID");

CREATE INDEX "IX_CourseWiki_CourseUnitID" ON "CourseWiki" ("CourseUnitID");

CREATE INDEX "IX_CreditLimit_BusinessID" ON "CreditLimit" ("BusinessID");

CREATE INDEX "IX_CreditLimit_BusinessProfileRecordID" ON "CreditLimit" ("BusinessProfileRecordID");

CREATE INDEX "IX_CreditLimit_ContactID" ON "CreditLimit" ("ContactID");

CREATE INDEX "IX_CreditLimit_ContactProfileID" ON "CreditLimit" ("ContactProfileID");

CREATE INDEX "IX_CreditLimit_CurrencyID" ON "CreditLimit" ("CurrencyID");

CREATE INDEX "IX_Currency_CountryID" ON "Currency" ("CountryID");

CREATE INDEX "IX_Curriculum_JobApplicantProfileID" ON "Curriculum" ("JobApplicantProfileID");

CREATE INDEX "IX_Curriculum_SocialProfileID" ON "Curriculum" ("SocialProfileID");

CREATE INDEX "IX_CurriculumRecord_AcademicInstitutionProfileID" ON "CurriculumRecord" ("AcademicInstitutionProfileID");

CREATE INDEX "IX_CurriculumRecord_BusinessID" ON "CurriculumRecord" ("BusinessID");

CREATE INDEX "IX_CurriculumRecord_BusinessProfileRecordID" ON "CurriculumRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_CurriculumRecord_CountryLanguageID" ON "CurriculumRecord" ("CountryLanguageID");

CREATE INDEX "IX_CurriculumRecord_CurriculumDegree_AcademicInstitutionProfil~" ON "CurriculumRecord" ("CurriculumDegree_AcademicInstitutionProfileID");

CREATE INDEX "IX_CurriculumRecord_CurriculumDiploma_AcademicInstitutionProfi~" ON "CurriculumRecord" ("CurriculumDiploma_AcademicInstitutionProfileID");

CREATE INDEX "IX_CurriculumRecord_CurriculumEducation_AcademicInstitutionPro~" ON "CurriculumRecord" ("CurriculumEducation_AcademicInstitutionProfileID");

CREATE INDEX "IX_CurriculumRecord_CurriculumExperienceID" ON "CurriculumRecord" ("CurriculumExperienceID");

CREATE INDEX "IX_CurriculumRecord_CurriculumID" ON "CurriculumRecord" ("CurriculumID");

CREATE INDEX "IX_CurriculumRecord_EmployerProfileID" ON "CurriculumRecord" ("EmployerProfileID");

CREATE INDEX "IX_CurriculumRecord_GigID" ON "CurriculumRecord" ("GigID");

CREATE INDEX "IX_CurriculumRecord_JobOfferID" ON "CurriculumRecord" ("JobOfferID");

CREATE INDEX "IX_CurriculumRecord_ProficiencyRatingModelID" ON "CurriculumRecord" ("ProficiencyRatingModelID");

CREATE INDEX "IX_CurriculumRecord_ProficiencyRatingValueID" ON "CurriculumRecord" ("ProficiencyRatingValueID");

CREATE INDEX "IX_CurriculumRecord_SkillID" ON "CurriculumRecord" ("SkillID");

CREATE INDEX "IX_CurriculumRecord_SocialProfileID" ON "CurriculumRecord" ("SocialProfileID");

CREATE INDEX "IX_CustomProperty_BusinessID" ON "CustomProperty" ("BusinessID");

CREATE INDEX "IX_CustomPropertyRecord_ContactID" ON "CustomPropertyRecord" ("ContactID");

CREATE INDEX "IX_CustomPropertyRecord_CustomPropertyID" ON "CustomPropertyRecord" ("CustomPropertyID");

CREATE INDEX "IX_CustomPropertyRecord_DealUnitID" ON "CustomPropertyRecord" ("DealUnitID");

CREATE INDEX "IX_DealUnit_AccountHolderID" ON "DealUnit" ("AccountHolderID");

CREATE INDEX "IX_DealUnit_BusinessID" ON "DealUnit" ("BusinessID");

CREATE INDEX "IX_DealUnit_BusinessProfileRecordID" ON "DealUnit" ("BusinessProfileRecordID");

CREATE INDEX "IX_DealUnit_BusinessTeamID" ON "DealUnit" ("BusinessTeamID");

CREATE INDEX "IX_DealUnit_CurrencyID" ON "DealUnit" ("CurrencyID");

CREATE INDEX "IX_DealUnit_DealUnitFlowID" ON "DealUnit" ("DealUnitFlowID");

CREATE INDEX "IX_DealUnit_DealUnitFlowStageID" ON "DealUnit" ("DealUnitFlowStageID");

CREATE INDEX "IX_DealUnit_IndividualID" ON "DealUnit" ("IndividualID");

CREATE INDEX "IX_DealUnit_MarketingCampaignID" ON "DealUnit" ("MarketingCampaignID");

CREATE INDEX "IX_DealUnit_OrganizationID" ON "DealUnit" ("OrganizationID");

CREATE INDEX "IX_DealUnit_PartnerProfileID" ON "DealUnit" ("PartnerProfileID");

CREATE INDEX "IX_DealUnit_PriceListID" ON "DealUnit" ("PriceListID");

CREATE INDEX "IX_DealUnit_ReceptorBusinessID" ON "DealUnit" ("ReceptorBusinessID");

CREATE INDEX "IX_DealUnit_TerritoryID" ON "DealUnit" ("TerritoryID");

CREATE INDEX "IX_DealUnit_WorkOrderTypeID" ON "DealUnit" ("WorkOrderTypeID");

CREATE INDEX "IX_DeliveryNote_BusinessID" ON "DeliveryNote" ("BusinessID");

CREATE INDEX "IX_Discount_BusinessID" ON "Discount" ("BusinessID");

CREATE INDEX "IX_Discount_BusinessProfileRecordID" ON "Discount" ("BusinessProfileRecordID");

CREATE INDEX "IX_Discount_DiscountListID" ON "Discount" ("DiscountListID");

CREATE INDEX "IX_DiscountList_BusinessID" ON "DiscountList" ("BusinessID");

CREATE INDEX "IX_DiscountList_BusinessProfileRecordID" ON "DiscountList" ("BusinessProfileRecordID");

CREATE INDEX "IX_DiscountList_CurrencyID" ON "DiscountList" ("CurrencyID");

CREATE INDEX "IX_EmailGroup_BusinessID" ON "EmailGroup" ("BusinessID");

CREATE INDEX "IX_EmailGroup_BusinessProfileRecordID" ON "EmailGroup" ("BusinessProfileRecordID");

CREATE INDEX "IX_EmailGroupMembership_BusinessID" ON "EmailGroupMembership" ("BusinessID");

CREATE INDEX "IX_EmailGroupMembership_BusinessProfileRecordID" ON "EmailGroupMembership" ("BusinessProfileRecordID");

CREATE INDEX "IX_EmailGroupMembership_ContactID" ON "EmailGroupMembership" ("ContactID");

CREATE INDEX "IX_EmailGroupMembership_EmailGroupID" ON "EmailGroupMembership" ("EmailGroupID");

CREATE INDEX "IX_EmailRecord_AccountHolderID" ON "EmailRecord" ("AccountHolderID");

CREATE INDEX "IX_EmailRecord_BusinessID" ON "EmailRecord" ("BusinessID");

CREATE INDEX "IX_EmailRecord_BusinessProfileRecordID" ON "EmailRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_EmailRecord_EmailSignatureID" ON "EmailRecord" ("EmailSignatureID");

CREATE INDEX "IX_EmailRecord_EmailTemplateID" ON "EmailRecord" ("EmailTemplateID");

CREATE INDEX "IX_EmailRecord_IndividualID" ON "EmailRecord" ("IndividualID");

CREATE INDEX "IX_EmailRecord_MarketingCampaignID" ON "EmailRecord" ("MarketingCampaignID");

CREATE INDEX "IX_EmailRecord_OrganizationID" ON "EmailRecord" ("OrganizationID");

CREATE INDEX "IX_EmailRecord_ReceptorBusinessID" ON "EmailRecord" ("ReceptorBusinessID");

CREATE INDEX "IX_EmployeeBenefit_BusinessID" ON "EmployeeBenefit" ("BusinessID");

CREATE INDEX "IX_EmployeeBenefit_BusinessProfileRecordID" ON "EmployeeBenefit" ("BusinessProfileRecordID");

CREATE INDEX "IX_EmployeeDegree_BusinessID" ON "EmployeeDegree" ("BusinessID");

CREATE INDEX "IX_EmployeeDegree_BusinessProfileRecordID" ON "EmployeeDegree" ("BusinessProfileRecordID");

CREATE INDEX "IX_EmployeeDegree_EmployeeProfileID" ON "EmployeeDegree" ("EmployeeProfileID");

CREATE INDEX "IX_EmployeeTransfer_BusinessID" ON "EmployeeTransfer" ("BusinessID");

CREATE INDEX "IX_EmployeeTransfer_BusinessLocationID" ON "EmployeeTransfer" ("BusinessLocationID");

CREATE INDEX "IX_EmployeeTransfer_BusinessProfileRecordID" ON "EmployeeTransfer" ("BusinessProfileRecordID");

CREATE INDEX "IX_EmployeeTransfer_EmployeeProfileID" ON "EmployeeTransfer" ("EmployeeProfileID");

CREATE INDEX "IX_EmployeeType_BusinessID" ON "EmployeeType" ("BusinessID");

CREATE INDEX "IX_EmployeeType_BusinessProfileRecordID" ON "EmployeeType" ("BusinessProfileRecordID");

CREATE INDEX "IX_Entitlement_AccountHolderID" ON "Entitlement" ("AccountHolderID");

CREATE INDEX "IX_Entitlement_BusinessID" ON "Entitlement" ("BusinessID");

CREATE INDEX "IX_Entitlement_BusinessProfileRecordID" ON "Entitlement" ("BusinessProfileRecordID");

CREATE INDEX "IX_Entitlement_ContactID" ON "Entitlement" ("ContactID");

CREATE INDEX "IX_Entitlement_ContactProfileID" ON "Entitlement" ("ContactProfileID");

CREATE INDEX "IX_Entitlement_EmployeeBenefitID" ON "Entitlement" ("EmployeeBenefitID");

CREATE INDEX "IX_Entitlement_EmployeeProfileID" ON "Entitlement" ("EmployeeProfileID");

CREATE INDEX "IX_Entitlement_IndividualID" ON "Entitlement" ("IndividualID");

CREATE INDEX "IX_Entitlement_LicenseTypeID" ON "Entitlement" ("LicenseTypeID");

CREATE INDEX "IX_Entitlement_LicensingProfileID" ON "Entitlement" ("LicensingProfileID");

CREATE INDEX "IX_Entitlement_OrganizationID" ON "Entitlement" ("OrganizationID");

CREATE INDEX "IX_Entitlement_PaymentTokenID" ON "Entitlement" ("PaymentTokenID");

CREATE INDEX "IX_Entitlement_ReceptorBusinessID" ON "Entitlement" ("ReceptorBusinessID");

CREATE INDEX "IX_Entitlement_ServiceID" ON "Entitlement" ("ServiceID");

CREATE INDEX "IX_Entitlement_ServiceLevelID" ON "Entitlement" ("ServiceLevelID");

CREATE INDEX "IX_Entitlement_SubscriptionPlanID" ON "Entitlement" ("SubscriptionPlanID");

CREATE INDEX "IX_Entitlement_WalletAccountID" ON "Entitlement" ("WalletAccountID");

CREATE INDEX "IX_ExpenseClaim_CostCentreID" ON "ExpenseClaim" ("CostCentreID");

CREATE INDEX "IX_ExpenseClaim_ExpenseTypeID" ON "ExpenseClaim" ("ExpenseTypeID");

CREATE INDEX "IX_FileUpload_AccountHolderID" ON "FileUpload" ("AccountHolderID");

CREATE INDEX "IX_FileUpload_AgreementID" ON "FileUpload" ("AgreementID");

CREATE INDEX "IX_FileUpload_AgreementRevisionID" ON "FileUpload" ("AgreementRevisionID");

CREATE INDEX "IX_FileUpload_BusinessID" ON "FileUpload" ("BusinessID");

CREATE INDEX "IX_FileUpload_BusinessProfileRecordID" ON "FileUpload" ("BusinessProfileRecordID");

CREATE INDEX "IX_FileUpload_BusinessTeamID" ON "FileUpload" ("BusinessTeamID");

CREATE INDEX "IX_FileUpload_ContactID" ON "FileUpload" ("ContactID");

CREATE INDEX "IX_FileUpload_CourseAssignmentID" ON "FileUpload" ("CourseAssignmentID");

CREATE INDEX "IX_FileUpload_CourseID" ON "FileUpload" ("CourseID");

CREATE INDEX "IX_FileUpload_CurriculumRecordID" ON "FileUpload" ("CurriculumRecordID");

CREATE INDEX "IX_FileUpload_InquiryRequestID" ON "FileUpload" ("InquiryRequestID");

CREATE INDEX "IX_FileUpload_ItemAttachment_ItemID" ON "FileUpload" ("ItemAttachment_ItemID");

CREATE INDEX "IX_FileUpload_ItemID" ON "FileUpload" ("ItemID");

CREATE INDEX "IX_FileUpload_ParentFileUploadID" ON "FileUpload" ("ParentFileUploadID");

CREATE INDEX "IX_FileUpload_PrivateMessageID" ON "FileUpload" ("PrivateMessageID");

CREATE INDEX "IX_FileUpload_SalesLiteratureID" ON "FileUpload" ("SalesLiteratureID");

CREATE INDEX "IX_FileUpload_SignedDocumentID" ON "FileUpload" ("SignedDocumentID");

CREATE INDEX "IX_FileUpload_SocialCommentID" ON "FileUpload" ("SocialCommentID");

CREATE INDEX "IX_FileUpload_SocialMediaPostID" ON "FileUpload" ("SocialMediaPostID");

CREATE INDEX "IX_FileUpload_SocialPostID" ON "FileUpload" ("SocialPostID");

CREATE INDEX "IX_FileUpload_SocialProfileID" ON "FileUpload" ("SocialProfileID");

CREATE INDEX "IX_FileUpload_SupportRequestID" ON "FileUpload" ("SupportRequestID");

CREATE INDEX "IX_FileUpload_TaskID" ON "FileUpload" ("TaskID");

CREATE INDEX "IX_FinancialBook_BusinessID" ON "FinancialBook" ("BusinessID");

CREATE INDEX "IX_FiscalAuthority_BusinessID" ON "FiscalAuthority" ("BusinessID");

CREATE INDEX "IX_FiscalAuthority_BusinessProfileRecordID" ON "FiscalAuthority" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalAuthority_CountryID" ON "FiscalAuthority" ("CountryID");

CREATE INDEX "IX_FiscalIdentificationType_BusinessID" ON "FiscalIdentificationType" ("BusinessID");

CREATE INDEX "IX_FiscalIdentificationType_BusinessProfileRecordID" ON "FiscalIdentificationType" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalIdentificationType_FiscalAuthorityID" ON "FiscalIdentificationType" ("FiscalAuthorityID");

CREATE INDEX "IX_FiscalPeriod_BusinessID" ON "FiscalPeriod" ("BusinessID");

CREATE INDEX "IX_FiscalPeriod_BusinessProfileRecordID" ON "FiscalPeriod" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalPeriod_FiscalYearID" ON "FiscalPeriod" ("FiscalYearID");

CREATE INDEX "IX_FiscalRegime_BusinessID" ON "FiscalRegime" ("BusinessID");

CREATE INDEX "IX_FiscalRegime_BusinessProfileRecordID" ON "FiscalRegime" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalRegime_FiscalAuthorityID" ON "FiscalRegime" ("FiscalAuthorityID");

CREATE INDEX "IX_FiscalResponsibility_BusinessID" ON "FiscalResponsibility" ("BusinessID");

CREATE INDEX "IX_FiscalResponsibility_BusinessProfileRecordID" ON "FiscalResponsibility" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalResponsibility_FiscalAuthorityID" ON "FiscalResponsibility" ("FiscalAuthorityID");

CREATE INDEX "IX_FiscalResponsibilityRecord_BillingProfileID" ON "FiscalResponsibilityRecord" ("BillingProfileID");

CREATE INDEX "IX_FiscalResponsibilityRecord_BusinessID" ON "FiscalResponsibilityRecord" ("BusinessID");

CREATE INDEX "IX_FiscalResponsibilityRecord_BusinessProfileRecordID" ON "FiscalResponsibilityRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalResponsibilityRecord_FiscalResponsibilityID" ON "FiscalResponsibilityRecord" ("FiscalResponsibilityID");

CREATE INDEX "IX_FiscalYear_BusinessID" ON "FiscalYear" ("BusinessID");

CREATE INDEX "IX_FiscalYear_BusinessProfileRecordID" ON "FiscalYear" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalYear_FiscalAuthorityID" ON "FiscalYear" ("FiscalAuthorityID");

CREATE INDEX "IX_FiscalYearDistribution_BudgetID" ON "FiscalYearDistribution" ("BudgetID");

CREATE INDEX "IX_FiscalYearDistribution_BusinessID" ON "FiscalYearDistribution" ("BusinessID");

CREATE INDEX "IX_FiscalYearDistribution_BusinessProfileRecordID" ON "FiscalYearDistribution" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalYearDistribution_FiscalYearID" ON "FiscalYearDistribution" ("FiscalYearID");

CREATE INDEX "IX_FiscalYearRecord_BusinessID" ON "FiscalYearRecord" ("BusinessID");

CREATE INDEX "IX_FiscalYearRecord_BusinessProfileRecordID" ON "FiscalYearRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_FiscalYearRecord_ContactID" ON "FiscalYearRecord" ("ContactID");

CREATE INDEX "IX_FiscalYearRecord_FiscalPeriodID" ON "FiscalYearRecord" ("FiscalPeriodID");

CREATE INDEX "IX_FiscalYearRecord_FiscalYearID" ON "FiscalYearRecord" ("FiscalYearID");

CREATE INDEX "IX_FollowRecord_FollowedSocialProfileID" ON "FollowRecord" ("FollowedSocialProfileID");

CREATE INDEX "IX_FollowRecord_FollowerSocialProfileID" ON "FollowRecord" ("FollowerSocialProfileID");

CREATE INDEX "IX_ForeignExchangeSet_BusinessID" ON "ForeignExchangeSet" ("BusinessID");

CREATE INDEX "IX_ForeignExchangeSet_BusinessProfileRecordID" ON "ForeignExchangeSet" ("BusinessProfileRecordID");

CREATE INDEX "IX_ForeignKey_ColumnID" ON "ForeignKey" ("ColumnID");

CREATE INDEX "IX_ForeignKey_EntityID" ON "ForeignKey" ("EntityID");

CREATE INDEX "IX_ForeignKey_ForeignColumnID" ON "ForeignKey" ("ForeignColumnID");

CREATE INDEX "IX_ForeignKey_ForeignEntityID" ON "ForeignKey" ("ForeignEntityID");

CREATE INDEX "IX_GenericOption_AccountHolderID" ON "GenericOption" ("AccountHolderID");

CREATE INDEX "IX_GenericOption_BusinessApplicationID" ON "GenericOption" ("BusinessApplicationID");

CREATE INDEX "IX_GenericOption_BusinessID" ON "GenericOption" ("BusinessID");

CREATE INDEX "IX_GenericOption_ContactID" ON "GenericOption" ("ContactID");

CREATE INDEX "IX_GenericOption_WebPortalID" ON "GenericOption" ("WebPortalID");

CREATE INDEX "IX_GenericRecord_BusinessID" ON "GenericRecord" ("BusinessID");

CREATE INDEX "IX_GenericRecord_BusinessProfileRecordID" ON "GenericRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_GenericRecord_ItemID" ON "GenericRecord" ("ItemID");

CREATE INDEX "IX_GenericRecord_ItemPriceID" ON "GenericRecord" ("ItemPriceID");

CREATE INDEX "IX_GenericRecord_ItemPricingRuleRecord_ItemID" ON "GenericRecord" ("ItemPricingRuleRecord_ItemID");

CREATE INDEX "IX_GenericRecord_ItemRefundPolicyRecord_ItemID" ON "GenericRecord" ("ItemRefundPolicyRecord_ItemID");

CREATE INDEX "IX_GenericRecord_ItemReturnPolicyRecord_ItemID" ON "GenericRecord" ("ItemReturnPolicyRecord_ItemID");

CREATE INDEX "IX_GenericRecord_ItemSellingMarginPolicyID" ON "GenericRecord" ("ItemSellingMarginPolicyID");

CREATE INDEX "IX_GenericRecord_ItemSellingMarginPolicyRecord_ItemID" ON "GenericRecord" ("ItemSellingMarginPolicyRecord_ItemID");

CREATE INDEX "IX_GenericRecord_ItemWarrantyPolicyRecord_ItemID" ON "GenericRecord" ("ItemWarrantyPolicyRecord_ItemID");

CREATE INDEX "IX_GenericRecord_JobFieldID" ON "GenericRecord" ("JobFieldID");

CREATE INDEX "IX_GenericRecord_JobOfferID" ON "GenericRecord" ("JobOfferID");

CREATE INDEX "IX_GenericRecord_PriceListID" ON "GenericRecord" ("PriceListID");

CREATE INDEX "IX_GenericRecord_PricingRuleID" ON "GenericRecord" ("PricingRuleID");

CREATE INDEX "IX_GenericRecord_RefundPolicyID" ON "GenericRecord" ("RefundPolicyID");

CREATE INDEX "IX_GenericRecord_ReturnPolicyID" ON "GenericRecord" ("ReturnPolicyID");

CREATE INDEX "IX_GenericRecord_TaxPolicyID" ON "GenericRecord" ("TaxPolicyID");

CREATE INDEX "IX_GenericRecord_WarrantyPolicyID" ON "GenericRecord" ("WarrantyPolicyID");

CREATE INDEX "IX_Gig_BusinessID" ON "Gig" ("BusinessID");

CREATE INDEX "IX_Gig_BusinessProfileRecordID" ON "Gig" ("BusinessProfileRecordID");

CREATE INDEX "IX_Gig_CityID" ON "Gig" ("CityID");

CREATE INDEX "IX_Gig_CountryID" ON "Gig" ("CountryID");

CREATE INDEX "IX_Gig_CountryStateID" ON "Gig" ("CountryStateID");

CREATE INDEX "IX_Gig_CurrencyID" ON "Gig" ("CurrencyID");

CREATE INDEX "IX_Gig_EmployerProfileID" ON "Gig" ("EmployerProfileID");

CREATE INDEX "IX_GigApplication_CurrencyID" ON "GigApplication" ("CurrencyID");

CREATE INDEX "IX_GigApplication_CurriculumCoverID" ON "GigApplication" ("CurriculumCoverID");

CREATE INDEX "IX_GigApplication_CurriculumID" ON "GigApplication" ("CurriculumID");

CREATE INDEX "IX_GigApplication_GigID" ON "GigApplication" ("GigID");

CREATE INDEX "IX_GigApplication_JobApplicantProfileID" ON "GigApplication" ("JobApplicantProfileID");

CREATE INDEX "IX_Holiday_BusinessID" ON "Holiday" ("BusinessID");

CREATE INDEX "IX_HolidaySchedule_BusinessID" ON "HolidaySchedule" ("BusinessID");

CREATE INDEX "IX_HolidayScheduleRecord_HolidayID" ON "HolidayScheduleRecord" ("HolidayID");

CREATE INDEX "IX_HolidayScheduleRecord_HolidayScheduleID" ON "HolidayScheduleRecord" ("HolidayScheduleID");

CREATE INDEX "IX_InquiryRequest_AccountHolderID" ON "InquiryRequest" ("AccountHolderID");

CREATE INDEX "IX_InquiryRequest_BusinessID" ON "InquiryRequest" ("BusinessID");

CREATE INDEX "IX_InquiryRequest_BusinessProfileRecordID" ON "InquiryRequest" ("BusinessProfileRecordID");

CREATE INDEX "IX_InquiryRequest_BusinessTeamID" ON "InquiryRequest" ("BusinessTeamID");

CREATE INDEX "IX_InquiryRequest_BusinessUnitID" ON "InquiryRequest" ("BusinessUnitID");

CREATE INDEX "IX_InquiryRequest_CountryID" ON "InquiryRequest" ("CountryID");

CREATE INDEX "IX_InquiryRequest_PaymentDisputeID" ON "InquiryRequest" ("PaymentDisputeID");

CREATE INDEX "IX_InquiryRequest_SocialProfileID" ON "InquiryRequest" ("SocialProfileID");

CREATE INDEX "IX_InquiryRequest_WalletAccountID" ON "InquiryRequest" ("WalletAccountID");

CREATE INDEX "IX_Integration_AccountHolderID" ON "Integration" ("AccountHolderID");

CREATE INDEX "IX_Integration_BusinessID" ON "Integration" ("BusinessID");

CREATE INDEX "IX_Integration_BusinessProfileRecordID" ON "Integration" ("BusinessProfileRecordID");

CREATE INDEX "IX_Invoice_AccountHolderID" ON "Invoice" ("AccountHolderID");

CREATE INDEX "IX_Invoice_BillingLocationID" ON "Invoice" ("BillingLocationID");

CREATE INDEX "IX_Invoice_BusinessID" ON "Invoice" ("BusinessID");

CREATE INDEX "IX_Invoice_BusinessProfileRecordID" ON "Invoice" ("BusinessProfileRecordID");

CREATE INDEX "IX_Invoice_CurrencyID" ON "Invoice" ("CurrencyID");

CREATE INDEX "IX_Invoice_EmmisorBillingProfileID" ON "Invoice" ("EmmisorBillingProfileID");

CREATE INDEX "IX_Invoice_EmmisorWalletAccountID" ON "Invoice" ("EmmisorWalletAccountID");

CREATE INDEX "IX_Invoice_IndividualID" ON "Invoice" ("IndividualID");

CREATE INDEX "IX_Invoice_InvoiceEnumerationRangeID" ON "Invoice" ("InvoiceEnumerationRangeID");

CREATE INDEX "IX_Invoice_OrderID" ON "Invoice" ("OrderID");

CREATE INDEX "IX_Invoice_OrganizationID" ON "Invoice" ("OrganizationID");

CREATE INDEX "IX_Invoice_PaymentModeID" ON "Invoice" ("PaymentModeID");

CREATE INDEX "IX_Invoice_PaymentTermID" ON "Invoice" ("PaymentTermID");

CREATE INDEX "IX_Invoice_PointOfSaleID" ON "Invoice" ("PointOfSaleID");

CREATE INDEX "IX_Invoice_PriceListID" ON "Invoice" ("PriceListID");

CREATE INDEX "IX_Invoice_ReceptorBillingProfileID" ON "Invoice" ("ReceptorBillingProfileID");

CREATE INDEX "IX_Invoice_ReceptorBusinessID" ON "Invoice" ("ReceptorBusinessID");

CREATE INDEX "IX_Invoice_ReceptorWalletAccountID" ON "Invoice" ("ReceptorWalletAccountID");

CREATE INDEX "IX_Invoice_ShippingLocationID" ON "Invoice" ("ShippingLocationID");

CREATE INDEX "IX_InvoiceAdjustment_BusinessID" ON "InvoiceAdjustment" ("BusinessID");

CREATE INDEX "IX_InvoiceAdjustment_BusinessProfileRecordID" ON "InvoiceAdjustment" ("BusinessProfileRecordID");

CREATE INDEX "IX_InvoiceAdjustment_CurrencyID" ON "InvoiceAdjustment" ("CurrencyID");

CREATE INDEX "IX_InvoiceAdjustment_InvoiceID" ON "InvoiceAdjustment" ("InvoiceID");

CREATE INDEX "IX_InvoiceEnumerationRange_BusinessID" ON "InvoiceEnumerationRange" ("BusinessID");

CREATE INDEX "IX_InvoiceEnumerationRange_BusinessProfileRecordID" ON "InvoiceEnumerationRange" ("BusinessProfileRecordID");

CREATE INDEX "IX_InvoiceEnumerationRange_FiscalAuthorityID" ON "InvoiceEnumerationRange" ("FiscalAuthorityID");

CREATE INDEX "IX_InvoiceReference_BusinessID" ON "InvoiceReference" ("BusinessID");

CREATE INDEX "IX_InvoiceReference_BusinessProfileRecordID" ON "InvoiceReference" ("BusinessProfileRecordID");

CREATE INDEX "IX_InvoiceReference_ReferencedInvoiceID" ON "InvoiceReference" ("ReferencedInvoiceID");

CREATE INDEX "IX_InvoiceReference_ReferralInvoiceID" ON "InvoiceReference" ("ReferralInvoiceID");

CREATE INDEX "IX_InvoiceRelation_BusinessID" ON "InvoiceRelation" ("BusinessID");

CREATE INDEX "IX_InvoiceRelation_BusinessProfileRecordID" ON "InvoiceRelation" ("BusinessProfileRecordID");

CREATE INDEX "IX_InvoiceRelation_InvoiceID" ON "InvoiceRelation" ("InvoiceID");

CREATE INDEX "IX_InvoiceRelation_ProjectID" ON "InvoiceRelation" ("ProjectID");

CREATE INDEX "IX_IPLookup_AccountHolderID" ON "IPLookup" ("AccountHolderID");

CREATE INDEX "IX_IPLookup_CountryID" ON "IPLookup" ("CountryID");

CREATE INDEX "IX_Item_BlockchainBlockID" ON "Item" ("BlockchainBlockID");

CREATE INDEX "IX_Item_BlockchainID" ON "Item" ("BlockchainID");

CREATE INDEX "IX_Item_BrandID" ON "Item" ("BrandID");

CREATE INDEX "IX_Item_BusinessID" ON "Item" ("BusinessID");

CREATE INDEX "IX_Item_BusinessProfileRecordID" ON "Item" ("BusinessProfileRecordID");

CREATE INDEX "IX_Item_CountryID" ON "Item" ("CountryID");

CREATE INDEX "IX_Item_CountryLanguageID" ON "Item" ("CountryLanguageID");

CREATE INDEX "IX_Item_CourseCategoryID" ON "Item" ("CourseCategoryID");

CREATE INDEX "IX_Item_CurrencyID" ON "Item" ("CurrencyID");

CREATE INDEX "IX_Item_InstructorProfileID" ON "Item" ("InstructorProfileID");

CREATE INDEX "IX_Item_ItemCategoryID" ON "Item" ("ItemCategoryID");

CREATE INDEX "IX_Item_ItemGoogleCategoryID" ON "Item" ("ItemGoogleCategoryID");

CREATE INDEX "IX_Item_ItemTypeID" ON "Item" ("ItemTypeID");

CREATE INDEX "IX_Item_ParentItemID" ON "Item" ("ParentItemID");

CREATE INDEX "IX_Item_ServiceID" ON "Item" ("ServiceID");

CREATE INDEX "IX_Item_ShippingClassID" ON "Item" ("ShippingClassID");

CREATE INDEX "IX_Item_SupplierProfileID" ON "Item" ("SupplierProfileID");

CREATE INDEX "IX_Item_UnitGroupID" ON "Item" ("UnitGroupID");

CREATE INDEX "IX_Item_UnitID" ON "Item" ("UnitID");

CREATE INDEX "IX_ItemAttribute_BusinessID" ON "ItemAttribute" ("BusinessID");

CREATE INDEX "IX_ItemAttributeOption_BusinessID" ON "ItemAttributeOption" ("BusinessID");

CREATE INDEX "IX_ItemAttributeOption_ItemAttributeID" ON "ItemAttributeOption" ("ItemAttributeID");

CREATE INDEX "IX_ItemAttributeOptionRecord_AttributeOptionID" ON "ItemAttributeOptionRecord" ("AttributeOptionID");

CREATE INDEX "IX_ItemAttributeOptionRecord_ItemID" ON "ItemAttributeOptionRecord" ("ItemID");

CREATE INDEX "IX_ItemBid_CurrencyID" ON "ItemBid" ("CurrencyID");

CREATE INDEX "IX_ItemBid_ItemID" ON "ItemBid" ("ItemID");

CREATE INDEX "IX_ItemBid_WalletAccountID" ON "ItemBid" ("WalletAccountID");

CREATE INDEX "IX_ItemBrand_BusinessID" ON "ItemBrand" ("BusinessID");

CREATE INDEX "IX_ItemBundle_BusinessID" ON "ItemBundle" ("BusinessID");

CREATE INDEX "IX_ItemBundleRecord_ChildItemID" ON "ItemBundleRecord" ("ChildItemID");

CREATE INDEX "IX_ItemBundleRecord_ItemBundleID" ON "ItemBundleRecord" ("ItemBundleID");

CREATE INDEX "IX_ItemBundleRecord_ParentItemID" ON "ItemBundleRecord" ("ParentItemID");

CREATE INDEX "IX_ItemCategory_BusinessID" ON "ItemCategory" ("BusinessID");

CREATE INDEX "IX_ItemCategory_BusinessProfileRecordID" ON "ItemCategory" ("BusinessProfileRecordID");

CREATE INDEX "IX_ItemCategory_ParentItemCategoryID" ON "ItemCategory" ("ParentItemCategoryID");

CREATE INDEX "IX_ItemCategoryRecord_ItemCategoryID" ON "ItemCategoryRecord" ("ItemCategoryID");

CREATE INDEX "IX_ItemCategoryRecord_ItemID" ON "ItemCategoryRecord" ("ItemID");

CREATE INDEX "IX_ItemFamily_BusinessID" ON "ItemFamily" ("BusinessID");

CREATE INDEX "IX_ItemFamilyRecord_ItemFamilyID" ON "ItemFamilyRecord" ("ItemFamilyID");

CREATE INDEX "IX_ItemFamilyRecord_ItemID" ON "ItemFamilyRecord" ("ItemID");

CREATE INDEX "IX_ItemGoogleCategory_ParentItemGoogleCategoryID" ON "ItemGoogleCategory" ("ParentItemGoogleCategoryID");

CREATE INDEX "IX_ItemGoogleCategoryRecord_ItemGoogleCategoryID" ON "ItemGoogleCategoryRecord" ("ItemGoogleCategoryID");

CREATE INDEX "IX_ItemGoogleCategoryRecord_ItemID" ON "ItemGoogleCategoryRecord" ("ItemID");

CREATE INDEX "IX_ItemGroup_BusinessID" ON "ItemGroup" ("BusinessID");

CREATE INDEX "IX_ItemGroupRecord_ItemGroupID" ON "ItemGroupRecord" ("ItemGroupID");

CREATE INDEX "IX_ItemGroupRecord_ItemID" ON "ItemGroupRecord" ("ItemID");

CREATE INDEX "IX_ItemImageRecord_ItemID" ON "ItemImageRecord" ("ItemID");

CREATE INDEX "IX_ItemImageRecord_ItemImageID" ON "ItemImageRecord" ("ItemImageID");

CREATE INDEX "IX_ItemOwnership_BlockchainBlockID" ON "ItemOwnership" ("BlockchainBlockID");

CREATE INDEX "IX_ItemOwnership_CartID" ON "ItemOwnership" ("CartID");

CREATE INDEX "IX_ItemOwnership_ItemBidID" ON "ItemOwnership" ("ItemBidID");

CREATE INDEX "IX_ItemOwnership_ItemID" ON "ItemOwnership" ("ItemID");

CREATE INDEX "IX_ItemOwnership_WalletAccountID" ON "ItemOwnership" ("WalletAccountID");

CREATE INDEX "IX_ItemPackingSlip_BusinessID" ON "ItemPackingSlip" ("BusinessID");

CREATE INDEX "IX_ItemPackingSlip_DeliveryNoteID" ON "ItemPackingSlip" ("DeliveryNoteID");

CREATE INDEX "IX_ItemPackingSlip_OrderID" ON "ItemPackingSlip" ("OrderID");

CREATE INDEX "IX_ItemPackingSlipEntry_BusinessID" ON "ItemPackingSlipEntry" ("BusinessID");

CREATE INDEX "IX_ItemPackingSlipEntry_ItemID" ON "ItemPackingSlipEntry" ("ItemID");

CREATE INDEX "IX_ItemPackingSlipEntry_ItemPackingSlipID" ON "ItemPackingSlipEntry" ("ItemPackingSlipID");

CREATE INDEX "IX_ItemPickList_BusinessID" ON "ItemPickList" ("BusinessID");

CREATE INDEX "IX_ItemPickList_OrderID" ON "ItemPickList" ("OrderID");

CREATE INDEX "IX_ItemPickList_WarehouseID" ON "ItemPickList" ("WarehouseID");

CREATE INDEX "IX_ItemPickListEntry_BillingCouponCartRecordID" ON "ItemPickListEntry" ("BillingCouponCartRecordID");

CREATE INDEX "IX_ItemPickListEntry_BillingCouponItemRecordID" ON "ItemPickListEntry" ("BillingCouponItemRecordID");

CREATE INDEX "IX_ItemPickListEntry_BillingCouponOrderRecordID" ON "ItemPickListEntry" ("BillingCouponOrderRecordID");

CREATE INDEX "IX_ItemPickListEntry_BusinessID" ON "ItemPickListEntry" ("BusinessID");

CREATE INDEX "IX_ItemPickListEntry_DealUnitItemRecordID" ON "ItemPickListEntry" ("DealUnitItemRecordID");

CREATE INDEX "IX_ItemPickListEntry_InvoiceItemRecordID" ON "ItemPickListEntry" ("InvoiceItemRecordID");

CREATE INDEX "IX_ItemPickListEntry_ItemID" ON "ItemPickListEntry" ("ItemID");

CREATE INDEX "IX_ItemPickListEntry_ItemPickListID" ON "ItemPickListEntry" ("ItemPickListID");

CREATE INDEX "IX_ItemPickListEntry_OrderItemRecordID" ON "ItemPickListEntry" ("OrderItemRecordID");

CREATE INDEX "IX_ItemPickListEntry_QuoteItemRecordID" ON "ItemPickListEntry" ("QuoteItemRecordID");

CREATE INDEX "IX_ItemPickListEntry_WarehouseID" ON "ItemPickListEntry" ("WarehouseID");

CREATE INDEX "IX_ItemQuestion_BusinessID" ON "ItemQuestion" ("BusinessID");

CREATE INDEX "IX_ItemQuestion_ItemID" ON "ItemQuestion" ("ItemID");

CREATE INDEX "IX_ItemQuestion_SocialProfileID" ON "ItemQuestion" ("SocialProfileID");

CREATE INDEX "IX_ItemQuestionReply_BusinessID" ON "ItemQuestionReply" ("BusinessID");

CREATE INDEX "IX_ItemQuestionReply_ItemQuestionID" ON "ItemQuestionReply" ("ItemQuestionID");

CREATE INDEX "IX_ItemQuestionReply_SocialProfileID" ON "ItemQuestionReply" ("SocialProfileID");

CREATE INDEX "IX_ItemRestock_BusinessID" ON "ItemRestock" ("BusinessID");

CREATE INDEX "IX_ItemRestockEntry_BusinessID" ON "ItemRestockEntry" ("BusinessID");

CREATE INDEX "IX_ItemRestockEntry_ItemID" ON "ItemRestockEntry" ("ItemID");

CREATE INDEX "IX_ItemRestockEntry_ItemRestockID" ON "ItemRestockEntry" ("ItemRestockID");

CREATE INDEX "IX_ItemRestockEntry_OrderItemRecordID" ON "ItemRestockEntry" ("OrderItemRecordID");

CREATE INDEX "IX_ItemRestockEntry_WarehouseID" ON "ItemRestockEntry" ("WarehouseID");

CREATE INDEX "IX_ItemRetainSample_BusinessID" ON "ItemRetainSample" ("BusinessID");

CREATE INDEX "IX_ItemRetainSample_ItemID" ON "ItemRetainSample" ("ItemID");

CREATE INDEX "IX_ItemRetainSample_WarehouseID" ON "ItemRetainSample" ("WarehouseID");

CREATE INDEX "IX_ItemShippingPolicyRecord_BusinessID" ON "ItemShippingPolicyRecord" ("BusinessID");

CREATE INDEX "IX_ItemShippingPolicyRecord_ItemID" ON "ItemShippingPolicyRecord" ("ItemID");

CREATE INDEX "IX_ItemShippingPolicyRecord_ItemShippingPolicyID" ON "ItemShippingPolicyRecord" ("ItemShippingPolicyID");

CREATE INDEX "IX_ItemTag_BusinessID" ON "ItemTag" ("BusinessID");

CREATE INDEX "IX_ItemTagRecord_ItemID" ON "ItemTagRecord" ("ItemID");

CREATE INDEX "IX_ItemTagRecord_ItemTagID" ON "ItemTagRecord" ("ItemTagID");

CREATE INDEX "IX_ItemType_BusinessID" ON "ItemType" ("BusinessID");

CREATE INDEX "IX_ItemType_ItemCategoryID" ON "ItemType" ("ItemCategoryID");

CREATE INDEX "IX_ItemType_ItemGoogleCategoryID" ON "ItemType" ("ItemGoogleCategoryID");

CREATE INDEX "IX_ItemTypeRecord_ItemID" ON "ItemTypeRecord" ("ItemID");

CREATE INDEX "IX_ItemTypeRecord_ItemTypeID" ON "ItemTypeRecord" ("ItemTypeID");

CREATE INDEX "IX_JobField_BusinessID" ON "JobField" ("BusinessID");

CREATE INDEX "IX_JobOffer_BusinessID" ON "JobOffer" ("BusinessID");

CREATE INDEX "IX_JobOffer_BusinessProfileRecordID" ON "JobOffer" ("BusinessProfileRecordID");

CREATE INDEX "IX_JobOffer_CityID" ON "JobOffer" ("CityID");

CREATE INDEX "IX_JobOffer_CountryID" ON "JobOffer" ("CountryID");

CREATE INDEX "IX_JobOffer_CountryStateID" ON "JobOffer" ("CountryStateID");

CREATE INDEX "IX_JobOffer_CurrencyID" ON "JobOffer" ("CurrencyID");

CREATE INDEX "IX_JobOffer_EmployerProfileID" ON "JobOffer" ("EmployerProfileID");

CREATE INDEX "IX_JobOffer_JobFieldID" ON "JobOffer" ("JobFieldID");

CREATE INDEX "IX_JobOffer_JobTitleID" ON "JobOffer" ("JobTitleID");

CREATE INDEX "IX_JobOfferApplication_CurrencyID" ON "JobOfferApplication" ("CurrencyID");

CREATE INDEX "IX_JobOfferApplication_CurriculumCoverID" ON "JobOfferApplication" ("CurriculumCoverID");

CREATE INDEX "IX_JobOfferApplication_CurriculumID" ON "JobOfferApplication" ("CurriculumID");

CREATE INDEX "IX_JobOfferApplication_JobApplicantProfileID" ON "JobOfferApplication" ("JobApplicantProfileID");

CREATE INDEX "IX_JobOfferApplication_JobOfferID" ON "JobOfferApplication" ("JobOfferID");

CREATE INDEX "IX_JobTitle_BusinessID" ON "JobTitle" ("BusinessID");

CREATE INDEX "IX_JobTitle_BusinessProfileRecordID" ON "JobTitle" ("BusinessProfileRecordID");

CREATE INDEX "IX_JobTitle_CityID" ON "JobTitle" ("CityID");

CREATE INDEX "IX_JobTitle_CountryID" ON "JobTitle" ("CountryID");

CREATE INDEX "IX_JobTitle_CountryStateID" ON "JobTitle" ("CountryStateID");

CREATE INDEX "IX_JobTitle_CurrencyID" ON "JobTitle" ("CurrencyID");

CREATE INDEX "IX_Journal_BusinessID" ON "Journal" ("BusinessID");

CREATE INDEX "IX_Journal_BusinessProfileRecordID" ON "Journal" ("BusinessProfileRecordID");

CREATE INDEX "IX_Journal_JournalTypeID" ON "Journal" ("JournalTypeID");

CREATE INDEX "IX_Journal_LedgerID" ON "Journal" ("LedgerID");

CREATE INDEX "IX_Journal_ParentJournalID" ON "Journal" ("ParentJournalID");

CREATE INDEX "IX_JournalEntry_BusinessID" ON "JournalEntry" ("BusinessID");

CREATE INDEX "IX_JournalEntry_BusinessProfileRecordID" ON "JournalEntry" ("BusinessProfileRecordID");

CREATE INDEX "IX_JournalEntry_CreditAccountID" ON "JournalEntry" ("CreditAccountID");

CREATE INDEX "IX_JournalEntry_CurrencyID" ON "JournalEntry" ("CurrencyID");

CREATE INDEX "IX_JournalEntry_DebitAccountID" ON "JournalEntry" ("DebitAccountID");

CREATE INDEX "IX_JournalEntry_FinancialBookID" ON "JournalEntry" ("FinancialBookID");

CREATE INDEX "IX_JournalEntry_JournalID" ON "JournalEntry" ("JournalID");

CREATE INDEX "IX_JournalEntry_ParentJournalEntryID" ON "JournalEntry" ("ParentJournalEntryID");

CREATE INDEX "IX_JournalType_BusinessID" ON "JournalType" ("BusinessID");

CREATE INDEX "IX_JournalType_BusinessProfileRecordID" ON "JournalType" ("BusinessProfileRecordID");

CREATE INDEX "IX_KanbanBoard_BusinessID" ON "KanbanBoard" ("BusinessID");

CREATE INDEX "IX_KanbanBoard_BusinessProfileRecordID" ON "KanbanBoard" ("BusinessProfileRecordID");

CREATE INDEX "IX_KanbanBoard_ProjectID" ON "KanbanBoard" ("ProjectID");

CREATE INDEX "IX_LeaveApplication_BusinessID" ON "LeaveApplication" ("BusinessID");

CREATE INDEX "IX_LeaveApplication_BusinessProfileRecordID" ON "LeaveApplication" ("BusinessProfileRecordID");

CREATE INDEX "IX_LeaveApplication_EmployeeProfileID" ON "LeaveApplication" ("EmployeeProfileID");

CREATE INDEX "IX_LeaveApplication_LeaveTypeID" ON "LeaveApplication" ("LeaveTypeID");

CREATE INDEX "IX_LeaveReport_BusinessID" ON "LeaveReport" ("BusinessID");

CREATE INDEX "IX_LeaveReport_BusinessProfileRecordID" ON "LeaveReport" ("BusinessProfileRecordID");

CREATE INDEX "IX_LeaveReport_LeaveApplicationID" ON "LeaveReport" ("LeaveApplicationID");

CREATE INDEX "IX_LeaveType_BusinessID" ON "LeaveType" ("BusinessID");

CREATE INDEX "IX_Ledger_BusinessID" ON "Ledger" ("BusinessID");

CREATE INDEX "IX_Ledger_BusinessProfileRecordID" ON "Ledger" ("BusinessProfileRecordID");

CREATE INDEX "IX_Ledger_LedgerTypeID" ON "Ledger" ("LedgerTypeID");

CREATE INDEX "IX_LedgerType_BusinessID" ON "LedgerType" ("BusinessID");

CREATE INDEX "IX_LedgerType_BusinessProfileRecordID" ON "LedgerType" ("BusinessProfileRecordID");

CREATE INDEX "IX_LicenseAssignment_BusinessID" ON "LicenseAssignment" ("BusinessID");

CREATE INDEX "IX_LicenseAssignment_BusinessProfileRecordID" ON "LicenseAssignment" ("BusinessProfileRecordID");

CREATE INDEX "IX_LicenseAssignment_LicenseID" ON "LicenseAssignment" ("LicenseID");

CREATE INDEX "IX_LicenseAssignment_LicensingProfileID" ON "LicenseAssignment" ("LicensingProfileID");

CREATE INDEX "IX_LicenseAttribute_BusinessID" ON "LicenseAttribute" ("BusinessID");

CREATE INDEX "IX_LicenseAttribute_BusinessProfileRecordID" ON "LicenseAttribute" ("BusinessProfileRecordID");

CREATE INDEX "IX_LicenseAttribute_LicenseTypeID" ON "LicenseAttribute" ("LicenseTypeID");

CREATE INDEX "IX_LicenseFeature_AccessKeyPairID" ON "LicenseFeature" ("AccessKeyPairID");

CREATE INDEX "IX_LicenseFeature_BusinessID" ON "LicenseFeature" ("BusinessID");

CREATE INDEX "IX_LicenseFeature_BusinessProfileRecordID" ON "LicenseFeature" ("BusinessProfileRecordID");

CREATE INDEX "IX_LicenseFeature_LicenseTypeID" ON "LicenseFeature" ("LicenseTypeID");

CREATE INDEX "IX_LicenseValidation_BusinessID" ON "LicenseValidation" ("BusinessID");

CREATE INDEX "IX_LocalizationResource_BusinessID" ON "LocalizationResource" ("BusinessID");

CREATE INDEX "IX_LocalizationResource_CountryLanguageID" ON "LocalizationResource" ("CountryLanguageID");

CREATE INDEX "IX_LocalizationResource_CountryLanguageRecordID" ON "LocalizationResource" ("CountryLanguageRecordID");

CREATE INDEX "IX_LocalizationResource_LocalizationStringID" ON "LocalizationResource" ("LocalizationStringID");

CREATE INDEX "IX_Location_AccountHolderID" ON "Location" ("AccountHolderID");

CREATE INDEX "IX_Location_BusinessID" ON "Location" ("BusinessID");

CREATE INDEX "IX_Location_BusinessProfileRecordID" ON "Location" ("BusinessProfileRecordID");

CREATE INDEX "IX_Location_CityID" ON "Location" ("CityID");

CREATE INDEX "IX_Location_ContactID" ON "Location" ("ContactID");

CREATE INDEX "IX_Location_CountryID" ON "Location" ("CountryID");

CREATE INDEX "IX_Location_CountryStateID" ON "Location" ("CountryStateID");

CREATE INDEX "IX_Location_ParentWarehouseID" ON "Location" ("ParentWarehouseID");

CREATE INDEX "IX_Location_SocialProfileID" ON "Location" ("SocialProfileID");

CREATE INDEX "IX_Location_SupplierProfileID" ON "Location" ("SupplierProfileID");

CREATE INDEX "IX_MaintenanceVisit_BusinessID" ON "MaintenanceVisit" ("BusinessID");

CREATE INDEX "IX_MaintenanceVisit_BusinessProfileRecordID" ON "MaintenanceVisit" ("BusinessProfileRecordID");

CREATE INDEX "IX_MarketingArea_BusinessID" ON "MarketingArea" ("BusinessID");

CREATE INDEX "IX_MarketingArea_BusinessProfileRecordID" ON "MarketingArea" ("BusinessProfileRecordID");

CREATE INDEX "IX_MarketingAreaSubscription_BusinessID" ON "MarketingAreaSubscription" ("BusinessID");

CREATE INDEX "IX_MarketingAreaSubscription_MarketingAreaID" ON "MarketingAreaSubscription" ("MarketingAreaID");

CREATE INDEX "IX_MarketingAreaSubscription_PartnerProfileID" ON "MarketingAreaSubscription" ("PartnerProfileID");

CREATE INDEX "IX_MarketingCampaign_BusinessID" ON "MarketingCampaign" ("BusinessID");

CREATE INDEX "IX_MarketingCampaign_BusinessProfileRecordID" ON "MarketingCampaign" ("BusinessProfileRecordID");

CREATE INDEX "IX_MarketingCampaign_CurrencyID" ON "MarketingCampaign" ("CurrencyID");

CREATE INDEX "IX_MarketingCampaign_MarketingAreaID" ON "MarketingCampaign" ("MarketingAreaID");

CREATE INDEX "IX_MarketingCampaign_MarketingListID" ON "MarketingCampaign" ("MarketingListID");

CREATE INDEX "IX_MarketingCampaignResponse_BusinessID" ON "MarketingCampaignResponse" ("BusinessID");

CREATE INDEX "IX_MarketingCampaignResponse_BusinessProfileRecordID" ON "MarketingCampaignResponse" ("BusinessProfileRecordID");

CREATE INDEX "IX_MarketingCampaignResponse_ContactID" ON "MarketingCampaignResponse" ("ContactID");

CREATE INDEX "IX_MarketingCampaignResponse_MarketingCampaignID" ON "MarketingCampaignResponse" ("MarketingCampaignID");

CREATE INDEX "IX_MarketingList_BusinessID" ON "MarketingList" ("BusinessID");

CREATE INDEX "IX_MarketingList_BusinessProfileRecordID" ON "MarketingList" ("BusinessProfileRecordID");

CREATE INDEX "IX_MarketingList_CurrencyID" ON "MarketingList" ("CurrencyID");

CREATE INDEX "IX_MarketingListMembership_BusinessID" ON "MarketingListMembership" ("BusinessID");

CREATE INDEX "IX_MarketingListMembership_BusinessProfileRecordID" ON "MarketingListMembership" ("BusinessProfileRecordID");

CREATE INDEX "IX_MarketingListMembership_LeadProfileID" ON "MarketingListMembership" ("LeadProfileID");

CREATE INDEX "IX_MarketingListMembership_MarketingListID" ON "MarketingListMembership" ("MarketingListID");

CREATE INDEX "IX_MenuContext_AccountHolderID" ON "MenuContext" ("AccountHolderID");

CREATE INDEX "IX_MenuContext_BusinessID" ON "MenuContext" ("BusinessID");

CREATE INDEX "IX_MenuContext_WebPortalID" ON "MenuContext" ("WebPortalID");

CREATE INDEX "IX_MenuContextItem_MenuContextID" ON "MenuContextItem" ("MenuContextID");

CREATE INDEX "IX_MenuContextItem_ParentMenuContextItemID" ON "MenuContextItem" ("ParentMenuContextItemID");

CREATE INDEX "IX_Newsletter_BusinessID" ON "Newsletter" ("BusinessID");

CREATE INDEX "IX_Newsletter_BusinessProfileRecordID" ON "Newsletter" ("BusinessProfileRecordID");

CREATE INDEX "IX_NewsletterSubscription_AccountHolderID" ON "NewsletterSubscription" ("AccountHolderID");

CREATE INDEX "IX_NewsletterSubscription_BusinessID" ON "NewsletterSubscription" ("BusinessID");

CREATE INDEX "IX_NewsletterSubscription_BusinessProfileRecordID" ON "NewsletterSubscription" ("BusinessProfileRecordID");

CREATE INDEX "IX_NewsletterSubscription_ContactID" ON "NewsletterSubscription" ("ContactID");

CREATE INDEX "IX_NewsletterSubscription_NewsletterID" ON "NewsletterSubscription" ("NewsletterID");

CREATE INDEX "IX_Notification_SocialProfileID" ON "Notification" ("SocialProfileID");

CREATE INDEX "IX_OpenIddictEntityFrameworkCoreApplication_BusinessApplicatio~" ON "OpenIddictEntityFrameworkCoreApplication" ("BusinessApplicationID");

CREATE INDEX "IX_OpenIddictEntityFrameworkCoreApplication_BusinessID" ON "OpenIddictEntityFrameworkCoreApplication" ("BusinessID");

CREATE INDEX "IX_OpenIddictEntityFrameworkCoreApplication_BusinessProfileRec~" ON "OpenIddictEntityFrameworkCoreApplication" ("BusinessProfileRecordID");

CREATE INDEX "IX_OpenIddictEntityFrameworkCoreAuthorization_ApplicationId" ON "OpenIddictEntityFrameworkCoreAuthorization" ("ApplicationId");

CREATE INDEX "IX_OpenIddictEntityFrameworkCoreToken_ApplicationId" ON "OpenIddictEntityFrameworkCoreToken" ("ApplicationId");

CREATE INDEX "IX_OpenIddictEntityFrameworkCoreToken_AuthorizationId" ON "OpenIddictEntityFrameworkCoreToken" ("AuthorizationId");

CREATE INDEX "IX_Order_AccountHolderID" ON "Order" ("AccountHolderID");

CREATE INDEX "IX_Order_BillingAddressID" ON "Order" ("BillingAddressID");

CREATE INDEX "IX_Order_BillingContactID" ON "Order" ("BillingContactID");

CREATE INDEX "IX_Order_BillingLocationID" ON "Order" ("BillingLocationID");

CREATE INDEX "IX_Order_BillingProfileID" ON "Order" ("BillingProfileID");

CREATE INDEX "IX_Order_BusinessID" ON "Order" ("BusinessID");

CREATE INDEX "IX_Order_BusinessProfileRecordID" ON "Order" ("BusinessProfileRecordID");

CREATE INDEX "IX_Order_CartID" ON "Order" ("CartID");

CREATE INDEX "IX_Order_CityID" ON "Order" ("CityID");

CREATE INDEX "IX_Order_CountryID" ON "Order" ("CountryID");

CREATE INDEX "IX_Order_CountryStateID" ON "Order" ("CountryStateID");

CREATE INDEX "IX_Order_CurrencyID" ON "Order" ("CurrencyID");

CREATE INDEX "IX_Order_IndividualID" ON "Order" ("IndividualID");

CREATE INDEX "IX_Order_OrganizationID" ON "Order" ("OrganizationID");

CREATE INDEX "IX_Order_ParentOrderID" ON "Order" ("ParentOrderID");

CREATE INDEX "IX_Order_PaymentTermID" ON "Order" ("PaymentTermID");

CREATE INDEX "IX_Order_PriceListID" ON "Order" ("PriceListID");

CREATE INDEX "IX_Order_QuoteID" ON "Order" ("QuoteID");

CREATE INDEX "IX_Order_ReceptorBusinessID" ON "Order" ("ReceptorBusinessID");

CREATE INDEX "IX_Order_SalesQuoteID" ON "Order" ("SalesQuoteID");

CREATE INDEX "IX_Order_ShippingAddressID" ON "Order" ("ShippingAddressID");

CREATE INDEX "IX_Order_ShippingContactID" ON "Order" ("ShippingContactID");

CREATE INDEX "IX_Order_ShippingLocationID" ON "Order" ("ShippingLocationID");

CREATE INDEX "IX_Order_ShippingMethodID" ON "Order" ("ShippingMethodID");

CREATE INDEX "IX_Order_WalletAccountID" ON "Order" ("WalletAccountID");

CREATE INDEX "IX_OrderItemReturn_BusinessID" ON "OrderItemReturn" ("BusinessID");

CREATE INDEX "IX_OrderItemReturn_BusinessProfileRecordID" ON "OrderItemReturn" ("BusinessProfileRecordID");

CREATE INDEX "IX_OrderItemReturn_OrderID" ON "OrderItemReturn" ("OrderID");

CREATE INDEX "IX_OrderItemReturn_OrderItemRecordID" ON "OrderItemReturn" ("OrderItemRecordID");

CREATE INDEX "IX_OrderItemReturn_OrderReturnID" ON "OrderItemReturn" ("OrderReturnID");

CREATE INDEX "IX_OrderItemReturn_ReturnRequestID" ON "OrderItemReturn" ("ReturnRequestID");

CREATE INDEX "IX_OrderItemWarranty_BusinessID" ON "OrderItemWarranty" ("BusinessID");

CREATE INDEX "IX_OrderItemWarranty_BusinessProfileRecordID" ON "OrderItemWarranty" ("BusinessProfileRecordID");

CREATE INDEX "IX_OrderItemWarranty_OrderWarrantyID" ON "OrderItemWarranty" ("OrderWarrantyID");

CREATE INDEX "IX_OrderItemWarranty_WarrantyRequestID" ON "OrderItemWarranty" ("WarrantyRequestID");

CREATE INDEX "IX_OrderRelation_BusinessID" ON "OrderRelation" ("BusinessID");

CREATE INDEX "IX_OrderRelation_BusinessProfileRecordID" ON "OrderRelation" ("BusinessProfileRecordID");

CREATE INDEX "IX_OrderRelation_OrderID" ON "OrderRelation" ("OrderID");

CREATE INDEX "IX_OrderRelation_ProjectID" ON "OrderRelation" ("ProjectID");

CREATE INDEX "IX_OrderReturn_BusinessID" ON "OrderReturn" ("BusinessID");

CREATE INDEX "IX_OrderReturn_BusinessProfileRecordID" ON "OrderReturn" ("BusinessProfileRecordID");

CREATE INDEX "IX_OrderReturn_OrderID" ON "OrderReturn" ("OrderID");

CREATE INDEX "IX_OrderReturn_ReturnRequestID" ON "OrderReturn" ("ReturnRequestID");

CREATE INDEX "IX_OrderWarranty_BusinessID" ON "OrderWarranty" ("BusinessID");

CREATE INDEX "IX_OrderWarranty_BusinessProfileRecordID" ON "OrderWarranty" ("BusinessProfileRecordID");

CREATE INDEX "IX_OrderWarranty_WarrantyRequestID" ON "OrderWarranty" ("WarrantyRequestID");

CREATE INDEX "IX_PartnerProgram_BusinessID" ON "PartnerProgram" ("BusinessID");

CREATE INDEX "IX_PartnerProgram_BusinessProfileRecordID" ON "PartnerProgram" ("BusinessProfileRecordID");

CREATE INDEX "IX_PartnerProgramRegistration_BusinessID" ON "PartnerProgramRegistration" ("BusinessID");

CREATE INDEX "IX_PartnerProgramRegistration_BusinessProfileRecordID" ON "PartnerProgramRegistration" ("BusinessProfileRecordID");

CREATE INDEX "IX_PartnerProgramRegistration_PartnerProfileID" ON "PartnerProgramRegistration" ("PartnerProfileID");

CREATE INDEX "IX_PartnerProgramRegistration_PartnerProgramID" ON "PartnerProgramRegistration" ("PartnerProgramID");

CREATE INDEX "IX_PartnerProgramRegistration_PartnerProgramTierID" ON "PartnerProgramRegistration" ("PartnerProgramTierID");

CREATE INDEX "IX_PartnerProgramTier_BusinessID" ON "PartnerProgramTier" ("BusinessID");

CREATE INDEX "IX_PartnerProgramTier_BusinessProfileRecordID" ON "PartnerProgramTier" ("BusinessProfileRecordID");

CREATE INDEX "IX_PartnerProgramTier_PartnerProgramID" ON "PartnerProgramTier" ("PartnerProgramID");

CREATE INDEX "IX_PartnerProgramTier_PriceListID" ON "PartnerProgramTier" ("PriceListID");

CREATE INDEX "IX_Payment_AccountHolderID" ON "Payment" ("AccountHolderID");

CREATE INDEX "IX_Payment_AccountingEntryID" ON "Payment" ("AccountingEntryID");

CREATE INDEX "IX_Payment_BankAccountID" ON "Payment" ("BankAccountID");

CREATE INDEX "IX_Payment_BankID" ON "Payment" ("BankID");

CREATE INDEX "IX_Payment_BusinessID" ON "Payment" ("BusinessID");

CREATE INDEX "IX_Payment_BusinessProfileRecordID" ON "Payment" ("BusinessProfileRecordID");

CREATE INDEX "IX_Payment_CountryID" ON "Payment" ("CountryID");

CREATE INDEX "IX_Payment_CurrencyID" ON "Payment" ("CurrencyID");

CREATE INDEX "IX_Payment_EmmisorWalletAccountID" ON "Payment" ("EmmisorWalletAccountID");

CREATE INDEX "IX_Payment_EntitlementID" ON "Payment" ("EntitlementID");

CREATE INDEX "IX_Payment_FiscalIdentificationTypeID" ON "Payment" ("FiscalIdentificationTypeID");

CREATE INDEX "IX_Payment_IndividualID" ON "Payment" ("IndividualID");

CREATE INDEX "IX_Payment_InvoiceID" ON "Payment" ("InvoiceID");

CREATE INDEX "IX_Payment_IPLookupID" ON "Payment" ("IPLookupID");

CREATE INDEX "IX_Payment_LocationID" ON "Payment" ("LocationID");

CREATE INDEX "IX_Payment_OrderID" ON "Payment" ("OrderID");

CREATE INDEX "IX_Payment_OrganizationID" ON "Payment" ("OrganizationID");

CREATE INDEX "IX_Payment_PayerBusinessID" ON "Payment" ("PayerBusinessID");

CREATE INDEX "IX_Payment_PaymentGatewayID" ON "Payment" ("PaymentGatewayID");

CREATE INDEX "IX_Payment_PaymentTokenID" ON "Payment" ("PaymentTokenID");

CREATE INDEX "IX_Payment_ReceptorWalletAccountID" ON "Payment" ("ReceptorWalletAccountID");

CREATE INDEX "IX_PaymentDeduction_AccountID" ON "PaymentDeduction" ("AccountID");

CREATE INDEX "IX_PaymentDeduction_BusinessID" ON "PaymentDeduction" ("BusinessID");

CREATE INDEX "IX_PaymentDeduction_BusinessProfileRecordID" ON "PaymentDeduction" ("BusinessProfileRecordID");

CREATE INDEX "IX_PaymentDeduction_CostCentreID" ON "PaymentDeduction" ("CostCentreID");

CREATE INDEX "IX_PaymentDeduction_CurrencyID" ON "PaymentDeduction" ("CurrencyID");

CREATE INDEX "IX_PaymentDeduction_PaymentID" ON "PaymentDeduction" ("PaymentID");

CREATE INDEX "IX_PaymentDispute_CurrencyID" ON "PaymentDispute" ("CurrencyID");

CREATE INDEX "IX_PaymentDispute_EmmisorWalletAccountID" ON "PaymentDispute" ("EmmisorWalletAccountID");

CREATE INDEX "IX_PaymentDispute_PaymentGatewayID" ON "PaymentDispute" ("PaymentGatewayID");

CREATE INDEX "IX_PaymentDispute_PaymentID" ON "PaymentDispute" ("PaymentID");

CREATE INDEX "IX_PaymentDispute_ReceptorWalletAccountID" ON "PaymentDispute" ("ReceptorWalletAccountID");

CREATE INDEX "IX_PaymentGateway_BusinessID" ON "PaymentGateway" ("BusinessID");

CREATE INDEX "IX_PaymentMode_BusinessID" ON "PaymentMode" ("BusinessID");

CREATE INDEX "IX_PaymentMode_BusinessProfileRecordID" ON "PaymentMode" ("BusinessProfileRecordID");

CREATE INDEX "IX_PaymentRequest_BankAccountID" ON "PaymentRequest" ("BankAccountID");

CREATE INDEX "IX_PaymentRequest_BusinessID" ON "PaymentRequest" ("BusinessID");

CREATE INDEX "IX_PaymentRequest_BusinessProfileRecordID" ON "PaymentRequest" ("BusinessProfileRecordID");

CREATE INDEX "IX_PaymentRequest_ContactID" ON "PaymentRequest" ("ContactID");

CREATE INDEX "IX_PaymentRequest_PaymentModeID" ON "PaymentRequest" ("PaymentModeID");

CREATE INDEX "IX_PaymentTerm_BusinessID" ON "PaymentTerm" ("BusinessID");

CREATE INDEX "IX_PaymentTerm_BusinessProfileRecordID" ON "PaymentTerm" ("BusinessProfileRecordID");

CREATE INDEX "IX_PaymentTerm_PaymentModeID" ON "PaymentTerm" ("PaymentModeID");

CREATE INDEX "IX_PaymentToken_PaymentGatewayID" ON "PaymentToken" ("PaymentGatewayID");

CREATE INDEX "IX_PaymentToken_WalletAccountID" ON "PaymentToken" ("WalletAccountID");

CREATE INDEX "IX_Payroll_BusinessID" ON "Payroll" ("BusinessID");

CREATE INDEX "IX_Payroll_BusinessProfileRecordID" ON "Payroll" ("BusinessProfileRecordID");

CREATE INDEX "IX_Payroll_PayrollPeriodID" ON "Payroll" ("PayrollPeriodID");

CREATE INDEX "IX_PayrollEntry_BankAccountID" ON "PayrollEntry" ("BankAccountID");

CREATE INDEX "IX_PayrollEntry_BusinessID" ON "PayrollEntry" ("BusinessID");

CREATE INDEX "IX_PayrollEntry_CurrencyID" ON "PayrollEntry" ("CurrencyID");

CREATE INDEX "IX_PayrollEntry_PayrollID" ON "PayrollEntry" ("PayrollID");

CREATE INDEX "IX_PayrollEntry_SalaryID" ON "PayrollEntry" ("SalaryID");

CREATE INDEX "IX_PointOfSale_BusinessID" ON "PointOfSale" ("BusinessID");

CREATE INDEX "IX_PointOfSale_BusinessProfileRecordID" ON "PointOfSale" ("BusinessProfileRecordID");

CREATE INDEX "IX_PointOfSale_LocationID" ON "PointOfSale" ("LocationID");

CREATE INDEX "IX_PointOfSale_PriceListID" ON "PointOfSale" ("PriceListID");

CREATE INDEX "IX_Policy_BusinessID" ON "Policy" ("BusinessID");

CREATE INDEX "IX_Policy_BusinessProfileRecordID" ON "Policy" ("BusinessProfileRecordID");

CREATE INDEX "IX_Policy_CityID" ON "Policy" ("CityID");

CREATE INDEX "IX_Policy_CountryID" ON "Policy" ("CountryID");

CREATE INDEX "IX_Policy_CountryStateID" ON "Policy" ("CountryStateID");

CREATE INDEX "IX_Policy_CurrencyID" ON "Policy" ("CurrencyID");

CREATE INDEX "IX_Policy_FiscalAuthorityID" ON "Policy" ("FiscalAuthorityID");

CREATE INDEX "IX_Policy_ReturnPolicy_ShippingCourierID" ON "Policy" ("ReturnPolicy_ShippingCourierID");

CREATE INDEX "IX_Policy_ShippingCourierID" ON "Policy" ("ShippingCourierID");

CREATE INDEX "IX_PriceList_BusinessID" ON "PriceList" ("BusinessID");

CREATE INDEX "IX_PriceList_BusinessProfileRecordID" ON "PriceList" ("BusinessProfileRecordID");

CREATE INDEX "IX_PriceList_CurrencyID" ON "PriceList" ("CurrencyID");

CREATE INDEX "IX_PriceList_UnitGroupID" ON "PriceList" ("UnitGroupID");

CREATE INDEX "IX_PriceList_UnitID" ON "PriceList" ("UnitID");

CREATE INDEX "IX_PriceListItem_BusinessID" ON "PriceListItem" ("BusinessID");

CREATE INDEX "IX_PriceListItem_BusinessProfileRecordID" ON "PriceListItem" ("BusinessProfileRecordID");

CREATE INDEX "IX_PriceListItem_CurrencyID" ON "PriceListItem" ("CurrencyID");

CREATE INDEX "IX_PriceListItem_DiscountListID" ON "PriceListItem" ("DiscountListID");

CREATE INDEX "IX_PriceListItem_ItemID" ON "PriceListItem" ("ItemID");

CREATE INDEX "IX_PriceListItem_ItemPriceListID" ON "PriceListItem" ("ItemPriceListID");

CREATE INDEX "IX_PriceListItem_PriceListID" ON "PriceListItem" ("PriceListID");

CREATE INDEX "IX_PriceListItem_RoundingPolicyID" ON "PriceListItem" ("RoundingPolicyID");

CREATE INDEX "IX_PriceListItem_TransactionCategoryID" ON "PriceListItem" ("TransactionCategoryID");

CREATE INDEX "IX_PriceListItem_UnitGroupID" ON "PriceListItem" ("UnitGroupID");

CREATE INDEX "IX_PriceListItem_UnitID" ON "PriceListItem" ("UnitID");

CREATE INDEX "IX_PriceListTerritory_BusinessID" ON "PriceListTerritory" ("BusinessID");

CREATE INDEX "IX_PriceListTerritory_BusinessProfileRecordID" ON "PriceListTerritory" ("BusinessProfileRecordID");

CREATE INDEX "IX_PriceListTerritory_PriceListID" ON "PriceListTerritory" ("PriceListID");

CREATE INDEX "IX_PriceListTerritory_TerritoryID" ON "PriceListTerritory" ("TerritoryID");

CREATE INDEX "IX_Priority_BusinessID" ON "Priority" ("BusinessID");

CREATE INDEX "IX_Priority_BusinessProfileRecordID" ON "Priority" ("BusinessProfileRecordID");

CREATE INDEX "IX_PrivateMessage_ConversationID" ON "PrivateMessage" ("ConversationID");

CREATE INDEX "IX_PrivateMessage_ReceptorID" ON "PrivateMessage" ("ReceptorID");

CREATE INDEX "IX_PrivateMessage_SenderID" ON "PrivateMessage" ("SenderID");

CREATE INDEX "IX_ProductionPlan_BusinessID" ON "ProductionPlan" ("BusinessID");

CREATE INDEX "IX_ProductionPlan_BusinessProfileRecordID" ON "ProductionPlan" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProficiencyRatingModel_BusinessID" ON "ProficiencyRatingModel" ("BusinessID");

CREATE INDEX "IX_ProficiencyRatingModel_BusinessProfileRecordID" ON "ProficiencyRatingModel" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProficiencyRatingValue_BusinessID" ON "ProficiencyRatingValue" ("BusinessID");

CREATE INDEX "IX_ProficiencyRatingValue_BusinessProfileRecordID" ON "ProficiencyRatingValue" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProficiencyRatingValue_ProficiencyRatingModelID" ON "ProficiencyRatingValue" ("ProficiencyRatingModelID");

CREATE INDEX "IX_Project_BusinessID" ON "Project" ("BusinessID");

CREATE INDEX "IX_Project_BusinessProfileRecordID" ON "Project" ("BusinessProfileRecordID");

CREATE INDEX "IX_Project_BusinessTeamID" ON "Project" ("BusinessTeamID");

CREATE INDEX "IX_Project_SocialProfileID" ON "Project" ("SocialProfileID");

CREATE INDEX "IX_ProjectBacklog_ProjectID" ON "ProjectBacklog" ("ProjectID");

CREATE INDEX "IX_ProjectJournal_BusinessID" ON "ProjectJournal" ("BusinessID");

CREATE INDEX "IX_ProjectJournal_BusinessProfileRecordID" ON "ProjectJournal" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProjectResource_BusinessID" ON "ProjectResource" ("BusinessID");

CREATE INDEX "IX_ProjectResource_BusinessProfileRecordID" ON "ProjectResource" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProjectResourceRole_BusinessID" ON "ProjectResourceRole" ("BusinessID");

CREATE INDEX "IX_ProjectResourceRole_BusinessProfileRecordID" ON "ProjectResourceRole" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProjectResourceSkillRecord_BusinessID" ON "ProjectResourceSkillRecord" ("BusinessID");

CREATE INDEX "IX_ProjectResourceSkillRecord_BusinessProfileRecordID" ON "ProjectResourceSkillRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProjectResourceSkillRecord_ProficiencyRatingValueID" ON "ProjectResourceSkillRecord" ("ProficiencyRatingValueID");

CREATE INDEX "IX_ProjectResourceSkillRecord_ProjectResourceID" ON "ProjectResourceSkillRecord" ("ProjectResourceID");

CREATE INDEX "IX_ProjectResourceSkillRecord_ProjectResourceRoleID" ON "ProjectResourceSkillRecord" ("ProjectResourceRoleID");

CREATE INDEX "IX_ProjectResourceSkillRecord_ProjectResourceSkillID" ON "ProjectResourceSkillRecord" ("ProjectResourceSkillID");

CREATE INDEX "IX_ProjectTaskBucket_BusinessID" ON "ProjectTaskBucket" ("BusinessID");

CREATE INDEX "IX_ProjectTaskBucket_BusinessProfileRecordID" ON "ProjectTaskBucket" ("BusinessProfileRecordID");

CREATE INDEX "IX_ProjectTaskBucket_KanbanBoardID" ON "ProjectTaskBucket" ("KanbanBoardID");

CREATE INDEX "IX_ProjectTaskBucket_ProjectID" ON "ProjectTaskBucket" ("ProjectID");

CREATE INDEX "IX_ProjectTaskRelationship_ChildProjectTaskID" ON "ProjectTaskRelationship" ("ChildProjectTaskID");

CREATE INDEX "IX_ProjectTaskRelationship_ParentProjectTaskID" ON "ProjectTaskRelationship" ("ParentProjectTaskID");

CREATE INDEX "IX_PurchaseRequest_BusinessID" ON "PurchaseRequest" ("BusinessID");

CREATE INDEX "IX_PurchaseRequest_BusinessProfileRecordID" ON "PurchaseRequest" ("BusinessProfileRecordID");

CREATE INDEX "IX_PurchaseRequest_SupplierProfileID" ON "PurchaseRequest" ("SupplierProfileID");

CREATE INDEX "IX_Quote_AccountHolderID" ON "Quote" ("AccountHolderID");

CREATE INDEX "IX_Quote_BillingLocationID" ON "Quote" ("BillingLocationID");

CREATE INDEX "IX_Quote_BusinessID" ON "Quote" ("BusinessID");

CREATE INDEX "IX_Quote_BusinessProfileRecordID" ON "Quote" ("BusinessProfileRecordID");

CREATE INDEX "IX_Quote_CurrencyID" ON "Quote" ("CurrencyID");

CREATE INDEX "IX_Quote_DealUnitID" ON "Quote" ("DealUnitID");

CREATE INDEX "IX_Quote_IndividualID" ON "Quote" ("IndividualID");

CREATE INDEX "IX_Quote_OrganizationID" ON "Quote" ("OrganizationID");

CREATE INDEX "IX_Quote_PaymentTermID" ON "Quote" ("PaymentTermID");

CREATE INDEX "IX_Quote_PriceListID" ON "Quote" ("PriceListID");

CREATE INDEX "IX_Quote_ProjectID" ON "Quote" ("ProjectID");

CREATE INDEX "IX_Quote_ReceptorBusinessID" ON "Quote" ("ReceptorBusinessID");

CREATE INDEX "IX_Quote_ShippingLocationID" ON "Quote" ("ShippingLocationID");

CREATE INDEX "IX_Quote_ShippingMethodID" ON "Quote" ("ShippingMethodID");

CREATE INDEX "IX_Quote_SupplierProfileID" ON "Quote" ("SupplierProfileID");

CREATE INDEX "IX_QuoteRequest_BusinessID" ON "QuoteRequest" ("BusinessID");

CREATE INDEX "IX_QuoteRequest_ContactID" ON "QuoteRequest" ("ContactID");

CREATE INDEX "IX_Receipt_AccountHolderID" ON "Receipt" ("AccountHolderID");

CREATE INDEX "IX_Receipt_BusinessID" ON "Receipt" ("BusinessID");

CREATE INDEX "IX_Receipt_BusinessProfileRecordID" ON "Receipt" ("BusinessProfileRecordID");

CREATE INDEX "IX_Receipt_ContactID" ON "Receipt" ("ContactID");

CREATE INDEX "IX_Receipt_InvoiceID" ON "Receipt" ("InvoiceID");

CREATE INDEX "IX_Receipt_OrderID" ON "Receipt" ("OrderID");

CREATE INDEX "IX_Receipt_PaymentID" ON "Receipt" ("PaymentID");

CREATE INDEX "IX_RegionalBlockAlternativeAcronym_RegionalBlockID" ON "RegionalBlockAlternativeAcronym" ("RegionalBlockID");

CREATE INDEX "IX_RegionalBlockAlternativeName_RegionalBlockID" ON "RegionalBlockAlternativeName" ("RegionalBlockID");

CREATE INDEX "IX_RequiredSkillRecord_BusinessID" ON "RequiredSkillRecord" ("BusinessID");

CREATE INDEX "IX_RequiredSkillRecord_EmployerProfileID" ON "RequiredSkillRecord" ("EmployerProfileID");

CREATE INDEX "IX_RequiredSkillRecord_JobOfferID" ON "RequiredSkillRecord" ("JobOfferID");

CREATE INDEX "IX_RequiredSkillRecord_SkillID" ON "RequiredSkillRecord" ("SkillID");

CREATE INDEX "IX_RetentionBonus_BusinessID" ON "RetentionBonus" ("BusinessID");

CREATE INDEX "IX_RetentionBonus_BusinessProfileRecordID" ON "RetentionBonus" ("BusinessProfileRecordID");

CREATE INDEX "IX_RetentionBonus_CurrencyID" ON "RetentionBonus" ("CurrencyID");

CREATE INDEX "IX_RetentionBonus_SalaryID" ON "RetentionBonus" ("SalaryID");

CREATE INDEX "IX_Review_BlogPostID" ON "Review" ("BlogPostID");

CREATE INDEX "IX_Review_BusinessID" ON "Review" ("BusinessID");

CREATE INDEX "IX_Review_ContactID" ON "Review" ("ContactID");

CREATE INDEX "IX_Review_ItemID" ON "Review" ("ItemID");

CREATE INDEX "IX_Review_SocialProfileID" ON "Review" ("SocialProfileID");

CREATE INDEX "IX_Review_SupplierProfileID" ON "Review" ("SupplierProfileID");

CREATE INDEX "IX_Review_TrainingProgramID" ON "Review" ("TrainingProgramID");

CREATE INDEX "IX_Review_TrainingProgramReview_BusinessID" ON "Review" ("TrainingProgramReview_BusinessID");

CREATE INDEX "IX_RolePriceMarkup_BusinessID" ON "RolePriceMarkup" ("BusinessID");

CREATE INDEX "IX_RolePriceMarkup_BusinessProfileRecordID" ON "RolePriceMarkup" ("BusinessProfileRecordID");

CREATE INDEX "IX_RolePriceMarkup_PriceListID" ON "RolePriceMarkup" ("PriceListID");

CREATE INDEX "IX_Row_EntityID" ON "Row" ("EntityID");

CREATE INDEX "IX_Salary_BusinessID" ON "Salary" ("BusinessID");

CREATE INDEX "IX_Salary_BusinessProfileRecordID" ON "Salary" ("BusinessProfileRecordID");

CREATE INDEX "IX_Salary_CurrencyID" ON "Salary" ("CurrencyID");

CREATE INDEX "IX_Salary_EmployeeProfileID" ON "Salary" ("EmployeeProfileID");

CREATE INDEX "IX_SalaryDeduction_BusinessID" ON "SalaryDeduction" ("BusinessID");

CREATE INDEX "IX_SalaryDeduction_BusinessProfileRecordID" ON "SalaryDeduction" ("BusinessProfileRecordID");

CREATE INDEX "IX_SalaryDeduction_CurrencyID" ON "SalaryDeduction" ("CurrencyID");

CREATE INDEX "IX_SalaryDeduction_SalaryID" ON "SalaryDeduction" ("SalaryID");

CREATE INDEX "IX_SalaryEarning_BusinessID" ON "SalaryEarning" ("BusinessID");

CREATE INDEX "IX_SalaryEarning_BusinessProfileRecordID" ON "SalaryEarning" ("BusinessProfileRecordID");

CREATE INDEX "IX_SalaryEarning_CurrencyID" ON "SalaryEarning" ("CurrencyID");

CREATE INDEX "IX_SalaryEarning_SalaryID" ON "SalaryEarning" ("SalaryID");

CREATE INDEX "IX_SalesLiterature_BusinessID" ON "SalesLiterature" ("BusinessID");

CREATE INDEX "IX_SalesLiterature_BusinessProfileRecordID" ON "SalesLiterature" ("BusinessProfileRecordID");

CREATE INDEX "IX_SalesLiterature_SalesLiteratureTypeID" ON "SalesLiterature" ("SalesLiteratureTypeID");

CREATE INDEX "IX_SalesLiteratureRecord_BusinessID" ON "SalesLiteratureRecord" ("BusinessID");

CREATE INDEX "IX_SalesLiteratureRecord_BusinessProfileRecordID" ON "SalesLiteratureRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_SalesLiteratureRecord_ItemID" ON "SalesLiteratureRecord" ("ItemID");

CREATE INDEX "IX_SalesLiteratureRecord_SalesLiteratureID" ON "SalesLiteratureRecord" ("SalesLiteratureID");

CREATE INDEX "IX_SalesLiteratureType_BusinessID" ON "SalesLiteratureType" ("BusinessID");

CREATE INDEX "IX_SalesLiteratureType_BusinessProfileRecordID" ON "SalesLiteratureType" ("BusinessProfileRecordID");

CREATE INDEX "IX_Schedule_AssetID" ON "Schedule" ("AssetID");

CREATE INDEX "IX_Schedule_BusinessID" ON "Schedule" ("BusinessID");

CREATE INDEX "IX_Schedule_ContactID" ON "Schedule" ("ContactID");

CREATE INDEX "IX_Schedule_FiscalYearID" ON "Schedule" ("FiscalYearID");

CREATE INDEX "IX_Schedule_HolidayScheduleID" ON "Schedule" ("HolidayScheduleID");

CREATE INDEX "IX_Schedule_ProjectID" ON "Schedule" ("ProjectID");

CREATE INDEX "IX_Schedule_ServiceID" ON "Schedule" ("ServiceID");

CREATE INDEX "IX_Schedule_TimezoneID" ON "Schedule" ("TimezoneID");

CREATE INDEX "IX_SecurityRoleGrant_BusinessApplicationID" ON "SecurityRoleGrant" ("BusinessApplicationID");

CREATE INDEX "IX_SecurityRoleGrant_BusinessID" ON "SecurityRoleGrant" ("BusinessID");

CREATE INDEX "IX_SecurityRoleGrant_BusinessProfileRecordID" ON "SecurityRoleGrant" ("BusinessProfileRecordID");

CREATE INDEX "IX_SecurityRoleGrant_BusinessSecurityRoleID" ON "SecurityRoleGrant" ("BusinessSecurityRoleID");

CREATE INDEX "IX_SecurityRoleGrant_GrantorBusinessProfileRecordID" ON "SecurityRoleGrant" ("GrantorBusinessProfileRecordID");

CREATE INDEX "IX_SEOKeyWord_BusinessID" ON "SEOKeyWord" ("BusinessID");

CREATE INDEX "IX_SEOKeyWordRecord_SEOKeyWordID" ON "SEOKeyWordRecord" ("SEOKeyWordID");

CREATE INDEX "IX_ServiceCase_AccountHolderID" ON "ServiceCase" ("AccountHolderID");

CREATE INDEX "IX_ServiceCase_BusinessID" ON "ServiceCase" ("BusinessID");

CREATE INDEX "IX_ServiceCase_BusinessProfileRecordID" ON "ServiceCase" ("BusinessProfileRecordID");

CREATE INDEX "IX_ServiceCase_CurrencyID" ON "ServiceCase" ("CurrencyID");

CREATE INDEX "IX_ServiceCase_IndividualID" ON "ServiceCase" ("IndividualID");

CREATE INDEX "IX_ServiceCase_OrganizationID" ON "ServiceCase" ("OrganizationID");

CREATE INDEX "IX_ServiceCase_PriceListID" ON "ServiceCase" ("PriceListID");

CREATE INDEX "IX_ServiceCase_ProductionPlanID" ON "ServiceCase" ("ProductionPlanID");

CREATE INDEX "IX_ServiceCase_ReceptorBusinessID" ON "ServiceCase" ("ReceptorBusinessID");

CREATE INDEX "IX_ServiceCase_ServiceCaseTypeID" ON "ServiceCase" ("ServiceCaseTypeID");

CREATE INDEX "IX_ServiceCase_ServiceID" ON "ServiceCase" ("ServiceID");

CREATE INDEX "IX_ServiceCase_ServiceLevelAgreementID" ON "ServiceCase" ("ServiceLevelAgreementID");

CREATE INDEX "IX_ServiceCase_ServiceQueueID" ON "ServiceCase" ("ServiceQueueID");

CREATE INDEX "IX_ServiceCase_TerritoryID" ON "ServiceCase" ("TerritoryID");

CREATE INDEX "IX_ServiceCase_WorkOrderTypeID" ON "ServiceCase" ("WorkOrderTypeID");

CREATE INDEX "IX_ServiceCase_WorkstationID" ON "ServiceCase" ("WorkstationID");

CREATE INDEX "IX_ServiceCaseType_BusinessID" ON "ServiceCaseType" ("BusinessID");

CREATE INDEX "IX_ServiceCaseType_BusinessProfileRecordID" ON "ServiceCaseType" ("BusinessProfileRecordID");

CREATE INDEX "IX_ServiceFulfillment_BusinessID" ON "ServiceFulfillment" ("BusinessID");

CREATE INDEX "IX_ServiceFulfillment_BusinessProfileRecordID" ON "ServiceFulfillment" ("BusinessProfileRecordID");

CREATE INDEX "IX_ServiceFulfillment_ServiceCaseID" ON "ServiceFulfillment" ("ServiceCaseID");

CREATE INDEX "IX_ServiceFulfillment_ServiceFulfillmentPreferencesID" ON "ServiceFulfillment" ("ServiceFulfillmentPreferencesID");

CREATE INDEX "IX_ServiceFulfillment_ServiceID" ON "ServiceFulfillment" ("ServiceID");

CREATE INDEX "IX_ServiceFulfillmentPreferences_BusinessID" ON "ServiceFulfillmentPreferences" ("BusinessID");

CREATE INDEX "IX_ServiceFulfillmentPreferences_BusinessProfileRecordID" ON "ServiceFulfillmentPreferences" ("BusinessProfileRecordID");

CREATE INDEX "IX_ServiceFulfillmentPreferences_ServiceCaseID" ON "ServiceFulfillmentPreferences" ("ServiceCaseID");

CREATE INDEX "IX_ServicePersonnelRecord_EmployeeProfileID" ON "ServicePersonnelRecord" ("EmployeeProfileID");

CREATE INDEX "IX_ServicePersonnelRecord_ServiceCaseID" ON "ServicePersonnelRecord" ("ServiceCaseID");

CREATE INDEX "IX_ServicePersonnelRecord_ServiceID" ON "ServicePersonnelRecord" ("ServiceID");

CREATE INDEX "IX_ServiceQueue_BusinessID" ON "ServiceQueue" ("BusinessID");

CREATE INDEX "IX_ServiceQueue_BusinessProfileRecordID" ON "ServiceQueue" ("BusinessProfileRecordID");

CREATE INDEX "IX_ServiceQueue_BusinessTeamID" ON "ServiceQueue" ("BusinessTeamID");

CREATE INDEX "IX_ServiceQueueRecord_BusinessID" ON "ServiceQueueRecord" ("BusinessID");

CREATE INDEX "IX_ServiceQueueRecord_BusinessProfileRecordID" ON "ServiceQueueRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_ServiceQueueRecord_ServiceID" ON "ServiceQueueRecord" ("ServiceID");

CREATE INDEX "IX_ServiceQueueRecord_ServiceQueueID" ON "ServiceQueueRecord" ("ServiceQueueID");

CREATE INDEX "IX_ShareClass_BusinessID" ON "ShareClass" ("BusinessID");

CREATE INDEX "IX_ShareClass_BusinessProfileRecordID" ON "ShareClass" ("BusinessProfileRecordID");

CREATE INDEX "IX_ShareClass_CurrencyID" ON "ShareClass" ("CurrencyID");

CREATE INDEX "IX_ShareIssuance_BusinessID" ON "ShareIssuance" ("BusinessID");

CREATE INDEX "IX_ShareIssuance_BusinessProfileRecordID" ON "ShareIssuance" ("BusinessProfileRecordID");

CREATE INDEX "IX_ShareIssuance_CurrencyID" ON "ShareIssuance" ("CurrencyID");

CREATE INDEX "IX_ShareTransfer_BusinessID" ON "ShareTransfer" ("BusinessID");

CREATE INDEX "IX_ShareTransfer_BusinessProfileRecordID" ON "ShareTransfer" ("BusinessProfileRecordID");

CREATE INDEX "IX_ShareTransfer_FormerShareHolderID" ON "ShareTransfer" ("FormerShareHolderID");

CREATE INDEX "IX_ShareTransfer_NewShareHolderID" ON "ShareTransfer" ("NewShareHolderID");

CREATE INDEX "IX_ShareTransfer_ShareTransferReasonID" ON "ShareTransfer" ("ShareTransferReasonID");

CREATE INDEX "IX_ShareTransferReason_BusinessID" ON "ShareTransferReason" ("BusinessID");

CREATE INDEX "IX_ShareTransferReason_BusinessProfileRecordID" ON "ShareTransferReason" ("BusinessProfileRecordID");

CREATE INDEX "IX_Shipment_BillingItemRecordID" ON "Shipment" ("BillingItemRecordID");

CREATE INDEX "IX_Shipment_BusinessID" ON "Shipment" ("BusinessID");

CREATE INDEX "IX_Shipment_OrderID" ON "Shipment" ("OrderID");

CREATE INDEX "IX_ShippingClass_BusinessID" ON "ShippingClass" ("BusinessID");

CREATE INDEX "IX_ShippingCourier_BusinessID" ON "ShippingCourier" ("BusinessID");

CREATE INDEX "IX_ShippingCourier_BusinessProfileRecordID" ON "ShippingCourier" ("BusinessProfileRecordID");

CREATE INDEX "IX_ShippingCourier_CountryID" ON "ShippingCourier" ("CountryID");

CREATE INDEX "IX_ShippingLabel_BusinessID" ON "ShippingLabel" ("BusinessID");

CREATE INDEX "IX_ShippingLabel_LocationID" ON "ShippingLabel" ("LocationID");

CREATE INDEX "IX_ShippingLabel_ShipmentID" ON "ShippingLabel" ("ShipmentID");

CREATE INDEX "IX_ShippingLabel_ShippingCourierID" ON "ShippingLabel" ("ShippingCourierID");

CREATE INDEX "IX_ShippingMethod_BusinessID" ON "ShippingMethod" ("BusinessID");

CREATE INDEX "IX_ShippingMethod_CurrencyID" ON "ShippingMethod" ("CurrencyID");

CREATE INDEX "IX_ShippingMethodClassRecord_BusinessID" ON "ShippingMethodClassRecord" ("BusinessID");

CREATE INDEX "IX_ShippingMethodClassRecord_CurrencyID" ON "ShippingMethodClassRecord" ("CurrencyID");

CREATE INDEX "IX_ShippingMethodClassRecord_ShippingClassID" ON "ShippingMethodClassRecord" ("ShippingClassID");

CREATE INDEX "IX_ShippingMethodClassRecord_ShippingMethodID" ON "ShippingMethodClassRecord" ("ShippingMethodID");

CREATE INDEX "IX_ShippingMethodZoneRecord_BusinessID" ON "ShippingMethodZoneRecord" ("BusinessID");

CREATE INDEX "IX_ShippingMethodZoneRecord_ShippingMethodID" ON "ShippingMethodZoneRecord" ("ShippingMethodID");

CREATE INDEX "IX_ShippingMethodZoneRecord_ShippingZoneID" ON "ShippingMethodZoneRecord" ("ShippingZoneID");

CREATE INDEX "IX_ShippingPackage_BusinessID" ON "ShippingPackage" ("BusinessID");

CREATE INDEX "IX_ShippingPackage_ShippingCourierID" ON "ShippingPackage" ("ShippingCourierID");

CREATE INDEX "IX_ShippingPackage_ShippingLabelID" ON "ShippingPackage" ("ShippingLabelID");

CREATE INDEX "IX_ShippingRegion_BusinessID" ON "ShippingRegion" ("BusinessID");

CREATE INDEX "IX_ShippingRegionCountryRecord_BusinessID" ON "ShippingRegionCountryRecord" ("BusinessID");

CREATE INDEX "IX_ShippingRegionCountryRecord_CountryID" ON "ShippingRegionCountryRecord" ("CountryID");

CREATE INDEX "IX_ShippingRegionCountryRecord_ShippingRegionID" ON "ShippingRegionCountryRecord" ("ShippingRegionID");

CREATE INDEX "IX_ShippingRegionZoneRecord_BusinessID" ON "ShippingRegionZoneRecord" ("BusinessID");

CREATE INDEX "IX_ShippingRegionZoneRecord_ShippingRegionID" ON "ShippingRegionZoneRecord" ("ShippingRegionID");

CREATE INDEX "IX_ShippingRegionZoneRecord_ShippingZoneID" ON "ShippingRegionZoneRecord" ("ShippingZoneID");

CREATE INDEX "IX_ShippingZone_BusinessID" ON "ShippingZone" ("BusinessID");

CREATE INDEX "IX_Signature_AccountHolderID" ON "Signature" ("AccountHolderID");

CREATE INDEX "IX_Signature_AgreementRevisionID" ON "Signature" ("AgreementRevisionID");

CREATE INDEX "IX_Signature_BusinessID" ON "Signature" ("BusinessID");

CREATE INDEX "IX_Signature_BusinessProfileRecordID" ON "Signature" ("BusinessProfileRecordID");

CREATE INDEX "IX_Signature_ContactID" ON "Signature" ("ContactID");

CREATE INDEX "IX_Signature_SignedDocumentID" ON "Signature" ("SignedDocumentID");

CREATE INDEX "IX_Signature_SigningCertificateID" ON "Signature" ("SigningCertificateID");

CREATE INDEX "IX_Signature_SigningProfileID" ON "Signature" ("SigningProfileID");

CREATE INDEX "IX_Signature_SocialProfileID" ON "Signature" ("SocialProfileID");

CREATE INDEX "IX_SignedDocument_AccountHolderID" ON "SignedDocument" ("AccountHolderID");

CREATE INDEX "IX_SignedDocument_BusinessID" ON "SignedDocument" ("BusinessID");

CREATE INDEX "IX_SignedDocument_BusinessProfileRecordID" ON "SignedDocument" ("BusinessProfileRecordID");

CREATE INDEX "IX_SignedDocument_ContactID" ON "SignedDocument" ("ContactID");

CREATE INDEX "IX_SignedDocument_SigningCertificateID" ON "SignedDocument" ("SigningCertificateID");

CREATE INDEX "IX_SignedDocument_SigningProfileID" ON "SignedDocument" ("SigningProfileID");

CREATE INDEX "IX_SigningCertificate_AccountHolderID" ON "SigningCertificate" ("AccountHolderID");

CREATE INDEX "IX_SigningCertificate_BusinessID" ON "SigningCertificate" ("BusinessID");

CREATE INDEX "IX_SigningCertificate_BusinessProfileRecordID" ON "SigningCertificate" ("BusinessProfileRecordID");

CREATE INDEX "IX_SigningCertificate_ContactID" ON "SigningCertificate" ("ContactID");

CREATE INDEX "IX_SigningCertificate_SigningProfileID" ON "SigningCertificate" ("SigningProfileID");

CREATE INDEX "IX_Skill_BusinessID" ON "Skill" ("BusinessID");

CREATE INDEX "IX_Skill_BusinessProfileRecordID" ON "Skill" ("BusinessProfileRecordID");

CREATE INDEX "IX_SocialBadge_BusinessID" ON "SocialBadge" ("BusinessID");

CREATE INDEX "IX_SocialBadge_BusinessProfileRecordID" ON "SocialBadge" ("BusinessProfileRecordID");

CREATE INDEX "IX_SocialBadgeRecord_SocialBadgeID" ON "SocialBadgeRecord" ("SocialBadgeID");

CREATE INDEX "IX_SocialBadgeRecord_SocialProfileID" ON "SocialBadgeRecord" ("SocialProfileID");

CREATE INDEX "IX_SocialComment_BlogPostID" ON "SocialComment" ("BlogPostID");

CREATE INDEX "IX_SocialComment_OwnerSocialProfileID" ON "SocialComment" ("OwnerSocialProfileID");

CREATE INDEX "IX_SocialComment_ParentCommentID" ON "SocialComment" ("ParentCommentID");

CREATE INDEX "IX_SocialComment_SocialPostID" ON "SocialComment" ("SocialPostID");

CREATE UNIQUE INDEX "IX_SocialFeed_SocialProfileID" ON "SocialFeed" ("SocialProfileID");

CREATE INDEX "IX_SocialGroup_BusinessID" ON "SocialGroup" ("BusinessID");

CREATE INDEX "IX_SocialGroup_BusinessProfileRecordID" ON "SocialGroup" ("BusinessProfileRecordID");

CREATE UNIQUE INDEX "IX_SocialGroup_CourseID" ON "SocialGroup" ("CourseID");

CREATE INDEX "IX_SocialGroup_SocialProfileID" ON "SocialGroup" ("SocialProfileID");

CREATE INDEX "IX_SocialGroupEnrollmentRecord_GroupID" ON "SocialGroupEnrollmentRecord" ("GroupID");

CREATE INDEX "IX_SocialGroupEnrollmentRecord_SocialProfileID" ON "SocialGroupEnrollmentRecord" ("SocialProfileID");

CREATE INDEX "IX_SocialMediaPost_BusinessID" ON "SocialMediaPost" ("BusinessID");

CREATE INDEX "IX_SocialMediaPost_BusinessProfileRecordID" ON "SocialMediaPost" ("BusinessProfileRecordID");

CREATE INDEX "IX_SocialMediaPost_SocialPostBucketID" ON "SocialMediaPost" ("SocialPostBucketID");

CREATE INDEX "IX_SocialPost_BlogPostID" ON "SocialPost" ("BlogPostID");

CREATE INDEX "IX_SocialPost_SocialFeedID" ON "SocialPost" ("SocialFeedID");

CREATE INDEX "IX_SocialPost_SocialGroupID" ON "SocialPost" ("SocialGroupID");

CREATE INDEX "IX_SocialPost_SocialProfileID" ON "SocialPost" ("SocialProfileID");

CREATE INDEX "IX_SocialPost_WebForumID" ON "SocialPost" ("WebForumID");

CREATE INDEX "IX_SocialPost_WebPageID" ON "SocialPost" ("WebPageID");

CREATE INDEX "IX_SocialPostBucket_BusinessID" ON "SocialPostBucket" ("BusinessID");

CREATE INDEX "IX_SocialPostBucket_BusinessProfileRecordID" ON "SocialPostBucket" ("BusinessProfileRecordID");

CREATE UNIQUE INDEX "IX_SocialProfile_AccountHolderID" ON "SocialProfile" ("AccountHolderID");

CREATE UNIQUE INDEX "IX_SocialProfile_BusinessID" ON "SocialProfile" ("BusinessID");

CREATE UNIQUE INDEX "IX_SocialProfile_ContactID" ON "SocialProfile" ("ContactID");

CREATE INDEX "IX_SocialReaction_BlogPostID" ON "SocialReaction" ("BlogPostID");

CREATE INDEX "IX_SocialReaction_SocialCommentID" ON "SocialReaction" ("SocialCommentID");

CREATE INDEX "IX_SocialReaction_SocialPostID" ON "SocialReaction" ("SocialPostID");

CREATE INDEX "IX_SocialReaction_SocialProfileID" ON "SocialReaction" ("SocialProfileID");

CREATE INDEX "IX_SupplierGroup_BusinessID" ON "SupplierGroup" ("BusinessID");

CREATE INDEX "IX_SupplierGroup_BusinessProfileRecordID" ON "SupplierGroup" ("BusinessProfileRecordID");

CREATE INDEX "IX_SupplierGroupRecord_BusinessID" ON "SupplierGroupRecord" ("BusinessID");

CREATE INDEX "IX_SupplierGroupRecord_BusinessProfileRecordID" ON "SupplierGroupRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_SupplierGroupRecord_SupplierGroupID" ON "SupplierGroupRecord" ("SupplierGroupID");

CREATE INDEX "IX_SupplierGroupRecord_SupplierProfileID" ON "SupplierGroupRecord" ("SupplierProfileID");

CREATE INDEX "IX_SupportPriority_BusinessID" ON "SupportPriority" ("BusinessID");

CREATE INDEX "IX_SupportPriority_SupportEntitlementID" ON "SupportPriority" ("SupportEntitlementID");

CREATE INDEX "IX_SupportRequest_AccountHolderID" ON "SupportRequest" ("AccountHolderID");

CREATE INDEX "IX_SupportRequest_BusinessID" ON "SupportRequest" ("BusinessID");

CREATE INDEX "IX_SupportRequest_BusinessProfileRecordID" ON "SupportRequest" ("BusinessProfileRecordID");

CREATE INDEX "IX_SupportRequest_ContactID" ON "SupportRequest" ("ContactID");

CREATE INDEX "IX_SupportRequest_PaymentID" ON "SupportRequest" ("PaymentID");

CREATE INDEX "IX_SupportRequest_RefundPolicyID" ON "SupportRequest" ("RefundPolicyID");

CREATE INDEX "IX_SupportRequest_ReturnPolicyID" ON "SupportRequest" ("ReturnPolicyID");

CREATE INDEX "IX_SupportRequest_SupportEntitlementID" ON "SupportRequest" ("SupportEntitlementID");

CREATE INDEX "IX_SupportRequest_WarrantyPolicyID" ON "SupportRequest" ("WarrantyPolicyID");

CREATE INDEX "IX_SupportTicket_AccountHolderID" ON "SupportTicket" ("AccountHolderID");

CREATE INDEX "IX_SupportTicket_BusinessID" ON "SupportTicket" ("BusinessID");

CREATE INDEX "IX_SupportTicket_BusinessProfileRecordID" ON "SupportTicket" ("BusinessProfileRecordID");

CREATE INDEX "IX_SupportTicket_ContactID" ON "SupportTicket" ("ContactID");

CREATE INDEX "IX_SupportTicket_SupportEntitlementID" ON "SupportTicket" ("SupportEntitlementID");

CREATE INDEX "IX_SupportTicket_SupportPriorityID" ON "SupportTicket" ("SupportPriorityID");

CREATE INDEX "IX_SupportTicket_SupportRequestID" ON "SupportTicket" ("SupportRequestID");

CREATE INDEX "IX_SupportTicket_SupportTicketTypeID" ON "SupportTicket" ("SupportTicketTypeID");

CREATE INDEX "IX_SupportTicketType_BusinessID" ON "SupportTicketType" ("BusinessID");

CREATE UNIQUE INDEX "IX_SustainabilityProfile_BusinessID" ON "SustainabilityProfile" ("BusinessID");

CREATE INDEX "IX_SustainabilityProfile_BusinessProfileRecordID" ON "SustainabilityProfile" ("BusinessProfileRecordID");

CREATE INDEX "IX_Task_BusinessID" ON "Task" ("BusinessID");

CREATE INDEX "IX_Task_BusinessProfileRecordID" ON "Task" ("BusinessProfileRecordID");

CREATE INDEX "IX_Task_PriorityID" ON "Task" ("PriorityID");

CREATE INDEX "IX_Task_ProjectID" ON "Task" ("ProjectID");

CREATE INDEX "IX_Task_ProjectTaskBucketID" ON "Task" ("ProjectTaskBucketID");

CREATE INDEX "IX_Task_ServiceCaseID" ON "Task" ("ServiceCaseID");

CREATE INDEX "IX_Task_ServiceID" ON "Task" ("ServiceID");

CREATE INDEX "IX_Task_SocialProfileID" ON "Task" ("SocialProfileID");

CREATE INDEX "IX_Task_TaskListID" ON "Task" ("TaskListID");

CREATE INDEX "IX_TaskAssignment_SocialProfileID" ON "TaskAssignment" ("SocialProfileID");

CREATE INDEX "IX_TaskAssignment_TaskID" ON "TaskAssignment" ("TaskID");

CREATE INDEX "IX_TaskAssignment_TaskListID" ON "TaskAssignment" ("TaskListID");

CREATE INDEX "IX_TaskList_BusinessID" ON "TaskList" ("BusinessID");

CREATE INDEX "IX_TaskList_BusinessProfileRecordID" ON "TaskList" ("BusinessProfileRecordID");

CREATE INDEX "IX_TaskList_ProjectID" ON "TaskList" ("ProjectID");

CREATE INDEX "IX_TaskList_SocialProfileID" ON "TaskList" ("SocialProfileID");

CREATE INDEX "IX_TaxClass_BusinessID" ON "TaxClass" ("BusinessID");

CREATE INDEX "IX_TaxClass_BusinessProfileRecordID" ON "TaxClass" ("BusinessProfileRecordID");

CREATE INDEX "IX_TaxClass_FiscalAuthorityID" ON "TaxClass" ("FiscalAuthorityID");

CREATE INDEX "IX_TaxClass_FiscalYearID" ON "TaxClass" ("FiscalYearID");

CREATE INDEX "IX_Taxonomy_BusinessID" ON "Taxonomy" ("BusinessID");

CREATE INDEX "IX_Taxonomy_BusinessProfileRecordID" ON "Taxonomy" ("BusinessProfileRecordID");

CREATE INDEX "IX_Taxonomy_WebPortalID" ON "Taxonomy" ("WebPortalID");

CREATE INDEX "IX_TaxonomyRecord_BlogPostCategoryRecord_BlogPostID" ON "TaxonomyRecord" ("BlogPostCategoryRecord_BlogPostID");

CREATE INDEX "IX_TaxonomyRecord_BlogPostID" ON "TaxonomyRecord" ("BlogPostID");

CREATE INDEX "IX_TaxonomyRecord_BlogPostTagID" ON "TaxonomyRecord" ("BlogPostTagID");

CREATE INDEX "IX_TaxonomyRecord_BusinessID" ON "TaxonomyRecord" ("BusinessID");

CREATE INDEX "IX_TaxonomyRecord_KnowledgeArticleCategoryID" ON "TaxonomyRecord" ("KnowledgeArticleCategoryID");

CREATE INDEX "IX_TaxonomyRecord_KnowledgeArticleID" ON "TaxonomyRecord" ("KnowledgeArticleID");

CREATE INDEX "IX_TaxonomyRecord_SocialForumPostID" ON "TaxonomyRecord" ("SocialForumPostID");

CREATE INDEX "IX_TaxonomyRecord_TaxonomyID" ON "TaxonomyRecord" ("TaxonomyID");

CREATE INDEX "IX_TaxonomyRecord_WebContentID" ON "TaxonomyRecord" ("WebContentID");

CREATE INDEX "IX_TaxonomyRecord_WebPageCategoryID" ON "TaxonomyRecord" ("WebPageCategoryID");

CREATE INDEX "IX_TaxonomyRecord_WebPageCategoryRecord_WebPageID" ON "TaxonomyRecord" ("WebPageCategoryRecord_WebPageID");

CREATE INDEX "IX_TaxonomyRecord_WebPageID" ON "TaxonomyRecord" ("WebPageID");

CREATE INDEX "IX_TaxonomyRecord_WebPageTagID" ON "TaxonomyRecord" ("WebPageTagID");

CREATE INDEX "IX_TaxRate_BusinessID" ON "TaxRate" ("BusinessID");

CREATE INDEX "IX_TaxRate_BusinessProfileRecordID" ON "TaxRate" ("BusinessProfileRecordID");

CREATE INDEX "IX_TaxRate_CountryID" ON "TaxRate" ("CountryID");

CREATE INDEX "IX_TaxRate_CurrencyID" ON "TaxRate" ("CurrencyID");

CREATE INDEX "IX_TaxRate_FiscalAuthorityID" ON "TaxRate" ("FiscalAuthorityID");

CREATE INDEX "IX_TaxRate_FiscalYearID" ON "TaxRate" ("FiscalYearID");

CREATE INDEX "IX_TaxRate_TaxClassID" ON "TaxRate" ("TaxClassID");

CREATE INDEX "IX_TaxRate_TaxPolicyID" ON "TaxRate" ("TaxPolicyID");

CREATE INDEX "IX_TaxRate_UnitGroupID" ON "TaxRate" ("UnitGroupID");

CREATE INDEX "IX_TaxRate_UnitID" ON "TaxRate" ("UnitID");

CREATE INDEX "IX_TaxRateClassRecord_BusinessID" ON "TaxRateClassRecord" ("BusinessID");

CREATE INDEX "IX_TaxRateClassRecord_BusinessProfileRecordID" ON "TaxRateClassRecord" ("BusinessProfileRecordID");

CREATE INDEX "IX_TaxRateClassRecord_TaxClassID" ON "TaxRateClassRecord" ("TaxClassID");

CREATE INDEX "IX_TaxRateClassRecord_TaxRateID" ON "TaxRateClassRecord" ("TaxRateID");

CREATE INDEX "IX_Territory_AccountHolderId" ON "Territory" ("AccountHolderId");

CREATE INDEX "IX_Territory_BusinessID" ON "Territory" ("BusinessID");

CREATE INDEX "IX_Territory_BusinessProfileRecordID" ON "Territory" ("BusinessProfileRecordID");

CREATE INDEX "IX_Territory_ParentTerritoryID" ON "Territory" ("ParentTerritoryID");

CREATE INDEX "IX_TimeInterval_BusinessID" ON "TimeInterval" ("BusinessID");

CREATE INDEX "IX_TimeInterval_BusinessProfileRecordID" ON "TimeInterval" ("BusinessProfileRecordID");

CREATE INDEX "IX_TimeInterval_EmployeeProfileID" ON "TimeInterval" ("EmployeeProfileID");

CREATE INDEX "IX_TimeInterval_LeaveApplicationID" ON "TimeInterval" ("LeaveApplicationID");

CREATE INDEX "IX_TimeInterval_ParentTimeIntervalID" ON "TimeInterval" ("ParentTimeIntervalID");

CREATE INDEX "IX_TimeInterval_ScheduleID" ON "TimeInterval" ("ScheduleID");

CREATE INDEX "IX_TimeInterval_Shift_BusinessID" ON "TimeInterval" ("Shift_BusinessID");

CREATE INDEX "IX_TimeInterval_Shift_EmployeeProfileID" ON "TimeInterval" ("Shift_EmployeeProfileID");

CREATE INDEX "IX_TimeInterval_TrainingProgramEvent_BusinessID" ON "TimeInterval" ("TrainingProgramEvent_BusinessID");

CREATE INDEX "IX_TimeInterval_TrainingProgramEvent_BusinessProfileRecordID" ON "TimeInterval" ("TrainingProgramEvent_BusinessProfileRecordID");

CREATE INDEX "IX_TimeInterval_TrainingProgramID" ON "TimeInterval" ("TrainingProgramID");

CREATE INDEX "IX_TrainingProgram_BusinessID" ON "TrainingProgram" ("BusinessID");

CREATE INDEX "IX_TrainingProgram_BusinessProfileRecordID" ON "TrainingProgram" ("BusinessProfileRecordID");

CREATE INDEX "IX_TrainingProgramApplication_BusinessID" ON "TrainingProgramApplication" ("BusinessID");

CREATE INDEX "IX_TrainingProgramApplication_BusinessProfileRecordID" ON "TrainingProgramApplication" ("BusinessProfileRecordID");

CREATE INDEX "IX_TrainingProgramApplication_EmployeeProfileID" ON "TrainingProgramApplication" ("EmployeeProfileID");

CREATE INDEX "IX_TrainingProgramApplication_TrainingProgramID" ON "TrainingProgramApplication" ("TrainingProgramID");

CREATE INDEX "IX_TrainingProgramCourse_BusinessID" ON "TrainingProgramCourse" ("BusinessID");

CREATE INDEX "IX_TrainingProgramCourse_BusinessProfileRecordID" ON "TrainingProgramCourse" ("BusinessProfileRecordID");

CREATE INDEX "IX_TrainingProgramCourse_CourseID" ON "TrainingProgramCourse" ("CourseID");

CREATE INDEX "IX_TrainingProgramCourse_TrainingProgramID" ON "TrainingProgramCourse" ("TrainingProgramID");

CREATE INDEX "IX_TrainingProgramResultSet_BusinessID" ON "TrainingProgramResultSet" ("BusinessID");

CREATE INDEX "IX_TrainingProgramResultSet_BusinessProfileRecordID" ON "TrainingProgramResultSet" ("BusinessProfileRecordID");

CREATE INDEX "IX_TrainingProgramResultSet_TrainingProgramID" ON "TrainingProgramResultSet" ("TrainingProgramID");

CREATE INDEX "IX_Transaction_BankAccountID" ON "Transaction" ("BankAccountID");

CREATE INDEX "IX_Transaction_BankProfileID" ON "Transaction" ("BankProfileID");

CREATE INDEX "IX_Transaction_BusinessID" ON "Transaction" ("BusinessID");

CREATE INDEX "IX_Transaction_BusinessProfileRecordID" ON "Transaction" ("BusinessProfileRecordID");

CREATE INDEX "IX_Transaction_ContactID" ON "Transaction" ("ContactID");

CREATE INDEX "IX_Transaction_CurrencyID" ON "Transaction" ("CurrencyID");

CREATE INDEX "IX_Transaction_ProjectID" ON "Transaction" ("ProjectID");

CREATE INDEX "IX_Transaction_ProjectJournalID" ON "Transaction" ("ProjectJournalID");

CREATE INDEX "IX_Transaction_ProjectResourceID" ON "Transaction" ("ProjectResourceID");

CREATE INDEX "IX_Transaction_ProjectResourceRoleID" ON "Transaction" ("ProjectResourceRoleID");

CREATE INDEX "IX_Transaction_ProjectTaskID" ON "Transaction" ("ProjectTaskID");

CREATE INDEX "IX_Transaction_TransactionCategoryID" ON "Transaction" ("TransactionCategoryID");

CREATE INDEX "IX_Transaction_UnitGroupID" ON "Transaction" ("UnitGroupID");

CREATE INDEX "IX_Transaction_UnitID" ON "Transaction" ("UnitID");

CREATE INDEX "IX_TransactionCategory_BusinessID" ON "TransactionCategory" ("BusinessID");

CREATE INDEX "IX_TransactionCategory_BusinessProfileRecordID" ON "TransactionCategory" ("BusinessProfileRecordID");

CREATE INDEX "IX_Unit_BaseUnitID" ON "Unit" ("BaseUnitID");

CREATE INDEX "IX_Unit_BusinessID" ON "Unit" ("BusinessID");

CREATE INDEX "IX_Unit_BusinessProfileRecordID" ON "Unit" ("BusinessProfileRecordID");

CREATE INDEX "IX_Unit_UnitGroupID" ON "Unit" ("UnitGroupID");

CREATE INDEX "IX_UnitGroup_BusinessID" ON "UnitGroup" ("BusinessID");

CREATE INDEX "IX_UnitGroup_BusinessProfileRecordID" ON "UnitGroup" ("BusinessProfileRecordID");

CREATE INDEX "IX_View_EntityID" ON "View" ("EntityID");

CREATE UNIQUE INDEX "IX_WalletAccount_AccountHolderID" ON "WalletAccount" ("AccountHolderID");

CREATE INDEX "IX_WalletAccount_AccountID" ON "WalletAccount" ("AccountID");

CREATE INDEX "IX_WalletAccount_BillingProfileID" ON "WalletAccount" ("BillingProfileID");

CREATE UNIQUE INDEX "IX_WalletAccount_BusinessID" ON "WalletAccount" ("BusinessID");

CREATE UNIQUE INDEX "IX_WalletAccount_ContactID" ON "WalletAccount" ("ContactID");

CREATE INDEX "IX_WalletAccount_CountryID" ON "WalletAccount" ("CountryID");

CREATE INDEX "IX_WalletAccount_LocationID" ON "WalletAccount" ("LocationID");

CREATE INDEX "IX_WalletWithdraw_CurrencyID" ON "WalletWithdraw" ("CurrencyID");

CREATE INDEX "IX_WalletWithdraw_WalletAccountID" ON "WalletWithdraw" ("WalletAccountID");

CREATE INDEX "IX_WalletWithdraw_WalletWithdrawRequestID" ON "WalletWithdraw" ("WalletWithdrawRequestID");

CREATE INDEX "IX_WalletWithdrawRequest_BankAccountID" ON "WalletWithdrawRequest" ("BankAccountID");

CREATE INDEX "IX_WalletWithdrawRequest_BusinessID" ON "WalletWithdrawRequest" ("BusinessID");

CREATE INDEX "IX_WalletWithdrawRequest_BusinessProfileRecordID" ON "WalletWithdrawRequest" ("BusinessProfileRecordID");

CREATE INDEX "IX_WalletWithdrawRequest_CurrencyID" ON "WalletWithdrawRequest" ("CurrencyID");

CREATE INDEX "IX_WalletWithdrawRequest_WalletAccountID" ON "WalletWithdrawRequest" ("WalletAccountID");

CREATE INDEX "IX_WebContent_BlogPostCategoryID" ON "WebContent" ("BlogPostCategoryID");

CREATE INDEX "IX_WebContent_BusinessID" ON "WebContent" ("BusinessID");

CREATE INDEX "IX_WebContent_BusinessProfileRecordID" ON "WebContent" ("BusinessProfileRecordID");

CREATE INDEX "IX_WebContent_CourseAssignmentComponent_CourseID" ON "WebContent" ("CourseAssignmentComponent_CourseID");

CREATE INDEX "IX_WebContent_CourseAssignmentID" ON "WebContent" ("CourseAssignmentID");

CREATE INDEX "IX_WebContent_CourseCompletionCertificateTemplate_CourseID" ON "WebContent" ("CourseCompletionCertificateTemplate_CourseID");

CREATE INDEX "IX_WebContent_CourseForum_CourseID" ON "WebContent" ("CourseForum_CourseID");

CREATE INDEX "IX_WebContent_CourseID" ON "WebContent" ("CourseID");

CREATE INDEX "IX_WebContent_CoursePage_CourseID" ON "WebContent" ("CoursePage_CourseID");

CREATE INDEX "IX_WebContent_CourseUnitComponent_CourseID" ON "WebContent" ("CourseUnitComponent_CourseID");

CREATE INDEX "IX_WebContent_CourseUnitID" ON "WebContent" ("CourseUnitID");

CREATE INDEX "IX_WebContent_CourseUpdate_CourseID" ON "WebContent" ("CourseUpdate_CourseID");

CREATE INDEX "IX_WebContent_CourseWikiID" ON "WebContent" ("CourseWikiID");

CREATE INDEX "IX_WebContent_MarketingCampaignID" ON "WebContent" ("MarketingCampaignID");

CREATE INDEX "IX_WebContent_NewsletterID" ON "WebContent" ("NewsletterID");

CREATE INDEX "IX_WebContent_ParentWebContentID" ON "WebContent" ("ParentWebContentID");

CREATE INDEX "IX_WebContent_ParentWebContentVersionID" ON "WebContent" ("ParentWebContentVersionID");

CREATE INDEX "IX_WebContent_SocialProfileID" ON "WebContent" ("SocialProfileID");

CREATE INDEX "IX_WebContent_WebFormID" ON "WebContent" ("WebFormID");

CREATE INDEX "IX_WebContent_WebForum_WebTemplateID" ON "WebContent" ("WebForum_WebTemplateID");

CREATE INDEX "IX_WebContent_WebForumCategoryID" ON "WebContent" ("WebForumCategoryID");

CREATE INDEX "IX_WebContent_WebPage_WebFormID" ON "WebContent" ("WebPage_WebFormID");

CREATE INDEX "IX_WebContent_WebPage_WebTemplateID" ON "WebContent" ("WebPage_WebTemplateID");

CREATE INDEX "IX_WebContent_WebPortalID" ON "WebContent" ("WebPortalID");

CREATE INDEX "IX_WebContent_WebsiteThemeID" ON "WebContent" ("WebsiteThemeID");

CREATE INDEX "IX_WebContent_WebTemplateID" ON "WebContent" ("WebTemplateID");

CREATE INDEX "IX_WebFormSubmit_WebFormID" ON "WebFormSubmit" ("WebFormID");

CREATE INDEX "IX_WebhookRequestCondition_WebhookRequestID" ON "WebhookRequestCondition" ("WebhookRequestID");

CREATE INDEX "IX_WebhookRequestDataEntry_WebhookRequestID" ON "WebhookRequestDataEntry" ("WebhookRequestID");

CREATE INDEX "IX_WebhookRequestHeader_WebhookRequestID" ON "WebhookRequestHeader" ("WebhookRequestID");

CREATE INDEX "IX_WebPortal_BusinessDomainID" ON "WebPortal" ("BusinessDomainID");

CREATE INDEX "IX_WebPortal_BusinessID" ON "WebPortal" ("BusinessID");

CREATE INDEX "IX_WebPortal_BusinessPortalApplicationID" ON "WebPortal" ("BusinessPortalApplicationID");

CREATE INDEX "IX_WebPortal_BusinessProfileRecordID" ON "WebPortal" ("BusinessProfileRecordID");

CREATE INDEX "IX_WebPortal_WebsiteThemeID" ON "WebPortal" ("WebsiteThemeID");

CREATE INDEX "IX_WebPortalBusinessDomainRecord_BusinessDomainID" ON "WebPortalBusinessDomainRecord" ("BusinessDomainID");

CREATE INDEX "IX_WebPortalBusinessDomainRecord_WebPortalID" ON "WebPortalBusinessDomainRecord" ("WebPortalID");

CREATE INDEX "IX_WebResource_BusinessID" ON "WebResource" ("BusinessID");

CREATE INDEX "IX_WebResource_WebsiteThemeID" ON "WebResource" ("WebsiteThemeID");

CREATE INDEX "IX_WebsiteTheme_BusinessID" ON "WebsiteTheme" ("BusinessID");

CREATE INDEX "IX_WishList_CartID" ON "WishList" ("CartID");

CREATE INDEX "IX_WishList_ContactID" ON "WishList" ("ContactID");

CREATE INDEX "IX_WishListRecord_ItemID" ON "WishListRecord" ("ItemID");

CREATE INDEX "IX_WishListRecord_WishListID" ON "WishListRecord" ("WishListID");

CREATE INDEX "IX_Workflow_BusinessID" ON "Workflow" ("BusinessID");

CREATE INDEX "IX_Workflow_WebPortalID" ON "Workflow" ("WebPortalID");

CREATE INDEX "IX_WorkflowExecution_WorkflowID" ON "WorkflowExecution" ("WorkflowID");

CREATE INDEX "IX_WorkflowExecution_WorkflowStageID" ON "WorkflowExecution" ("WorkflowStageID");

CREATE INDEX "IX_WorkflowStage_ParentWorkflowStageID" ON "WorkflowStage" ("ParentWorkflowStageID");

CREATE INDEX "IX_WorkflowStage_WorkflowID" ON "WorkflowStage" ("WorkflowID");

CREATE INDEX "IX_WorkflowState_WorkflowExecutionID" ON "WorkflowState" ("WorkflowExecutionID");

CREATE INDEX "IX_WorkflowState_WorkflowID" ON "WorkflowState" ("WorkflowID");

CREATE INDEX "IX_WorkflowState_WorkflowStageID" ON "WorkflowState" ("WorkflowStageID");

CREATE INDEX "IX_WorkOrderType_BusinessID" ON "WorkOrderType" ("BusinessID");

CREATE INDEX "IX_WorkOrderType_BusinessProfileRecordID" ON "WorkOrderType" ("BusinessProfileRecordID");

CREATE INDEX "IX_Workstation_BusinessID" ON "Workstation" ("BusinessID");

CREATE INDEX "IX_Workstation_BusinessProfileRecordID" ON "Workstation" ("BusinessProfileRecordID");

CREATE INDEX "IX_Workstation_LocationID" ON "Workstation" ("LocationID");

ALTER TABLE "AccessKeyPair" ADD CONSTRAINT "FK_AccessKeyPair_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "AccessKeyPair" ADD CONSTRAINT "FK_AccessKeyPair_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AccessKeyPair" ADD CONSTRAINT "FK_AccessKeyPair_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AccessKeyPair" ADD CONSTRAINT "FK_AccessKeyPair_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_AccountGroup_AccountGroupID" FOREIGN KEY ("AccountGroupID") REFERENCES "AccountGroup" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_AccountType_AccountTypeID" FOREIGN KEY ("AccountTypeID") REFERENCES "AccountType" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_ContactProfile_BankProfileID" FOREIGN KEY ("BankProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_ContactProfile_BillingProfileID" FOREIGN KEY ("BillingProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "Account" ADD CONSTRAINT "FK_Account_Ledger_LedgerID" FOREIGN KEY ("LedgerID") REFERENCES "Ledger" ("ID");

ALTER TABLE "AccountGroup" ADD CONSTRAINT "FK_AccountGroup_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AccountGroup" ADD CONSTRAINT "FK_AccountGroup_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AccountHolderLogin" ADD CONSTRAINT "FK_AccountHolderLogin_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "AccountHolderLogin" ADD CONSTRAINT "FK_AccountHolderLogin_IPLookup_IPLookupID" FOREIGN KEY ("IPLookupID") REFERENCES "IPLookup" ("ID");

ALTER TABLE "AccountHolderSettings" ADD CONSTRAINT "FK_AccountHolderSettings_AspNetUsers_AccountHolderID" FOREIGN KEY ("AccountHolderID") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_ContactProfile_BankProfileID" FOREIGN KEY ("BankProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_JournalEntry_JournalEntryID" FOREIGN KEY ("JournalEntryID") REFERENCES "JournalEntry" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_Payment_PaymentChargeback_PaymentID" FOREIGN KEY ("PaymentChargeback_PaymentID") REFERENCES "Payment" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_PaymentDispute_PaymentChargeback_PaymentDis~" FOREIGN KEY ("PaymentChargeback_PaymentDisputeID") REFERENCES "PaymentDispute" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_PaymentDispute_PaymentDisputeID" FOREIGN KEY ("PaymentDisputeID") REFERENCES "PaymentDispute" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_SupportRequest_RefundRequestID" FOREIGN KEY ("RefundRequestID") REFERENCES "SupportRequest" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_WalletAccount_PaymentChargeback_WalletAccou~" FOREIGN KEY ("PaymentChargeback_WalletAccountID") REFERENCES "WalletAccount" ("ID");

ALTER TABLE "AccountingEntry" ADD CONSTRAINT "FK_AccountingEntry_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID");

ALTER TABLE "AccountingPeriodClosingVoucher" ADD CONSTRAINT "FK_AccountingPeriodClosingVoucher_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AccountingPeriodClosingVoucher" ADD CONSTRAINT "FK_AccountingPeriodClosingVoucher_BusinessProfileRecord_Busine~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AccountingPeriodClosingVoucher" ADD CONSTRAINT "FK_AccountingPeriodClosingVoucher_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID");

ALTER TABLE "AccountRelation" ADD CONSTRAINT "FK_AccountRelation_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AccountRelation" ADD CONSTRAINT "FK_AccountRelation_BusinessProfileRecord_BusinessProfileRecord~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AccountRelation" ADD CONSTRAINT "FK_AccountRelation_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID");

ALTER TABLE "AccountType" ADD CONSTRAINT "FK_AccountType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AccountType" ADD CONSTRAINT "FK_AccountType_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_DealUnit_DealUnitID" FOREIGN KEY ("DealUnitID") REFERENCES "DealUnit" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_GigApplication_GigApplicationID" FOREIGN KEY ("GigApplicationID") REFERENCES "GigApplication" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_JobOfferApplication_JobOfferApplicationID" FOREIGN KEY ("JobOfferApplicationID") REFERENCES "JobOfferApplication" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_MarketingCampaign_MarketingCampaignID" FOREIGN KEY ("MarketingCampaignID") REFERENCES "MarketingCampaign" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_MarketingList_MarketingListID" FOREIGN KEY ("MarketingListID") REFERENCES "MarketingList" ("ID");

ALTER TABLE "ActivityFeed" ADD CONSTRAINT "FK_ActivityFeed_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID");

ALTER TABLE "ActivityRecord" ADD CONSTRAINT "FK_ActivityRecord_ActivityType_ActivityTypeID" FOREIGN KEY ("ActivityTypeID") REFERENCES "ActivityType" ("ID");

ALTER TABLE "ActivityRecord" ADD CONSTRAINT "FK_ActivityRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "ActivityRecord" ADD CONSTRAINT "FK_ActivityRecord_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "ActivityRecord" ADD CONSTRAINT "FK_ActivityRecord_BusinessProfileRecord_InChargeBusinessProfil~" FOREIGN KEY ("InChargeBusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "ActivityType" ADD CONSTRAINT "FK_ActivityType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "ActivityType" ADD CONSTRAINT "FK_ActivityType_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "Agreement" ADD CONSTRAINT "FK_Agreement_AgreementType_AgreementTypeID" FOREIGN KEY ("AgreementTypeID") REFERENCES "AgreementType" ("ID");

ALTER TABLE "Agreement" ADD CONSTRAINT "FK_Agreement_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "Agreement" ADD CONSTRAINT "FK_Agreement_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "AgreementRevision" ADD CONSTRAINT "FK_AgreementRevision_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AgreementType" ADD CONSTRAINT "FK_AgreementType_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AppliedFee" ADD CONSTRAINT "FK_AppliedFee_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID");

ALTER TABLE "AppliedFee" ADD CONSTRAINT "FK_AppliedFee_PaymentGateway_PaymentGatewayID" FOREIGN KEY ("PaymentGatewayID") REFERENCES "PaymentGateway" ("ID");

ALTER TABLE "AppliedFee" ADD CONSTRAINT "FK_AppliedFee_WalletWithdraw_WalletWithdrawID" FOREIGN KEY ("WalletWithdrawID") REFERENCES "WalletWithdraw" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_BillingItemRecord_BillingItemRecordID" FOREIGN KEY ("BillingItemRecordID") REFERENCES "BillingItemRecord" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_BusinessProfileRecord_BusinessProfil~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_Invoice_InvoiceID" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID");

ALTER TABLE "AppliedTaxPolicyRecord" ADD CONSTRAINT "FK_AppliedTaxPolicyRecord_Policy_TaxPolicyID" FOREIGN KEY ("TaxPolicyID") REFERENCES "Policy" ("ID");

ALTER TABLE "AppraisalSession" ADD CONSTRAINT "FK_AppraisalSession_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AppraisalSession" ADD CONSTRAINT "FK_AppraisalSession_BusinessProcess_AppraisalWorkflowID" FOREIGN KEY ("AppraisalWorkflowID") REFERENCES "BusinessProcess" ("ID");

ALTER TABLE "AppraisalSession" ADD CONSTRAINT "FK_AppraisalSession_BusinessProcessStage_AppraisalStageID" FOREIGN KEY ("AppraisalStageID") REFERENCES "BusinessProcessStage" ("ID");

ALTER TABLE "AppraisalSession" ADD CONSTRAINT "FK_AppraisalSession_BusinessProfileRecord_BusinessProfileRecor~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "AppraisalSession" ADD CONSTRAINT "FK_AppraisalSession_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "AspNetUserClaims" ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "AspNetUserLogins" ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "AspNetUserRoles" ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id");

ALTER TABLE "AspNetUsers" ADD CONSTRAINT "FK_AspNetUsers_Business_SelectedBusinessID" FOREIGN KEY ("SelectedBusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_AssetCategory_AssetCategoryID" FOREIGN KEY ("AssetCategoryID") REFERENCES "AssetCategory" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_BusinessDepartment_OrganizationDepartmentID" FOREIGN KEY ("OrganizationDepartmentID") REFERENCES "BusinessDepartment" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_FinancialBook_FinancialBookID" FOREIGN KEY ("FinancialBookID") REFERENCES "FinancialBook" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_Invoice_PurchaseInvoiceID" FOREIGN KEY ("PurchaseInvoiceID") REFERENCES "Invoice" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_Location_AssetLocationID" FOREIGN KEY ("AssetLocationID") REFERENCES "Location" ("ID");

ALTER TABLE "Asset" ADD CONSTRAINT "FK_Asset_Receipt_PurchaseReceiptID" FOREIGN KEY ("PurchaseReceiptID") REFERENCES "Receipt" ("ID");

ALTER TABLE "AssetCategory" ADD CONSTRAINT "FK_AssetCategory_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AssetDepreciationRecord" ADD CONSTRAINT "FK_AssetDepreciationRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AssetDepreciationRecord" ADD CONSTRAINT "FK_AssetDepreciationRecord_FinancialBook_FinancialBookID" FOREIGN KEY ("FinancialBookID") REFERENCES "FinancialBook" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_BusinessDepartment_DestinationDepartmentID" FOREIGN KEY ("DestinationDepartmentID") REFERENCES "BusinessDepartment" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_BusinessDepartment_SourceDepartmentID" FOREIGN KEY ("SourceDepartmentID") REFERENCES "BusinessDepartment" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_Contact_DestinationContactID" FOREIGN KEY ("DestinationContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_Contact_SourceContactID" FOREIGN KEY ("SourceContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_Location_DestinationLocationID" FOREIGN KEY ("DestinationLocationID") REFERENCES "Location" ("ID");

ALTER TABLE "AssetTransfer" ADD CONSTRAINT "FK_AssetTransfer_Location_SourceLocationID" FOREIGN KEY ("SourceLocationID") REFERENCES "Location" ("ID");

ALTER TABLE "AssetValueAmend" ADD CONSTRAINT "FK_AssetValueAmend_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "AssetValueAmend" ADD CONSTRAINT "FK_AssetValueAmend_FinancialBook_FinancialBookID" FOREIGN KEY ("FinancialBookID") REFERENCES "FinancialBook" ("ID");

ALTER TABLE "BankGuarantee" ADD CONSTRAINT "FK_BankGuarantee_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "BankGuarantee" ADD CONSTRAINT "FK_BankGuarantee_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "BankGuarantee" ADD CONSTRAINT "FK_BankGuarantee_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "BankGuarantee" ADD CONSTRAINT "FK_BankGuarantee_ContactProfile_BankProfileID" FOREIGN KEY ("BankProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "BankGuarantee" ADD CONSTRAINT "FK_BankGuarantee_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID");

ALTER TABLE "BankGuarantee" ADD CONSTRAINT "FK_BankGuarantee_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID");

ALTER TABLE "BillingCoupon" ADD CONSTRAINT "FK_BillingCoupon_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "BillingCoupon" ADD CONSTRAINT "FK_BillingCoupon_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_BusinessProfileRecord_BusinessProfileReco~" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Cart_CartID" FOREIGN KEY ("CartID") REFERENCES "Cart" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_DealUnit_DealUnitID" FOREIGN KEY ("DealUnitID") REFERENCES "DealUnit" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Invoice_InvoiceID" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Order_OrderID" FOREIGN KEY ("OrderID") REFERENCES "Order" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Order_OrderItemRecord_OrderID" FOREIGN KEY ("OrderItemRecord_OrderID") REFERENCES "Order" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Order_ParentOrderID" FOREIGN KEY ("ParentOrderID") REFERENCES "Order" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Policy_ItemShipmentPolicyID" FOREIGN KEY ("ItemShipmentPolicyID") REFERENCES "Policy" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Policy_RefundPolicyID" FOREIGN KEY ("RefundPolicyID") REFERENCES "Policy" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Policy_ReturnPolicyID" FOREIGN KEY ("ReturnPolicyID") REFERENCES "Policy" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Policy_WarrantyPolicyID" FOREIGN KEY ("WarrantyPolicyID") REFERENCES "Policy" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_PriceListItem_ItemPriceID" FOREIGN KEY ("ItemPriceID") REFERENCES "PriceListItem" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_PriceListItem_PriceListItemID" FOREIGN KEY ("PriceListItemID") REFERENCES "PriceListItem" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Quote_QuoteID" FOREIGN KEY ("QuoteID") REFERENCES "Quote" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_Unit_UnitID" FOREIGN KEY ("UnitID") REFERENCES "Unit" ("ID");

ALTER TABLE "BillingItemRecord" ADD CONSTRAINT "FK_BillingItemRecord_UnitGroup_UnitGroupID" FOREIGN KEY ("UnitGroupID") REFERENCES "UnitGroup" ("ID");

ALTER TABLE "Blockchain" ADD CONSTRAINT "FK_Blockchain_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "Blockchain" ADD CONSTRAINT "FK_Blockchain_BusinessProfileRecord_BusinessProfileRecordID" FOREIGN KEY ("BusinessProfileRecordID") REFERENCES "BusinessProfileRecord" ("ID");

ALTER TABLE "BlockchainBlock" ADD CONSTRAINT "FK_BlockchainBlock_Item_NonFungibleTokenID" FOREIGN KEY ("NonFungibleTokenID") REFERENCES "Item" ("ID");

ALTER TABLE "BlockchainBlock" ADD CONSTRAINT "FK_BlockchainBlock_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID");

ALTER TABLE "BlockRecord" ADD CONSTRAINT "FK_BlockRecord_SocialProfile_BlockedSocialProfileID" FOREIGN KEY ("BlockedSocialProfileID") REFERENCES "SocialProfile" ("ID");

ALTER TABLE "BlockRecord" ADD CONSTRAINT "FK_BlockRecord_SocialProfile_BlockerSocialProfileID" FOREIGN KEY ("BlockerSocialProfileID") REFERENCES "SocialProfile" ("ID");

ALTER TABLE "BrandRecord" ADD CONSTRAINT "FK_BrandRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "BrandRecord" ADD CONSTRAINT "FK_BrandRecord_ItemBrand_BrandID" FOREIGN KEY ("BrandID") REFERENCES "ItemBrand" ("ID");

ALTER TABLE "Budget" ADD CONSTRAINT "FK_Budget_Business_BusinessID" FOREIGN KEY ("BusinessID") REFERENCES "Business" ("ID");

ALTER TABLE "Budget" ADD CONSTRAINT "FK_Budget_CostCentre_CostCentreID" FOREIGN KEY ("CostCentreID") REFERENCES "CostCentre" ("ID");

ALTER TABLE "Budget" ADD CONSTRAINT "FK_Budget_FiscalYear_FiscalYearID" FOREIGN KEY ("FiscalYearID") REFERENCES "FiscalYear" ("ID");

ALTER TABLE "Budget" ADD CONSTRAINT "FK_Budget_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID");

ALTER TABLE "Business" ADD CONSTRAINT "FK_Business_BusinessIndustry_BusinessIndustryID" FOREIGN KEY ("BusinessIndustryID") REFERENCES "BusinessIndustry" ("ID");

ALTER TABLE "BusinessDepartment" ADD CONSTRAINT "FK_BusinessDepartment_ContactProfile_OrganizationProfileID" FOREIGN KEY ("OrganizationProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "BusinessSecurityLog" ADD CONSTRAINT "FK_BusinessSecurityLog_ContactProfile_SigningProfileID" FOREIGN KEY ("SigningProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "BusinessSecurityLog" ADD CONSTRAINT "FK_BusinessSecurityLog_SignedDocument_SignedDocumentID" FOREIGN KEY ("SignedDocumentID") REFERENCES "SignedDocument" ("ID");

ALTER TABLE "BusinessSecurityLog" ADD CONSTRAINT "FK_BusinessSecurityLog_SigningCertificate_SigningCertificateID" FOREIGN KEY ("SigningCertificateID") REFERENCES "SigningCertificate" ("ID");

ALTER TABLE "BusinessTeam" ADD CONSTRAINT "FK_BusinessTeam_BusinessUnit_BusinessUnitID" FOREIGN KEY ("BusinessUnitID") REFERENCES "BusinessUnit" ("ID");

ALTER TABLE "BusinessTeam" ADD CONSTRAINT "FK_BusinessTeam_ContactProfile_OrganizationProfileID" FOREIGN KEY ("OrganizationProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "BusinessTeamRecord" ADD CONSTRAINT "FK_BusinessTeamRecord_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "BusinessTeamRecord" ADD CONSTRAINT "FK_BusinessTeamRecord_ContactProfile_EmployeeProfileID" FOREIGN KEY ("EmployeeProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "BusinessTeamRecord" ADD CONSTRAINT "FK_BusinessTeamRecord_Project_ProjectID" FOREIGN KEY ("ProjectID") REFERENCES "Project" ("ID");

ALTER TABLE "BusinessUnit" ADD CONSTRAINT "FK_BusinessUnit_ContactProfile_OrganizationProfileID" FOREIGN KEY ("OrganizationProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "Cart" ADD CONSTRAINT "FK_Cart_Contact_ContactID" FOREIGN KEY ("ContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "Cart" ADD CONSTRAINT "FK_Cart_Location_LocationID" FOREIGN KEY ("LocationID") REFERENCES "Location" ("ID");

ALTER TABLE "CartRecord" ADD CONSTRAINT "FK_CartRecord_Item_ItemCartRecord_ItemID" FOREIGN KEY ("ItemCartRecord_ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "CartRecord" ADD CONSTRAINT "FK_CartRecord_Item_ItemID" FOREIGN KEY ("ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "CartRecord" ADD CONSTRAINT "FK_CartRecord_Item_RecentlyViewedItemRecord_ItemID" FOREIGN KEY ("RecentlyViewedItemRecord_ItemID") REFERENCES "Item" ("ID");

ALTER TABLE "CartRecord" ADD CONSTRAINT "FK_CartRecord_Location_ShippingAddressID" FOREIGN KEY ("ShippingAddressID") REFERENCES "Location" ("ID");

ALTER TABLE "CognitiveAgentConversation" ADD CONSTRAINT "FK_CognitiveAgentConversation_Contact_IndividualID" FOREIGN KEY ("IndividualID") REFERENCES "Contact" ("ID");

ALTER TABLE "CognitiveAgentConversation" ADD CONSTRAINT "FK_CognitiveAgentConversation_Contact_OrganizationID" FOREIGN KEY ("OrganizationID") REFERENCES "Contact" ("ID");

ALTER TABLE "Commission" ADD CONSTRAINT "FK_Commission_Contact_EmmisorContactID" FOREIGN KEY ("EmmisorContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "Commission" ADD CONSTRAINT "FK_Commission_Contact_ReceptorContactID" FOREIGN KEY ("ReceptorContactID") REFERENCES "Contact" ("ID");

ALTER TABLE "Commission" ADD CONSTRAINT "FK_Commission_Payment_PaymentID" FOREIGN KEY ("PaymentID") REFERENCES "Payment" ("ID");

ALTER TABLE "Commission" ADD CONSTRAINT "FK_Commission_Salary_SalaryID" FOREIGN KEY ("SalaryID") REFERENCES "Salary" ("ID");

ALTER TABLE "Commission" ADD CONSTRAINT "FK_Commission_WalletAccount_EmmisorWalletAccountID" FOREIGN KEY ("EmmisorWalletAccountID") REFERENCES "WalletAccount" ("ID");

ALTER TABLE "Commission" ADD CONSTRAINT "FK_Commission_WalletAccount_ReceptorWalletAccountID" FOREIGN KEY ("ReceptorWalletAccountID") REFERENCES "WalletAccount" ("ID");

ALTER TABLE "Contact" ADD CONSTRAINT "FK_Contact_ContactProfile_PartnerProfileID" FOREIGN KEY ("PartnerProfileID") REFERENCES "ContactProfile" ("ID");

ALTER TABLE "ContactProfile" ADD CONSTRAINT "FK_ContactProfile_WalletAccount_WalletAccountID" FOREIGN KEY ("WalletAccountID") REFERENCES "WalletAccount" ("ID");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220630234341_V_1_7_9', '6.0.6');

COMMIT;

